<title>IC Builder</title>
<H1>IC Builder</H1>

<b>Synopsis:</b>

The IC Builder is a PC-based tool to help the user define active
index cells.  Once an ic is defined, the IC Builder creates a
formal specificatin file *.in such as ic1.in.  After all the ic's have
have been defined, the IC Builder generates a file ic.dat to
characterize an application.  This file ic.dat becomes the input
to the next tool, the <a href="http://www.cs.pitt.edu/~chang/231/ictools/IC_Compiler/README.ICC.html">IC Compiler</a>.
The ic specification files *.in, on the other hand, become the
input to the customized IC Manager.
See the <a href="http://www.cs.pitt.edu/~chang/231/ictools/IC_Builder/icb_manual.html">IC Builder Manual</a>.

<pre>
The steps to run IC Builder under Windows XP or Vista are as follows:

1. Right click the ICTAPP.EXE, click the "property".
2. In the prompted dialog box, click the tab of "Compatibility"
3. Make sure that the "Run this program in compatibility mode for"
4. Choose the Window98/Windows Me.
5. Click OK.

And the IC Builder could run smoothly.


The new Symbolic Version of IC_Builder has the following features:

1) Don't need to input the message ID for the messages, i.e. directly
   use the symbolic name of the message.

2) The ic.dat file will be automatically generated.

3) Simple project manager manages all the ICs in the project

4) IC_Builder now knows whether the current file has been changed or not.


Follow the following steps to create the ICs and .in, ic.dat files
1) Create a directory, which will contain all the project files later.
   For example, c:\proj1

2) In the IC Builder menu bar, find the 'simulation' menu. Select the 
   'options' menu item. 

   This will bring up a dialog which ask you to specify the executable
   application file and the message input file.
   
   For example,if your excutable file will be wag.exe, then at the
   first line input following:
       c:\proj1\wag.exe
   The second line can be something like:
       c:\proj1\mag.in
    which means the message input file is msg.in

   These two inputs are served as the simulation purpose in IC_Builder.
   But they are also used to determine the project directory, which
   will be substract from the executable file path. This means all the
   files generated by IC_Builder will be put in this directory.

3) Also in the 'simulation' menu, select the 'project' item to define the
   project files in the project. You could add or remove the files from
   the project.
   please use the name of IC file, don't use the .in name. For example,
   if your project contains three ics: WAG, BBC, LBC
   then the project files could be:
     WAG.gra BBC.gra, LBC.gra

4) Follow the User manual of the IC_Builder to create ICs. The input
   message and output message specification dialogs are different now,
   but you can easily understand from the interface what are needed.

5) After create all the ICs, click the 'export' button to export the 
   .in files and ic.dat. IC_Builder will create .in file for each
   IC, the name of .in file is same as its graphic file.  
   
</pre>

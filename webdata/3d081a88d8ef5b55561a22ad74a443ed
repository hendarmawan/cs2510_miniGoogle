<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>Microsoft .NET Presentation</title>
</head>

<body bgcolor="#FFFFFF">

<table border="0" width="100%">
    <tr>
        <td valign="top"><a href="slide-21.htm"><img
        src="previous.gif" border="0" width="26" height="26"></a></td>
        <td align="center" valign="top"><h1>&nbsp; Smart Objects
        and Smart Devices</h1>
        </td>
        <td align="right" valign="top"><a href="slide-23.htm"><img
        src="next.gif" border="0" width="26" height="26"></a></td>
    </tr>
</table>

<p><font color="#000000" size="4">So, how does .NET contribute to
the development of smart objects and smart devices, as discussed
in class?</font></p>

<p><font color="#000000" size="4">For one, it's use of open
standards (hopefully) guarantees wider acceptance - no one has to
worry about locking themselves into a specific vendor or product
line just to be able to use things like web services. Second, the
use of XML opens up many proprietary data formats into a more
readable format. Thus, it becomes possible for applications to
use data originating from another application entirely.</font></p>

<p><font color="#000000" size="4">XML also abstracts the data
from its presentation. This is significant, since presentation
data can make information otherwise useful unusable by a device
not understanding it. Thus, by eliminating presentation data it
becomes possible for a system like a PC to present and allow
access to data in one manner while allowing simpler devices like
PDAs and cell phones to present it in a more reduced fashion
suitable for their capabilities.</font></p>

<p><font color="#000000" size="4">By using SOAP, it also ensures
that even these simplest of devices will be able to harness the
full power of web services available to it over the Internet.
Inter-network security issues are effectively bypassed by using
existing openings in firewalls and other servers for HTTP, HTTPS
and SSL while still providing secure transmissions, thus
simplifying deployment of distributed applications. Existing HTTP
servers can easily be upgraded to support SOAP. And SOAP is
gaining widespread industry support, even from traditional
enemies like Microsoft and Sun.</font></p>

<hr>

<p><font color="#000000"><em>Musings on the aforementioned</em></font></p>
</body>
</html>

<title>Modular Design</title>
<A HREF="c04.htm"><IMG SRC="previous.gif" align=left></A>
<A HREF="c07.htm"><IMG SRC="next.gif" align=right></A>

<center>
<h1>Modularity and Software Cost</h1>
</center>



As the number of modules increases, the implementation cost per module decreases
because the modules become simpler.
But at the same time the interface cost per module increases
because there are more modules to control and communicate with.
As a result, we cannot say more modules always lead to better design.
There is an "optimal" region of minimum cost.
<h2>Cohesion</h2>

Cohesion is a measure of the relative functional strength
of a module, or the degree to which a module performs a single,
isolated task.
<p>
<b>Low cohesion is bad, high cohesion is good</b>
<p>
<font color=red>
<li>Coincidental cohesion (scatter-brained)<br>
<li>Logical cohesion (functions logically related)<br>
<li>Temporal cohesion (functions temporally related and constrained)<br>
<li>Procedural cohesion (functions must be executed in fixed order)<br>
<li>Communicational cohesion (sequential functions concentrate on one specific area of software data structure)<br>
<li>Informational cohesion (all functions concentrate on one specific area of software data structure)<br>
<li>Functional cohesion<br>
</font>

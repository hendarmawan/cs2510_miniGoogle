<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<!-- saved from url=(0044)http://www.cs.pitt.edu/~chang/163/c17/01.htm -->
  <title>Session Beans (Contd)...</title>
  <meta content="Microsoft FrontPage 4.0" name="GENERATOR">
  <meta content="FrontPage.Editor.Document" name="ProgId">
  <meta http-equiv="Content-Type"
 content="text/html; charset=windows-1252">
  <meta name="author" content="Chirag Vaidya">
</head>
<body>
<a href="c06.htm"><img
 style="border: 0px solid ; height: 26px; width: 26px;"
 src="previous.gif" align="left" title="" alt=""></a> <a href="c08.htm"><img
 style="border: 0px solid ; height: 26px; width: 26px;" src="next.gif"
 align="right" title="" alt=""></a>
<h2 align="center" style="color: rgb(51, 51, 255);"><big>Component Types -- Session Beans (Contd)...<br>
</big></h2>
<big><big>
<big style="color: rgb(255, 0, 0);">Container-Managed
Transaction </big></big></big>
<big style="color: rgb(255, 0, 0);"><font size="6">Demarcation</font></big><big><big><big style="color: rgb(255, 0, 0);">:</big></big></big>
<ul>
  <li>
    <p style="margin-top: 12; margin-bottom: 0"><big><big>Container enforces all the transactional rules for the
session bean based upon information specified when the component was
deployed.</big></big></li>
  <li>
    <p style="margin-top: 12; margin-bottom: 0"><big><big>Lacks developer
    specification of transaction boundaries.</big></big></li>
  <li>
    <p style="margin-top: 12; margin-bottom: 0"><big><big>Each method of a session bean can be assigned a
transactional attribute at deployment.</big></big></li>
  <li>
    <p style="margin-top: 12; margin-bottom: 0"><big><big>Allows demarcation of
    transactions at </big></big><big><big>beginning</big></big><big><big> and
    end of methods.</big></big></li>
  <li>
    <p style="margin-top: 12; margin-bottom: 0"><small><big><big><big>6 different transaction attributes that are
available to select for beans</big></big></big></small><big><big><big><small>:</small></big></big></big>
    <ul>
      <li>
        <p style="margin-top: 6; margin-bottom: 0"><font size="4" face="Courier New"><font color="#FF00FF"><b>Not
        Supported</b>:</font> Method does not support transactions</font></li>
      <li>
        <p style="margin-top: 6; margin-bottom: 0"><font size="4" face="Courier New"><font color="#FF00FF"><b>Required</b>:</font>
        Method requires a transaction. EJB container creates a new transaction
        if the method is invoked without an existing transaction.</font></li>
      <li>
        <p style="margin-top: 6; margin-bottom: 0"><font size="4" face="Courier New"><font color="#FF00FF"><b>Supports</b>:</font>
        Method supports transaction. Will not create a new transaction but will
        execute as a part of an existing transaction if available.</font></li>
      <li>
        <p style="margin-top: 6; margin-bottom: 0"><font size="4" face="Courier New"><font color="#FF00FF"><b>RequiresNew</b>:
        </font>Method requires a new transaction. EJB container suspends
        existing transaction context and starts a new transaction.</font></li>
      <li>
        <p style="margin-top: 6; margin-bottom: 0"><font size="4" face="Courier New"><font color="#FF00FF"><b>Mandatory</b>:</font>
        The method must execute in an existing transaction context.</font></li>
      <li>
        <p style="margin-top: 6; margin-bottom: 0"><font size="4" face="Courier New"><font color="#FF00FF"><b>Never</b>:</font>
        The method must not execute in a transaction context.<br>
        </font></li>
    </ul>
  </li>
</ul>
<p><big><big>
<big style="color: rgb(255, 0, 0);">Bean-Managed Transaction </big></big></big>
<big style="color: rgb(255, 0, 0);"><font size="6">Demarcation</font></big><big><big><big style="color: rgb(255, 0, 0);">:</big></big></big></p>
<ul>
  <li>
    <p style="margin-top: 12; margin-bottom: 0"><big><big>No help from the
    container</big></big></li>
  <li>
    <p style="margin-top: 12; margin-bottom: 0"><big><big>Initiate and terminate
    transactions for themselves using Java Transaction API.</big></big></li>
  <li>
    <p style="margin-top: 12; margin-bottom: 0"><big><big><font color="#FF00FF">More
    work</font> but <font color="#008000">greater flexibility</font>.</big></big></li>
  <li>
    <p style="margin-top: 12; margin-bottom: 0"><big><big>Not confined to
    demarcating transactions just at the </big></big><big><big>beginning</big></big><big><big>
    and end of methods.</big></big></li>
  <li>
    <p style="margin-top: 12; margin-bottom: 0"><big><big>Can begin a
    transaction in one method and commit later in another method.</big></big> <big><big>Also can begin and
    commit a transaction many times.</big></big></li>
  <li>
    <p style="margin-top: 12; margin-bottom: 0"><big><big>EJB Spec does not
    allow session beans to nest transactions.</big></big></li>
</ul>
<big><big><small></small></big></big>
</body>
</html>

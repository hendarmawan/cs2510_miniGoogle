PROFESSOR:    FIRST I WILL GO OVER HOME WORK 4
BECAUSE WHEN I GRADE IT I FOUND SOME
PROBLEM ESPECIALLY IN PROBLEM C TO SETTING
UP B PLUS TREE.  SO HERE I JUST WANT TO GO
OVER IT.  FIRST THING ON PROBLEM C.  P
EQUALS TO 4.  WHAT DOES IT MEAN?  IT MEANS
THAT FOR EACH NODE THE TREE, THE POINTERS
WE SHOULD AT MOST HAVE FOUR POINTERS, AT
LEAST THREE POINTERS THAT MEANS WE SHOULD
HAVE AT LEAST TWO KEYS AND MOST THREE
KEYS.  SO KEEP THAT IN MIND.  OKAY.  IS IT
CLEAR?LY CAN'T DO IT BETTER.
     STUDENT:   SHUT THE FRONT LIGHTS OFF.
     PROFESSOR:   THANK YOU.  IS THAT
CLEAR?  PERHAPS IT'S A LITTLE SMALL.
     OKAY.  FIRST WAY WE INSERT 23.  WE
INSERT 37, WE SHOULDN'T BE OVERFLOW.  WE
INSERT 65.  THEN WE WANT TO INSERT 60.  AT
THIS POINT WE SHOULD OVERFLOW BUT HOW TO
SET UP THIS TREE?  IT IS THE MAIN POINT
HERE.  SO OUR BOOK, IN OUR TEXTBOOK AT
PAGE 125, IT GIVES THE VERY SPECIFIC
ALGORITHM FOR SETTING UP THESE TREES.
WHEN WE OVERFLOW WE SHOULD PUT J EQUALS --
WRITING ON BOARD.  THIS IS THE FUNCTION.
IN THIS PLACE WE -- IN THIS PLACE WE
OVERFLOW OUR P LEAF IS THREE.  SO THIS J
SHOULD BE 3, 4 OVER 2 SO IT EQUALS TO 2.
SO THE FIRST PI AND P2 GO TO THE LEFT AND
FROM THE P THREE AND P4 GO THE SECOND, GO
TO THE RIGHT.  SO WHEN WE INSERT THE 60 IT
GOES HERE, THE FIRST P1, P2 GOES TO LEFT
AND THEN GUESS TO THE RIGHT CHART.  SO THE
TREE SHOULD BE LIKE THIS.  THEN WE INSERT
THE 46, NO OVERFLOW BUT WHEN WE INSERT 92
IT SHOULD OVERFLOW.  SO WE SHOULD INSERT
IT HERE, OVERFLOW, THE FIRST ONE, TWO, THE
J IS STILL EQUAL TO TWO, SO THE FIRST TWO
GO TO THE RIGHT CHART, THE OTHERS GO TO
THE RIGHT CHART.  SO OUR TREE IS FILLED IN
THIS WAY.  AND THIS IS INSERT 48, WE
INSERT 71, NO OVERFLOW.  BUT WHEN WE
INSERT THIS 55, 56, WE OVERFLOW HERE.  THE
FIRST TWO GO TO THE LEFT, THE OTHERS GO TO
THE RIGHT CHART.
     HOW WE BUILD UP THIS LEAF, THIS LEAF
NODE AND WE SHOULD ALSO KNOW HOW TO, WHEN
WE WANT TO OVERFLOW, DO SOME OVERFLOW IN
THE INTERNAL NODES THE FUNCTION IS
DIFFERENT.  IT SHOULD BE J EQUALS TO P
PLUS 1 OVER 2.  THE FUNCTION SHOULD BE
LIKE THIS.  HERE IS EXAMPLE.  HERE.  HERE
WE WANT TO INSERT 21, SO 21 SHOULD GO TO
THE LEAF.  THE FIRST TWO GO TO THE LEFT
CHART, THE OTHERS GO TO THE RIGHT CHART
BUT HERE WHEN WE INSERT 21 THERE, IT
SHOULD OVERFLOW IN THE INTERNAL NODE AND
WE SHOULD USE THIS FUNCTION TO DO THE
OVERFLOW IN THE NODES.  THIS J EQUALS TO P
PLUS ONE DIVIDED BY 2.  SO THIS P HERE IS
3.  SO IT STILL EQUALS TO TWO, SO THE
FIRST ONE TO TWO MINUS ONE SO THAT MEANS
THE FIRST TWO GO TO THE LEFT CHART.  THE
PJ GO TO THE UPPER LAYER THAT MEANS, THIS
ONE GOES TO THE UP LAYER AND THE OTHERS TO
THE LEFT CHART.  JUST LIKE THIS.  SO, THIS
IS OVERFLOW FOR INTERNAL NODE.  OKAY.
THAT IS THE STEPS WHEN WE'RE SETTING UP
OUR B PLUS TREES.  I SAW A LOT OF PROBLEMS
WITH THIS FUNCTION SO I GAVE THE SOLUTION
HERE.
     AND BY THE WAY, IF YOU HAVE ANY
QUESTIONS ABOUT THE HOME WORK, EXERCISE 4.
I PUT IT ON MY HOME PAGE.
WWW.CS.PITT.EDU/ LILYZHAO/EX4.DOC.  THIS
IS THE SOLUTION FOR HOME WORK 4.  DO YOU
STILL HAVE QUESTIONS ABOUT SETTING UP B
PLUS TREE?  SO WE CAN GO ON.
     TODAY WE WILL TALK SOMETHING ABOUT
DATA INTEGRITY.  INTEGRITY RULES.  WHAT
ARE INTEGRITY RULES?  IT IS THE
CONSTRAINTS ABOUT THE DATABASE.  ABOUT THE
DATABASE WHICH WE SHOULD INFORM THE DBMS
SUCH AS IN THE REAL WORLD A PERSON'S AGE
CAN'T BE LESS THAN ZERO.  SO WE PUT THIS
CONSTRAINTS IN OUR DATABASE.  THE AGE OF A
PERSON MUST BE GREATER THAN ZERO.  THIS IS
CONSTRAINTS TO OUR DATABASE.  SO THIS IS
INTEGRITY RULES.  WE HAVE TWO.  ONE IS
SPECIFIC INTEGRITY RULE AND ONE IS GENERAL
INTEGRITY RULE.  SPECIFIC INTEGRITY RULES
SUCH APPLY TO THE SPECIFIC DATABASE.  FOR
EXAMPLE, IN OUR STUDENT RELATION, AGE MUST
BE GREATER THAN ZERO BUT IN ANOTHER
DATABASE OUR RELATION YEARS, INFORMATION
ABOUT PRODUCT, IN THIS RELATION OUR PRICE
MUST BE GREATER THAN ZERO.  WE CAN SEE
THAT THESE TWO INTEGRITY RULES ARE
DIFFERENT BECAUSE IT IS SPECIFIC TO OUR
DATABASE.  DIFFERENT DATABASE WILL HAVE
DIFFERENT SPECIFIC INTEGRITY RULES BUT WE
ALSO HAVE TWO GENERAL INTEGRITY RULES.
ONE IS ENTITY INTEGRITY RULE AND ONE IS
REFERENTIAL INTEGRITY RULE.  TO KNOW WHAT
THIS MEANS WE MUST MAKE CLEAR ABOUT TWO
CONCEPTS, ONE IS PRIMARY KEYS, THE OTHER
IS FOREIGN KEYS.
     FIRST WE SHOULD KNOW WHAT IS A SUPER
KEY WHEN TALKING ABOUT PRIMARY KEYS.
SUPER KEY IS A SET OF ATTRIBUTES THAT NO
TWO TUPLES EXIST.  THE VALUES IN THIS
ATTRIBUTES EQUALS, FOR EXAMPLE, WE WILL
MAKE IT CLEAR USING EXAMPLE.  WE HAVE A
RELATION HERE.  WE HAVE INFORMATION ABOUT
STUDENT, WE HAVE SSN NUMBER, IT'S ID, IT'S
NAME, BIRTHDAY, ITS MAJOR.  WE KNOW NO TWO
STUDENTS HAVE THE SAME SSN NUMBER AND ID
NUMBER.  SO, SS NUMBER IS SUPER KEY, ID
NUMBER IS ALSO SUPER KEY.  AND THIS SET IS
ALSO A SUPER KEY AND THIS SET SUPER KEY
TWO.  SO THE CHARACTER OF SUPER KEY IS
UNIQUENESS.  THAT MEANS NO TWO TUPLES,
THAT VALUE IN THIS ATTRIBUTES HAS SAME
VALUE.
     NOW WE HAVE THE SUPER KEY.  WE WILL
HAVE THE KEY.  KEY IS THE MINIMAL SUPER
KEY.  WHAT DOES THIS MINIMAL MEAN?  THAT
MEANS HERE I HAVE A SET.  IF I DELETE ANY
ATTRIBUTE IN THIS SET, THE OTHERS WON'T BE
THE SUPER KEY.  FOR EXAMPLE, HERE I HAVE
SS NUMBER.  I HAVE NAME.  IF I DELETE THE
NAME FROM THIS SET, SS NUMBER STILL IS
STILL SUPER KEY.  SO THIS SET IS NOT KEY.
BUT I HAVE ANOTHER EXAMPLE.  IN MY
RELATION, THIS MEANS THERE IS A STUDENT
CHOOSE A COURSE SO I HAVE THE STUDENT
NUMBER HERE, I HAVE THE COURSE NUMBER
HERE, PERHAPS I WILL HAVE THE GRADE FOR
THIS STUDENT FOR THIS CLASS.  WE CAN KNOW
THAT THE STUDENT NUMBER AND C NUMBER, THIS
SET IS A SUPER KEY.  BECAUSE NO STUDENT,
NO STUDENT CHOOSE THE SAME CLASS AT THE
SAME TIME.  WE CAN'T FIND TWO RECORD WHICH
TS NUMBER AND THE C NUMBER EQUALS.  NO TWO
TUPLES EXIST.  SO IT'S SUPER KEY.  BUT IF
I DELETE ONE OF THESE ATTRIBUTES, THIS S
NUMBER COULDN'T BE A SUPER KEY BECAUSE A
STUDENT CAN CHOOSE A LOT OF COURSES.  IF I
DELETE THIS ONE, THIS COURSE SHOULDN'T BE
A SUPER KEY BECAUSE A COURSE CAN BE
SELECTED BY A LOT OF STUDENT.  SO ONLY
THIS ONE, ONLY THIS SET, S NUMBER AND C
NUMBER IS SUPER KEY.  SO, WE CAN CALL THIS
KEY.  THAT IS MINIMAL SUPER KEY.
     PERHAPS WE WILL HAVE A LOT OF KEYS.
WE CAN CALL THIS CANDIDATE KEYS.  WE HAVE
A LOT OLE.  IN THE EXAMPLE ABOVE WE HAVE
THIS SS NUMBER AND ID NUMBER, THEY ARE ALL
KEYS.  THAT MEANS THEY ARE ALL CANDIDATE
KEYS.  PRIMARY KEYS IS ONE SELECTED FROM
CANDIDATE KEYS.  HOW TO SELECT IT?  IT'S
DECIDED BY DB DESIGNER, PERHAPS WILL
DESIGN YOUR DATABASE YOU WILL THINK HOW TO
CHOOSE PRIMARY KEY.  WE CAN CHOOSE THIS.
ALSO WE CAN CHOOSE THAT.  PERHAPS SOME
STANDARD IS HOW EASILY ABOUT THIS KEY TO
DO SOME INDEX, TO DO SOME SORT.  THIS JUST
ONE STANDARD.
     WE NOW KNOW THAT PRIMARY KEYS IS ONE
SELECTED FROM THE CANDIDATE KEY.  IF WE
SELECT THE ID TO BE THE PRIMARY KEY, THEN
THE SS NUMBER BECOME ALTERNATE KEYS.  NOW
WE KNOW WHAT IS A PRIMARY KEY.  A PRIMARY
KEY IS ONE SELECTED FROM THE CANDIDATE
KEYS.  THE CANDIDATE KEYS SHOULD BE S
KEYS.  IT SHOULD HAVE TWO CHARACTERS.  ONE
IS UNIQUENESS SO THAT IS SUPER KEYS
CONCEPT.  THE OTHER IS MINIMAL.
     NOW WHEN WE -- WE WILL MOVE ON TO
WHAT IS FOREIGN KEYS.  A FOREIGN KEY IS AN
ATTRIBUTE IN ONE RELATION BUT IT ALSO BE A
PRIMARY KEY IN ANOTHER RELATION.  R1.
HERE THE R1 AND R2 CAN BE IDENTICAL.
LATER ON WE WILL GIVE AN EXAMPLE ABOUT
THIS CAN BE IDENTICAL.  HERE IS AN
EXAMPLE.  JUST AS THE EXAMPLE LIKE WHAT I
DO HERE.  WE HAVE AN S RELATION AND IT
GIVES THE INFORMATION ABOUT A STUDENT.  WE
HAVE THE C RELATION, IT GIVES THE
INFORMATION ABOUT THE COURSE, SO S NUMBER
IS A PRIMARY KEY IN S JUST LIKE THE
STUDENT NUMBER IS THE PRIMARY KEY FOR S
RELATION.  AND THIS C NUMBER FOR COURSE,
WITH COURSE NUMBER IS PRIMARY KEY IN THIS
C RELATION AND WE HAVE THE STUDENT CHOOSE
COURSE RELATION.  IN HERE THE S NUMBER OR
THE C NUMBER IS A FOREIGN KEY IN THIS
RELATION.  WE CAN USE THE REFERENTIAL
DIAGRAM TO EXPRESSION ALL THIS.  IT MEANS
THAT SC REFER TO S THROUGH THE S NUMBER.
SC REFER TO THIS COURSE TABLE THROUGH THE
C NUMBER.  HERE SC IS REFERENCING RELATION
AND THE S OR C IS REFERENCED RELATION.
SO, NOW WE KNOW WHAT IS A FOREIGN KEY.  SO
IT MUST BE A PRIMARY KEY IN ONE RELATION
AND ATTRIBUTE IN ANOTHER RELATION.
     WHY WE NEED THESE FOREIGN KEYS?
FIRST, THIS FOREIGN KEY ARE GLUE WHICH
HOLD THE DATABASE TOGETHER.  THAT MEANS
THE FOREIGN KEYS PROVIDE THE LINKS BETWEEN
THE TWO RELATIONS.  SUCH AS EXAMPLE
BEFORE.  WE HAVE STUDENT TO CHOOSE COURSE
RELATION BUT THERE IS INFORMATION ALREADY
IN OUR DATABASE IN THE RELATION IN S
RELATION AND THE C RELATION.  SO, THIS
FOREIGN KEY PUT THESE FOREIGN KEYS PROVIDE
LINK BETWEEN S RELATION AND THE SC
RELATION AND THE C RELATION TO SC
RELATION.  THEY ARE THE LINKS.  HERE IS AN
EXAMPLE FOR R1 AND R2 CAN BE IDENTICAL.
IN THIS EXAMPLE THIS IS EXAMPLE, THIS IS
THE INFORMATION FOR EMPLOYER IN ONE
COMPANY.  HERE IS THE EMPLOYER NUMBER,
HERE IS SALARY, HERE IS HIS MANAGER, HIS
MANAGER'S NUMBER.  WE CAN SEE HERE THE
NUMBER IS PRIMARY KEY IN THIS RELATION AND
THIS IS A FOREIGN KEY BECAUSE THIS ONE IS
THE SAME AS THIS ONE.  IT IS -- BECAUSE
THE MANAGER IS EMPLOYER SO THIS IS PRIMARY
KEY IN THIS ONE.  IT REFER TO THE EMPLOYER
RELATION ITSELF, SO IT IS THE FOREIGN KEY.
AND THIS RELATION IS SELF-REFERENCING
RELATION.
     WE CAN THINK ABOUT ANOTHER EXAMPLE,
JUST LIKE IN A CLASS.  THE STUDENT NUMBER
IS THE PRIMARY KEY AND THE STUDENT PERHAPS
HAVE MONITOR IN THE CLASS, SUCH PEOPLE IN
THE RELATION, SO THAT PEOPLES NUMBER AND
THAT PEOPLE IS ALSO IN THE RELATION HERE.
IT REFER TO THIS RELATION ITSELF.  SO, IT
IS A FOREIGN KEY IN THIS RELATION.  NOW
ARE READY TO KNOW WHAT IS A PRIMARY KEY --
NOW WE ALREADY KNOW WHAT IS A PRIMARY KEY
AND WHAT IS A FOREIGN KEY SO WE CAN GO ON
WITH OUR GENERAL INTEGRITY RULES.  WE HAVE
TWO.  ONE IS ENTITY INTEGRITY RULES.  AND
THE OTHER IS REFERENCE INTEGRITY RULES.
WHAT DOES THIS ENTITY INTEGRITY RULE
MEANS?  THAT MEANS NO COMPONENT OF PRIMARY
KEY OF A BASE RELATION IS ALLOWED TO
ACCEPT NULLS.  THAT MEANS THE PRIMARY KEY
CAN BE EMPTY.  HERE EXPLANATION ABOUT WHAT
IS THIS NULL MEANS.  PERHAPS WE CAN
UNDERSTAND THIS NULL AS PROPERTY DOES IN
THE APPLY.  FOR EXAMPLE, THE SUPPLIER MAY
BE A COUNTRY IN WHICH CASE THE ATTRIBUTE
CITS HAS A NULL BECAUSE THE SUPPLIER IS A
COUNTRY.  THIS CITY, THIS CITY DOES NOT
APPLY TO THE COUNTRY.  IT IS A COUNTRY NO
CITY APPLY TO IT.  AND WE CAN ALSO
UNDERSTAND THIS NULL AS VALUE IS UNKNOWN
SUCH AS THE SUPPLIER IS A PERSON.  THE
NULL VALUE FOR THE CITY MEANS WE DON'T
NOTE LOCATION FOR THIS SUPPLIER.  THIS IS
EXPLANATION FOR THIS NULL BUT IN INTEGRITY
RULE MEANS THAT PRIMARY KEY SHOULDN'T BE
EMPTY.
     FEEL FREE TO ASK ME A QUESTION AND
INTERRUPT ME.
     AND WE KNOW THAT THE NULLS CANNOT BE
IN PRIMARY KEY BUT IT CAN BE IN ALTERNATE
KEYS.  SUCH AS JUST IN THAT EXAMPLE WE
CHOOSE ID AS OUR PRIMARY KEY AND S, NUMBER
IS ALTERNATE KEY.  SO SS NUMBER CAN MAYBE
HAVE A NULL FOR ONE AND ONLY ONE PERSON.
WHY JUST ONLY ONE PERSON?  ANY ONE CAN
TELL ME?
     STUDENT:   BECAUSE IF TWO PEOPLE --
YOU CAN'T TELL THEM APART.
     PROFESSOR:   SOME PART BECAUSE HERE
ALTERNATE KEY MEANS THAT IT IS A KEY, THE
FIRST CHARACTER OF A KEY IS UNIQUENESS, SO
ONE IS NULL.  THE OTHER CAN'T BE NULL.
BUT YOU ARE RIGHT TO SOME EXTENT.  BECAUSE
THIS SS NUMBER IS AN ALTERNATE KEY.
ALTERNATE KEY MEANS IT IS A KEY TO BE A
KEY IT SHOULD HAVE TWO CHARACTERS ONE IS
UNIQUENESS, TWO TUPLES HAS NO SAME VALUES
IN THIS ATTRIBUTE.  AND THE OTHER IS
MINIMAL.  SO TO SATISFY THE FIRST
CHARACTER IT SHOULDN'T HAVE THE SAME NULL
VALUE.
     SO IN THE WORLD THE INTEGRITY -- THE
ENTITY INTEGRITY RULE MEANS THAT PRIMARY
KEY SHOULDN'T BE EMPTY.  WHY DO WE NEED
THIS RULE?  BECAUSE WE USE THE PRIMARY KEY
TO REPRESENT OUR ENTITY.  IF IT IS A NULL
IT MEANS THAT THERE IS NO ENTITY EXIST.
IT DOESN'T MAKE ANY SENSE.
     INTEGRITY RULE ANOTHER INTEGRITY RULE
IS REFERENCE INTEGRITY RULE IT IS
CONNECTED TO FOREIGN KEYS.  THAT MEANS THE
REFERENTIAL INTEGRITY RULE MEANS THAT
DATABASE MUST NOT CONTAIN ANY UNMATCHED
FOREIGN KEY VALUES.  FOR EXAMPLE, HERE IS
ALL MY SIMPLE EXAMPLE.  THIS EXAMPLE IS
VERY SIMPLE.  I THINK THAT THESE CAN MAKE
PROBLEM VERY CLEAR.  WE HAVE THE STUDENT
RELATION IT HAS STUDENT NUMBER, STUDENT
NAME AND AGE.  THIS IS THE COURSE RELATION
IT HAS THE COURSE NUMBER, INSTRUCTOR AND
CREDIT THERE.  AND THIS IS THE STUDENT
TAKE THAT COURSE AND GET THAT GRADE.  THIS
IS OUR REFERENTIAL DIAGRAM.  THIS
REFERENTIAL INTEGRITY RULE MEANS THAT NO
SUCH TUPLE, STUDENT 5 CHOOSE C5 AND GOT 80
IN THIS RELATION WHEN S5 IS NOT PRESENT IN
S OR C5 THIS CLASS 5 NOT PRESENT IN C.
WHAT DOES IT MEAN?  IT MEANS THAT IF
YOU -- IF THIS STUDENT FIVE, THIS STUDENT
FIVE IS NOT A STUDENT IN MY STUDENT
RELATION, I CAN'T LET HIM CHOOSE A COURSE.
I CAN'T HAVE THIS TUPLE IN SC.  THIS MEANS
THAT IF C5 IS NOT A CLASS IN MY CLASS
RELATION, HOW DOES A STUDENT CAN CHOOSE
THIS COURSE?  SO, THIS IS REFERENTIAL
INTEGRITY RULE.  THE DATABASE MUST NOT
CONTAIN ANY UNMATCHED FOREIGN KEY VALUES.
BECAUSE WE KNOW THAT S NUMBER AND C NUMBER
ARE FOREIGN KEYS IN THIS RELATION.  IT
CAN'T CONTAIN ANY UNMATCHED VALUES.
UNMATCHED WITH WHO?  WITH THE RELATION S
WITH THE RELATION C.  IT'S REFERENCED
RELATION.  WHY IS DELETE INTEGRITY RULE?
THAT MEANS WE SHOULDN'T DELETE THE STUDENT
INFORMATION.  THIS STUDENT CHOOSE COURSE
TUPLE STILL IN THIS SC RELATION STILL.
THAT MEANS THE STUDENT IS STILL HAS, HAS
CHOOSE COURSE INFORMATION IN MY SC
RELATION.  HOW CAN I DELETE IT FROM MY
STUDENT RELATION?  IF I DELETE THIS, THAT
MEANS THE STUDENT IS NO LONGER A LEGAL
STUDENT TO CHOOSE COURSE.  SO THIS
SHOULDN'T BE SC.  WE ALSO HAVE THE INSERT
INTEGRITY RULE.  THAT MEANS WE SHOULDN'T
INSERT THIS ONE IF S5 IS NOT PRESENT IN S.
IT HAS THE SAME MEANING THAT IF THIS
STUDENT IS NOT A LEGAL STUDENT IN MY
STUDENT RELATION, HOW SHOULD I LET HIM
CHOOSE ANY COURSES?  THIS IS INSERT
INTEGRITY RULES.
     NOW WE KNOW THAT WHAT IS INTEGRITY
RULES AND WHAT IS REFERENTIAL INTEGRITY
RULES, THOSE ARE TWO GENERAL INTEGRITY
RULES FOR ALL DATABASE.  AND WHEN WE
DESIGN OUR DATABASE APPLICATION WE SHOULD
PAY MORE ATTENTION TO THESE RULES.  WHEN
WE INSERT SOMETHING, IS THIS INSERT LEGAL?
OR ILLEGAL?  WHEN WE DELETE SOMETHING, IS
THIS DELETE LEGAL OR ILLEGAL AND SOMETIMES
THE DATABASE MANAGEMENT SYSTEM CAN HELP US
TO EMPLOY THE RULES.  FOR EXAMPLE, WE CAN
SET UP A TABLE AND CHOOSE AN ATTRIBUTE TO
BE THE PRIMARY KEY.  THE DBMS WILL HELP US
TO CHECK IF WE WANT TO INSERT A RECORD
THAT HAS THE SAME VALUE IN THIS PRIMARY
KEY, IT'S ILLEGAL.  OR IF WE HAVE PUT THE
NULL ATTRIBUTE IN THIS PRIMARY KEY, IT'S
ILLEGAL.  THE DBMS CAN HELP US TO DO THIS.
     BUT SPEAKING OF DELETE INTEGRITY
RULES AND INSERT INTEGRITY RULES, WE
CAN -- WE HAVE TWO EMPLOYMENT BY OURSELF.
SO THAT'S MAIN PART FOR MY CLASS.  I JUST
GIVE SOME EXPLANATION ABOUT THE DATA
INTEGRITY.  ANYONE HAVE ANY QUESTIONS?
OKAY, THAT IS ALL.

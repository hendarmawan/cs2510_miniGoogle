<title>Abstract Machine for SIS</title>

<a href="sisam4.htm"><img src="prev.gif" align=left></a>
<a href="sisam6.htm"><img src="next.gif" align=right></a>

<center>
<h1>Cycle Switching Rules</h1>
</center>
<h2>
cycle1: <font color=red>[guard1,2]</font> Po -enum< P1 >elim- P2


<p>
A guard for cyclei is a predicate of the form guardi,j defined on problem sets and evaluated whenever a problem set is generated.  If the predicate is evaluated to be true then control is transferred to cyclej.  If the predicate is evaluated to be false then M<sub>sis</sub> remains in the current cycle.  If this is the last problem set then the machine halts.

<p>
For example guard1,2 may specify if the problem set (P1 or P2) is empty then control is transferred to cycle2. In other words if cycle1 produces no solutions then M<sub>sis</sub> should switch to cycle2 even though cycle2 is computationally more expensive.  If P2 is non-empty then M<sub>sis</sub> halts.  

<title>Content Based Retrieval</title>

<a href="c3-3.html"><IMG
SRC="../previous.gif" align=left></a>

<a href="c3-5.html"><IMG SRC="../next.gif" align=right></a>

<center><h1>Content Based Retrieval</center>
<center><h1>Index Structures</h1></center>
<h3>
<br>
<br>
<ul>
Basically, the idea is that we want to build trees that start at the root
and are very broad in the descriptions of the object.  A good parallel to
this is how we classify vehicles. We start with the make, then the model,
then the year, then the color, and so on. Also another good example is
classifying living things: Vertebrates vs. Invertebrates, mammals, and so
on.
<br>
<br>
<li> Use of TV-tree
<ul>
<li> Objects classified in attribute space can be bounded by their
similarities
    <ul> This bounded space is then split up again and again, thus
         creating children that are more specifically described 
    <br><li> The shape of the bounding region can be hyper-rectangles,
           cubes, spheres, and so on
    </ul>

<li> TV-<I>N</I> trees are ones with height N
<li> When selecting nodes to insert, priority is given to the leaves whose
bounding regions are "closer" to the new object inserted
<li> Picking the initial bounding regions is done with initial data and
typically selecting the two farthest points. The distance between the two
is calculated and then split into 2 to form two different regions. 

</ul>
<li> Other methods X tree, R* tree
</ul>  


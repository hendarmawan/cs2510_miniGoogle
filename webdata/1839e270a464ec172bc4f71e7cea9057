<title>WEBBASE INTERFACE AND ODBC CONCEPTS</title>

<h1>WEBBASE INTERFACE AND ODBC CONCEPTS</h1>
<center><xs><a href="http://www.cs.pitt.edu/~chang/156/lecture/17">Click here for audio-text lecture and feed it to the speech agent</a></xs></center>


WebBase<sup>TM</sup> is a Web database server that allows the programmer to easily integrate
information from Open Database Connectivity (ODBC) databases into a
Web site.  It works in cooperation with any browser, allowing the end user
to perform database searches through the Web page.
<br><br>

WebBase can be used as a simple Web server to provide easy database access.
It can also be used to provide flexible and dynamic presentations to users.
The programmer will use the WebBase macro language to develop the <b>htf</b> forms to retrieve and
present information.  This WebBase macro language, like any other programming language,
is made up of variables, macros, expressions and operators.

<hr>
<h1>More Information About WebBase</h1>

More information about WebBase can be found at:<ul> http://www.webbase.com/</ul>
where you will find a complete user's manual and a free trial version of
WebBase which you can download.<br><br>

For additional information you can contact:<br>
<ul>
   Peter Thorsen, Sales Representative<br>
   1-800-888-8670<br>
   E-mail: Peter.Thorsen@expertelligence.com<br>
</ul>
<b>(To do the miniproject using WebBase, it is required that
you download the free trial version of WebBase and install it on your PC.
Otherwise you should select the SQL compiler miniproject.)</b>

<hr>
<h1>An Example of WebBase Programming</h1>

WebBase allows database interaction from web browsers.  
We will first explain the elements of the WebBase language using a simple example.
Suppose we want to search for the address of Denny.  The
HTML form may look like:
<br><br>
<hr noshade width="75%"><pre>
 &lt FORM METHOD="get" ACTION="http://www.webbase.com/docs/webbase/examples/getname.htf"&gt 
Please enter the name to search for:  &lt INPUT NAME="name" SIZE=15 VALUE="Denny"&gt 
 &lt INPUT TYPE=SUBMIT value="Enter"&gt  &lt /FORM&gt 
</pre><hr noshade width="75%">

<br>
The above HTML form as seen by the user looks like this:

<hr noshade width="75%">
<FORM METHOD="get" ACTION="http://www.webbase.com/docs/webbase/examples/getname.htf">
Please enter the name to search for: <INPUT NAME="name" SIZE=15 VALUE="Denny">
<INPUT TYPE=SUBMIT value="Enter"></FORM> 
<hr noshade width="75%">
<P>
If you click the <b>ENTER</b> button,
this will send a "GET" request to the server that looks like:
<P><UL>
<TT><B>    http://www.WebBase.com/docs/webbase/examples/getname.htf?name=Denny</B></TT>
<P></UL>


The server processes the GET request and a variable <b>name</b> with value 'Denny' is passed to the
form <B>getname.htf</B> which looks like this:
<hr noshade width="75%"><PRE>
 &lt HTML&gt ;
 &lt HEAD&gt ;
<b> &#123 <A HREF="http://www.webbase.com/docs/wb23/WebMacs.htm#SQL">sql</A> to answers source 'Primary' user 'Administrator' password 'Secret' max 25  &#125 
SELECT * FROM Examples WHERE Name LIKE '% &#123 name &#125 %'
 &#123 /sql &#125 </b>

<b> &#123 <A HREF="http://www.webbase.com/docs/wb23/WebMacs.htm#IF">if</A> 0 answers size = &#125 </b>
 &lt TITLE&gt ; I'm sorry!  &lt /TITLE&gt ; 
 &lt /HEAD&gt ;
 &lt BODY&gt ;
 &lt H2&gt ; Search results for: <b> &#123 %search% &#125 </b>  &lt /H2&gt ;
 &lt HR SIZE=8&gt ;
 &lt H2&gt ; I'm sorry, I could not find any records that match in the database. &lt /H2&gt ;
<b> &#123 else &#125 </b>
 &lt TITLE&gt  WebBase Demo Results  &lt /TITLE&gt ; 
 &lt /HEAD&gt ;
 &lt BODY&gt ;
 &lt H2&gt ; Search results for: <b> &#123 %search% &#125 </b>  &lt /H2&gt ;
<b> &#123 <A HREF="http://www.webbase.com/docs/wb23/WebMacs.htm#FORROW">forRow</A> aRow on answers &#125 </b> &lt HR&gt ; &lt PRE&gt ;
       Name:  &lt B&gt ;<b> &#123 Name &#125 </b> &lt /B&gt ;
    Company:  &lt B&gt ;<b> &#123 Company &#125 </b> &lt /B&gt ;
       City:  &lt B&gt ;<b> &#123 City &#125 </b> &lt /B&gt ;
      State:  &lt B&gt ;<b> &#123 State &#125 </b> &lt /B&gt ;
   Zip Code:  &lt B&gt ;<b> &#123 Zip &#125 </b> &lt /B&gt ;
         Ph:  &lt B&gt ;<b> &#123 Phone &#125 </b> &lt /B&gt ;
 &lt /PRE&gt ;<b> &#123 /forRow &#125 </b>
<b> &#123 /if &#125 </b>
 &lt P&gt ;
 &lt /BODY&gt ; 
 &lt /HTML&gt ;  </PRE>
<hr noshade width="75%">

<P>
The WebBase macro language is intermixed with the HTML language.  To avoid
confusion these WebBase macros and tags are enclosed in curly braces.
WebBase will dynamically interpret these macros and tags to generate the presentation.
<br><br>
WebBase automatically creates local variables for each of the command line
arguments sent by the browser.  Any WebBase variable names specified in
the <b>htf</b> file within curly braces, e.g., {name}, are automatically
replaced by the value of the variable.
<br><br>
The first WebBase macro encountered is an sql macro.
The 'source' tells WebBase where data are to be found.
WebBase then replaces <B> &#123 name &#125 </B> with '<B>Denny</B>' and performs the SQL SELECT
as directed from the 'Examples' table of the 'Primary' ODBC
source.  This will result in zero to N records (max of 25) returned to variable <B> &#123 answers &#125 </B>.  
<P>
The <B> &#123 if 0 answers size = &#125 </B> tests the size of the <B>answers</B> variable and
returns the HTML immediately following the <B> &#123 if &#125</B> if the test is true (zero answers)
and returns the HTML immediately following the <B> &#123 else &#125 </B> if one or more answers exist.
The expression <b> &#123 if 0 answers size = &#125 </b> is in reverse
Polish notation.
<P>
In the <B> &#123 else &#125 </B> clause we loop on the answers with a <B> &#123 forRow aRow on answers &#125 </B>
with the variable <B>aRow</B> taking on each of the returned results in turn.  The fields from
the returned record, <B> &#123 Name &#125 ,  &#123 Company &#125 , </B>etc. will be substituted where requested.

<hr>
<h1>A More Complex Example</h1>

We now use a more complex example to illustrate WebBase programming.
A Student Information System implemented using WebBase language can be found at:
<a href="http://halley.ksi.edu/ex5/"> http://halley.ksi.edu/ex5/</a>
(Please note the slash at the end is significant and cannot be omitted).
This system's functions are the same as what you implemented in <a href="exer.html">Exercise 5</a>.
<br><br>

The test files are in halley.ksi.edu and you can use anonymous ftp to
download them.  For password you can enter your e-mail address.
<br><br>

The main menu page is at:  http//halley.ksi.edu/ex5/<br>
This will in effect become:   http://halley.ksi.edu/ex5/Default.htf<br>
The retrieval program is:   http://halley.ksi.edu/ex5/exercise5.htf<br>
Two inserted program pieces are: Defaults.hti and Footer.hti<br>
The Access database file is: http://halley.ksi.edu/ex5/Student.mdb<br>
The 'source' corresponding to Student.mdb is also called 'Student'<br>
<br><br>

The Student Information System works as follows.  When the end user clicks
on the different options of the main menu page <b>Default.htf</b>,
this information is passed to the retrieval program <b>exercise5.htf</b>.
Based upon what the user selects, the corresponding SQL query is
executed and the retrieved information from the 'source' (which corresponds to
the Access database Student.mdb) is displayed.
The user can return to the main menu page to select another query.
<br><br>

The two program pieces <b>Defaults.hti</b> and <b>Footer.hti</b> are included into
the main program using a macro not dissimilar to 'include' in C programming
language.  These are program pieces often used by main programs.
<b>Defaults.hti</b> specifies the background colors, and <b>Footer.hti</b> provides
some common footnotes on ownership, copyright and contact person.
<br><br>

The main forms have the suffix <b>htf</b> (hypertext form)
and the inserted program pieces have the suffix <b>hti</b>.
<hr>
<h1>How the WebBase Program Works</h1>

Although it is called a hypertext form (htf), a WebBase program is essentially
a Web page in html (hypertext markup language) format enhanced by certain
macros so that you can deal with databases.
Therefore, you can first create the html pages, and then add the WebBase
macros to provide database retrieval and presentation capabilities.
<br><br>

<p>
The form <b>Default.htf</b> is the main menu.  The following
WebBase tags and macros are used:
(For detailed discussion of macros, read Chapter 8 of WebBase User's Guide)
<p>
<b>Comment Tags</b> let the programmer create comments within the Web pages
		 that will be invisible to the web browser.  There are 
		 two types of comments: the {comment} and closing tag,
		 which will NOT limit the comment, and the {! ... !} commment.
		 You cannot put WebBase tags inside the {! ... !} comment.
<p>
<b>{insert <i>filename</i>} </b> lets you take a file from the server and place
			  its contents within the current WebBase file. 
			  This is very much like the #include <i>filename</i> in 
			  C and C++.
<p>
<b>{BackColor}</b> is a user defined variable.  It is defined in the file <b>default.hti</b>.
		It contains the color to be used as background.  Since it is 
		defined in <b>defaults.hti</b> you only need to change it in there
		and any page that calls <b>defaults.hti</b> and uses BackColor will
		change.
<p>
<b>{LinkColor}</b> is similar to BackColor, but this is the link color.
<p>
<b>{VLinkColor}</b> is similar to BackColor, but this is the visited link color.
<p>
<p>
The <b>Default.htf</b> form looks like this:
<hr noshade width="75%"><pre>
{insert 'defaults.hti'}	{! insert is like the include in C and C++ !}	

 &lt HTML&gt 

 &lt TITLE&gt Student Information System &lt /TITLE&gt 

{! The variables BackColor, LinkColor, and VLinkColor are defined in defaults.hti !}
 &lt BODY BGCOLOR={BackColor} LINK={LinkColor} VLINK={VLinkColor}&gt 

 &lt CENTER&gt  &lt H1&gt Student Information System &lt /H1&gt  &lt /CENTER&gt 

 &lt HR SIZE=2&gt  &lt !---------------------------------------------------------&gt 

 &lt h2&gt Select one of the queries: &lt /h2&gt 
 &lt OL&gt 
   &lt LI&gt  &lt A HREF="Exercise5.htf?Item=A"&gt List the name of students who have
    completed any course module. &lt /A&gt 
   &lt LI&gt  &lt A HREF="Exercise5.htf?Item=B"&gt List the name of students who have
    completed course module A1. &lt /A&gt 
   &lt LI&gt  &lt A HREF="Exercise5.htf?Item=C"&gt List the name of students who have
    completed at least two course modules. &lt /A&gt 
   &lt LI&gt  &lt A HREF="Exercise5.htf?Item=D"&gt List the name of students who have
   who have completed any course module during the period 1/1/90 to 6/30/90. &lt /A&gt 
 &lt /OL&gt 

{insert 'Footer.hti'}  {! Inserts The generic footer for all pages !}

 &lt /BODY&gt 
 &lt /HTML&gt 
</pre>
<hr noshade width="75%">
<p>
The database retrieval and presentation are done in the WebBase form <b>exercise5.htf</b>.
Again we will first explain the WebBase macros and tags used in this form:
<p>
<b>{case 'variable'}</b>  is the Select clause for WebBase.  Takes a variable
and matches to one of the values.
If  {match 'value'}  do what follows.
{otherwise} if nothing matches then do otherwise.
{/case} is end of the case macro.
<p>
<b>{set 'variable' 'expression'}</b> is the assignment operation in WebBase.
The expression must be in RPN Reverse Polish Notation.  This
will also create variables if they aren't already created.
<p>
<b>{if 'expression'} </b> is the if clause for WebBase. The expression
must be in reverse polish notation.
<b>{/if}</b> ends the if macro.
<p>
<b> {sql [to 'recSet'] source 'dataSourceName' [[user 'userid'] [password 'password']] SQLSstatement</b>
is the way to embedded sql into your WebBase pages.  The 'recSet'
is required for any queries that return records.
<b>{/sql}</b> ends the SQL macro.
<p>
<b>{forRow 'rec' on 'recSet'}</b>  is the <i>for loop</i> in WebBase.  It works with the 'recSet'
for the size of the 'recSet'.  Inside the loop any variables in a record
can be directly accessed.
<b>{/forRow}</b> ends the loop.
<p>
<b>{Item}</b> is a variable  defined by the search string in the URL.  The format for the
search string is
http:// &lt host&gt / &lt file&gt ? &lt var&gt = &lt value&gt .
<p>
<b>{SQLStatement}</b> is the SELECT statement to be used in the query.
<p>
<p>
The form <b>exercise5.htf</b> looks like this:

<hr noshade width="75%">
<pre>
{insert 'defaults.hti'}	{! insert is like the include in C and C++ !}

 &lt HTML&gt 

 &lt TITLE&gt Student Information System &lt /TITLE&gt 

{! The variables BackColor, LinkColor, and VLinkColor are defined in defaults.hti !}
 &lt BODY BGCOLOR={BackColor} LINK={LinkColor} VLINK={VLinkColor}&gt 

 &lt CENTER&gt  &lt H1&gt Student Information System &lt /H1&gt 

   &lt HR SIZE=2&gt  &lt !---------------------------------------------------------&gt 
		 {! Note: how the variable was passed...   Through the command line !}
    {case Item}  {! Determines which Item was selected and queries on that item !}
      {match 'A'}
         &lt H3&gt List the name of students who have completed any course module &lt /H3&gt 
        {set SQLStatement 'SELECT DISTINCT NAME FROM Student WHERE COURSE_MOD is Not null'}
      {match 'B'}
         &lt H3&gt List the name of students who have completed course module A1 &lt /H3&gt 
        {set SQLStatement 'SELECT DISTINCT NAME FROM Student WHERE COURSE_MOD =''A1'''}
      {match 'C'}
         &lt H3&gt List the name of students who have completed at least two course modules &lt /H3&gt 
        {set SQLStatement 'SELECT DISTINCT NAME FROM Student AS A WHERE 2  &lt = (SELECT COUNT(*) FROM Student B Where A.SSN=B.SSN)'}
      {match 'D'}
         &lt H3&gt List the name of students who have completed any course module during the period 1/1/90 to 6/30/90 &lt /H3&gt 
        {set SQLStatement 'SELECT DISTINCT NAME FROM Student WHERE COMP_DATE&gt =#1/1/90# AND COMP_DATE &lt =#6/30/90# AND COURSE_MOD is not Null'}
      {otherwise}	{! If the page was opened without using the menu page !}
         &lt H3&gt Nothing was selected from the menu. &lt /H2&gt 
        {set SQLStatement ''}
    {/case}

   &lt HR SIZE=2&gt  &lt !---------------------------------------------------------&gt 

  {if SQLStatement '' = not}   {! If the SQLStatement is not '' Then !}
    {sql to recs source 'Student'}	{! The sql- Record Set variable "recs"      !}
      {SQLStatement}  			{!          The Data Source 'Student'       !}
    {/sql}				{!          The SQL Statement "SQLStatement !}

     &lt TABLE BORDER=1&gt  &lt TR&gt  &lt TH&gt Student`s Name &lt /TH&gt  &lt /TR&gt 
    {forRow curRec on recs}		{! Output each row of the record set !}
       &lt TR&gt  &lt TD&gt {NAME} &lt /TD&gt  &lt /TR&gt 
    {/forRow}
     &lt /TABLE&gt 
  {/if}
   &lt BR&gt 
   &lt A HREF="default.htf"&gt Try again. &lt /A&gt  &lt BR&gt 
 &lt /CENTER&gt  
{insert 'Footer.hti'}  {! Inserts The generic footer for all pages !}

 &lt /BODY&gt 
 &lt /HTML&gt 

</pre>
<hr noshade width="75%">
<p><p>
In the form <b>Defaults.hti</b>,
{%output%} is a Global Variable that tells WebBase whether it should be outputting 
data to the browser.
The form looks like this:

<hr noshade width="75%">
<pre>
{set %output% false}	{! %output% is used to display information to the browser !}
{set BackColor "#FFFFFF"}  {! These are user defined variables "Global Like" !}
{set LinkColor "#8C0029"}
{set VLinkColor "#8C0029"}
{set %output% true}
</pre>
<hr noshade width="75%">
<p><p>

Finally, the form <b>Footer.hti</b> generates a common footnote.
No WebBase Macros or variables used or defined in this form.
The form looks like this.

<hr noshade width="75%">
<pre>
 &lt P&gt 
 &lt HR&gt  &lt !----------------------------------------------------------------&gt 
 &lt CENTER&gt  &lt FONT SIZE="-1"&gt 
	Copyright &copy 1997 ksi.edu All rights reserved.
 &lt /FONT&gt  &lt /CENTER&gt 
 &lt HR&gt  &lt !----------------------------------------------------------------&gt 
 &lt TABLE BORDER=0 WIDTH=100%&gt 
   &lt TR&gt  &lt TD&gt 
    Questions can be addressed to the Webmaster -- 
     &lt I&gt  &lt A HREF="mailto:ksiwww@ksi.edu"&gt ksiwww@ksi.edu &lt /A&gt  &lt /I&gt 
   &lt /TD&gt  &lt TD ALIGN=RIGHT&gt 
    Last modified:  &lt I&gt 10/29/1997 &lt /I&gt 
   &lt /TD&gt  &lt /TR&gt 
 &lt /TABLE&gt 
</pre>
<hr noshade width="75%">

<hr>
<h1>Open Database Connectivity</h1>

Open Database Connectivity (ODBC) is a standard devised by Microsoft to enable
any application to communicate with any database manager.  ODBC is
based upon SQL as a standard for accessing data.  The interface provides
maximum interoperability: a single application can access different
SQL Database Management Systems through a common set of code.
This enables us to build a client/server application without pre-selecting
a specific DBMS.  Database drivers can be added later to link the
application to our choice of DBMS.
<p>
The <i>ODBC driver</i> is the interface program via which the end-user
has access to the database.  Microsoft provides a set of ODBC drivers on
the web site.  The sql macro within the WebBase form is used to generate
a database query.  WebBase translates this query into an ODBC function
call and pass it to the ODBC driver.  The driver accepts the ODBC request,
translates it into internal format recognizable by the specific database
system (e.g., ODBC to Microsoft Access), manages the communications with
the database itself, and provides the results back to WebBase.  WebBase
in turn completes the processing of the results which are made available in
the WebBase form for subsequent use.
<p>
The advantage of this approach is that it allows WebBase to support any
ODBC compliant database without  the knowledge about the specifics of a
particular DBMS.  Therefore it is possible to retrieve information from a Microsoft
Access database and use it to generate a new record in an Oracle database.
In the future, if the Oracle database is replaced by another DBMS, no
change in the WebBase forms are required.
<p>
In order for WebBase to access a database, an ODBC source for that database
must be created.  An ODBC source assigns a name and optionally a username and
password to a particular database file.  This ODBC source name, username
and password are then used by WebBase to access the database.
A data source must be created for EACH database that you will be accessing
using WebBase.

<hr>
<h1>Programming Tips</h1>

<li> The form submit methods are post and get....  <br>
'get'  displays all the info in the location of the next page.
'post'  hides that data from the form...
<p>

<li> If you make a change to the database or to the htf files and look
it will appear if nothing has changed unless you hit reload.  This can be
frustrating so in the form you pass the time variable so that it will
differ every time you load the page and it won't be loaded from cache.
<p>

<li> Other errors with webbase...   a protection violation occurs after
just about any error so when you think you fixed the error you get a
protection violation.   This generally just means the last process was
incomplete and when you hit reload it will go away....
<p>

<li> Be cautious when using two or more queries on a page.  If you try to
access one's data it might fail if you don't reference the proper data.
<p>

<li> When using URL, always put the '/' at the end.
If you don't put the '/' at the end it will look in the root directory 
for the file when they are actually in the sub directory.

<li> If you are debugging your WebBase forms on a local PC, the first
form C:\whatever.html can be accessed by Netscape.
Keep in mind that any subsequent access to htf forms should be done
using http://127.0.0.1:80/whatever.htf.  This IP
address is what actually connects Webbase to your .htf forms.  If you just
use the URL C:\whatever.htf, it will not work.



<hr>
<h1>Installation Tips</h1>

The detailed information about WebBase installation can be found in Chapter 3
of WebBase User's Guide.
<p>
To install the free trial version of WebBase you must have a PC with:
<li>an Intel processor<br>
<li>Windows NT 3.51 or greater, Windows 95, Windows 3.1 (with Win32s) or Windows for Workgroups 3.11 (with Win32s)<br>
<li>TCP/IP software installed and properly configured<br>
<li>At least 16MB of memory (32 MB recommended)<br>
<li>A network connection (for testing, you don't need the network
connection, but you MUST have a browser and the TCP/IP software to simulate network connection)<br>
<li>An ODBC compliant database and appropriate ODBC driver(s)<br>
<p>

The installation, documentation and ODBC driver files are available
as downloads from the WebBase web site.
<p>

The proper ODBC drivers for the operating system MUST be used.  The
majority of problems that users encounter with ODBC and WebBase are
the results of an incorrect match between ODBC database driver and
operating system version.
<p><p>

<b>Acknowledgement</b>: The second programming example and programming tips are from Brian Kirk
(E-mail: bekst9@pitt.edu).
The rest can be found from the WebBase User's Guide.

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <!-- Copyright Accellera Organization, Inc. 2005. All Rights Reserved. -->
 <!-- THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION WHICH IS THE PROPERTY
      OF Accellera Organization, Inc. OR ITS LICENSORS AND IS SUBJECT TO LICENSE TERMS. -->

 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks AutoMap 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="V2.0-img" />
  <meta name="LASTUPDATED" content="Wed Aug 24 16:31:05 2005" />
  <title>assert_change</title>
  <link rel="StyleSheet" href="default.css" type="text/css" />
  
 </head>

 <body ><br><h1 class="pHead1" >
assert_change
</h1>    
<a name="wp3701931"> </a><p class="pBody" >
Ensures that the value of a specified expression changes within a specified number of cycles after a start event initiates checking.  </p>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3701946"> </a><div class="pCellBodyLeft" >
<img src="images/ovl_checkers79.gif" height="107" width="220" border="0" vspace="0" hspace="0" />
</div>    
</td>
    <td><a name="wp3701948"> </a><div class="pCellBodyLeft" >
<span class="cStrong">Parameters</span>: 
</div>    
<a name="wp3771570"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">severity_level </em>
</div>    
<a name="wp3771571"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">width </em>
</div>    
<a name="wp3771572"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">num_cks </em>
</div>    
<a name="wp3771573"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">action_on_new_start </em>
</div>    
<a name="wp3771574"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">property_type </em>
</div>    
<a name="wp3771575"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">msg </em>
</div>    
<a name="wp3771576"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">coverage_level</em>
</div>    
</td>
    <td><a name="wp3701950"> </a><div class="pCellBodyLeft" >
<span style="font-weight: bold" class="cStrong">Class: </span>
</div>    
<a name="wp3771577"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">n</em>-cycle assertion
</div>    
</td>
</tr>
</table>
</div>
	
  <p class="pBody" >
</p>    
<a name="wp3701951"> </a><h3 class="pHead3" >
Syntax
</h3>    

<p class="pCodeShiftTop"></p><a name="wp3701952"> </a><pre class="pCode1" >assert_change 
</pre>    <a name="wp3771578"> </a><pre class="pCode1" >		[#(<em class="cEmphasis">severity_level</em>, <em class="cEmphasis">width, num_cks, action_on_new_start, property_type</em>,<em class="cEmphasis">  
</em></pre>    <a name="wp3771579"> </a><pre class="pCode1" ><em class="cEmphasis">		msg</em>,<em class="cEmphasis"> coverage_level </em>)] 
</pre>    <a name="wp3771580"> </a><pre class="pCode1" >		<em class="cEmphasis">instance_name</em> (<em class="cEmphasis">clk, reset_n, start_event, test_expr </em>);
</pre>    
<p class="pCodeShiftBottom"></p>
<a name="wp3701996"> </a><h4 class="pHead4" >
Parameters  </h4>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3701955"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3701957"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">severity_level</em>
</div>    
</td>
    <td><a name="wp3701959"> </a><div class="pCellBodyLeft" >
Severity of the failure. Default: &#8216;OVL_ERROR.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3701961"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3701963"> </a><div class="pCellBodyLeft" >
width
</div>    
</td>
    <td><a name="wp3701965"> </a><div class="pCellBodyLeft" >
Width of the <em class="cEmphasis">test_expr</em> argument. Default: 1. 
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3701967"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3701969"> </a><div class="pCellBodyLeft" >
num_cks
</div>    
</td>
    <td><a name="wp3701971"> </a><div class="pCellBodyLeft" >
Number of cycles to check for a change in the value of <em class="cEmphasis">test_expr</em>. Default: 1.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3701973"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3701975"> </a><div class="pCellBodyLeft" >
action_on_new_start
</div>    
</td>
    <td><a name="wp3701977"> </a><div class="pCellBodyLeft" >
Method for handling a new start event that occurs before <em class="cEmphasis">test_expr</em> changes value or <em class="cEmphasis">num_cks</em> clock cycles transpire without a change. Values are: &#8216;OVL_IGNORE_NEW_START, &#8216;OVL_RESET_ON_NEW_START and &#8216;OVL_ERROR_ON_NEW_START. Default: &#8216;OVL_IGNORE_NEW_START.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3701979"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3701981"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">property_type</em>
</div>    
</td>
    <td><a name="wp3701983"> </a><div class="pCellBodyLeft" >
Property type. Default: &#8216;OVL_ASSERT.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3701985"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3701987"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">msg</em>
</div>    
</td>
    <td><a name="wp3701989"> </a><div class="pCellBodyLeft" >
Error message printed when assertion fails. Default: &#8220;VIOLATION&#8221;.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3701991"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3701993"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">coverage_level</em>
</div>    
</td>
    <td><a name="wp3701995"> </a><div class="pCellBodyLeft" >
Coverage level. Default: &#8216;OVL_COVER_ALL.
</div>    
</td>
</tr>
</table>
</div>
	
  <h4 class="pHead4" >
</h4>    

<a name="wp3702030"> </a><h4 class="pHead4" >
Ports  </h4>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3701999"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3702001"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">clk</em>
</div>    
</td>
    <td><a name="wp3702003"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3702005"> </a><div class="pCellBodyLeft" >
Clock event for the assertion. The checker samples on the rising edge of the clock.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3702007"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3702009"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">reset_n</em>
</div>    
</td>
    <td><a name="wp3702011"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3702013"> </a><div class="pCellBodyLeft" >
Active low synchronous reset signal indicating completed initialization.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3702015"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3702017"> </a><div class="pCellBodyLeft" >
start_event
</div>    
</td>
    <td><a name="wp3702019"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3702021"> </a><div class="pCellBodyLeft" >
Expression that (along with <em class="cEmphasis">action_on_new_start</em>) identifies when to start checking <em class="cEmphasis">test_expr</em> .
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3702023"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3702025"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">test_expr</em>
</div>    
</td>
    <td><a name="wp3702027"> </a><div class="pCellBodyLeft" >
[ <em class="cEmphasis">width</em> - 1 : 0 ]
</div>    
</td>
    <td><a name="wp3702029"> </a><div class="pCellBodyLeft" >
Expression that should change value within <em class="cEmphasis">num_cks</em> cycles from the start event unless the check is interrupted by a valid new start event.
</div>    
</td>
</tr>
</table>
</div>
	
  <h4 class="pHead4" >
</h4>    

<a name="wp3702031"> </a><h3 class="pHead3" >
Description
</h3>    

<a name="wp3702032"> </a><p class="pBody" >
The <code class="cCodeBody">assert_change</code> assertion checker checks the expression <span style="font-style: oblique" class="cCodeBodyEmphasis">start_event</span> at each rising edge of <span style="font-style: oblique" class="cCodeBodyEmphasis">clk</span> to determine if it should check for a change in the value of <span style="font-style: oblique" class="cCodeBodyEmphasis">test_expr</span>. If <span style="font-style: oblique" class="cCodeBodyEmphasis">start_event</span> is sampled TRUE, the checker evaluates <span style="font-style: oblique" class="cCodeBodyEmphasis">test_expr</span> and re-evaluates <span style="font-style: oblique" class="cCodeBodyEmphasis">test_expr</span> at each of the subsequent <span style="font-style: oblique" class="cCodeBodyEmphasis">num_cks</span> rising edges of <span style="font-style: oblique" class="cCodeBodyEmphasis">clk</span>.  If the value of <span style="font-style: oblique" class="cCodeBodyEmphasis">test_expr</span> has not been sampled changed from its start value by the last of the <span style="font-style: oblique" class="cCodeBodyEmphasis">num_cks</span> cycles, the assertion fails.
</p>    
<a name="wp3702033"> </a><p class="pBody" >
The method used to determine how to handle a new start event, when the checker is in the state of checking for a change in <span style="font-style: oblique" class="cCodeBodyEmphasis">test_expr</span>, is controlled by the <span style="font-style: oblique" class="cCodeBodyEmphasis">action_on_new_start</span> parameter. The checker has the following actions:
</p>    
<a name="wp3702034"> </a><p class="pBullet1" >
<img src="images/bullet1.gif" align="top" />&#8216;OVL_IGNORE_NEW_START
</p>    
<a name="wp3768501"> </a><p class="pIndent1" >
The checker does not sample <span style="font-style: oblique" class="cCodeBodyEmphasis">start_event</span> for the next <span style="font-style: oblique" class="cCodeBodyEmphasis">num_cks</span> cycles after a start event.
</p>    
<a name="wp3768453"> </a><p class="pBullet1" >
<img src="images/bullet1.gif" align="top" />&#8216;OVL_RESET_ON_NEW_START
</p>    
<a name="wp3768454"> </a><p class="pIndent1" >
The checker samples <span style="font-style: oblique" class="cCodeBodyEmphasis">start_event</span> every cycle. If a check is pending and the value of <span style="font-style: oblique" class="cCodeBodyEmphasis">start_event</span> is TRUE, the checker terminates the check and initiates a new check with the current value of <span style="font-style: oblique" class="cCodeBodyEmphasis">test_expr</span> (even on the last cycle of a check). 
</p>    
<a name="wp3702038"> </a><p class="pBullet1" >
<img src="images/bullet1.gif" align="top" />&#8216;OVL_ERROR_ON_NEW_START
</p>    
<a name="wp3768475"> </a><p class="pIndent1" >
The checker samples <span style="font-style: oblique" class="cCodeBodyEmphasis">start_event</span> every cycle. If a check is pending and the value of <span style="font-style: oblique" class="cCodeBodyEmphasis">start_event</span> is TRUE, the assertion fails with an <code class="cCodeBody">illegal start event</code> violation. In this case, the checker does not initiate a new check and does not terminate a pending check. 
</p>    
<a name="wp3702040"> </a><p class="pBody" >
The checker is useful for ensuring proper changes in structures after various events, such as verifying synchronization circuits respond after initial stimuli. For example, it can be used to check the protocol  that an &#8220;acknowledge&#8221; occurs within a certain number of cycles after a &#8220;request&#8221;. It also can be used to check that a finite-state machine changes state after an initial stimulus.
</p>    
<a name="wp3702054"> </a><h4 class="pHead4" >
Assertion Check  </h4>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3702043"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3702045"> </a><div class="pCellBodyLeft" >
ASSERT_CHANGE
</div>    
</td>
    <td><a name="wp3702047"> </a><div class="pCellBodyLeft" >
The <em class="cEmphasis">test_expr</em> expression did not change value for <em class="cEmphasis">num_cks</em> cycles after <em class="cEmphasis">start_event</em> was sampled TRUE.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3702049"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3702051"> </a><div class="pCellBodyLeft" >
illegal start event
</div>    
</td>
    <td><a name="wp3702053"> </a><div class="pCellBodyLeft" >
The <em class="cEmphasis">action_on_new_start</em> parameter is set to &#8216;OVL_ERROR_ON_NEW_START and <em class="cEmphasis">start_event</em> expression evaluated to TRUE while the checker was in the state of checking for a change in the value of <em class="cEmphasis">test_expr</em>.
</div>    
</td>
</tr>
</table>
</div>
	
  <h4 class="pHead4" >
</h4>    

<a name="wp3702074"> </a><h4 class="pHead4" >
Cover Points  </h4>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3702057"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3702059"> </a><div class="pCellBodyLeft" >
window_open
</div>    
</td>
    <td><a name="wp3702061"> </a><div class="pCellBodyLeft" >
A change check was initiated.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3702063"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3702065"> </a><div class="pCellBodyLeft" >
window_close
</div>    
</td>
    <td><a name="wp3702067"> </a><div class="pCellBodyLeft" >
A change check lasted the full <em class="cEmphasis">num_cks</em> cycles. If no assertion failure occurred, the value of <em class="cEmphasis">test_expr</em> changed in the last cycle.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3702069"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3702071"> </a><div class="pCellBodyLeft" >
window_resets
</div>    
</td>
    <td><a name="wp3702073"> </a><div class="pCellBodyLeft" >
The <em class="cEmphasis">action_on_new_start</em> parameter is &#8216;OVL_RESET_ON_NEW_START, and <em class="cEmphasis">start_event</em> was sampled TRUE while the checker was monitoring <em class="cEmphasis">test_expr,</em> but it had not changed value.
</div>    
</td>
</tr>
</table>
</div>
	
  <h4 class="pHead4" >
</h4>    

<a name="wp3702078"> </a><h3 class="pHead3" >
See also
</h3>    

<p class="pCodeShiftTop"></p><a name="wp3702079"> </a><pre class="pCode2" >assert_time, assert_unchange, assert_win_change, assert_win_unchange, 
assert_window
</pre>    
<p class="pCodeShiftBottom"></p>
<a name="wp3758033"> </a><h3 class="pHead3" >
Examples
</h3>    

<p class="pCodeShiftTop"></p><a name="wp3758067"> </a><pre class="pCode2" >  </pre>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td colspan="4" rowspan="1"><a name="wp3758036"> </a><div class="pCellBodyLeft" >
assert_change #(
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3758044"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3758046"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ERROR, 
</div>    
<a name="wp3771581"> </a><div class="pCellBodyLeft" >
1, 
</div>    
<a name="wp3771582"> </a><div class="pCellBodyLeft" >
3, 
</div>    
<a name="wp3771583"> </a><div class="pCellBodyLeft" >
&#8216;OVL_IGNORE_NEW_START, 
</div>    
<a name="wp3771584"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ASSERT, 
</div>    
<a name="wp3771585"> </a><div class="pCellBodyLeft" >
&#8220;Error: invalid synchronization&#8221;, 
</div>    
<a name="wp3771586"> </a><div class="pCellBodyLeft" >
&#8216;OVL_COVER_ALL)
</div>    
</td>
    <td><a name="wp3758050"> </a><div class="pCellBodyLeft" >
// severity_level 
</div>    
<a name="wp3771587"> </a><div class="pCellBodyLeft" >
// width 
</div>    
<a name="wp3771588"> </a><div class="pCellBodyLeft" >
// num_cks 
</div>    
<a name="wp3771589"> </a><div class="pCellBodyLeft" >
// action_on_new_start 
</div>    
<a name="wp3771590"> </a><div class="pCellBodyLeft" >
// property_type 
</div>    
<a name="wp3771591"> </a><div class="pCellBodyLeft" >
// msg 
</div>    
<a name="wp3771592"> </a><div class="pCellBodyLeft" >
// coverage_level
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3758052"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3758054"> </a><div class="pCellBodyLeft" >
valid_sync_out (
</div>    
</td>
    <td><a name="wp3758058"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3758060"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3758062"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3758064"> </a><div class="pCellBodyLeft" >
clk,  
</div>    
<a name="wp3771593"> </a><div class="pCellBodyLeft" >
reset_n,  
</div>    
<a name="wp3771594"> </a><div class="pCellBodyLeft" >
sync == 1, 
</div>    
<a name="wp3771595"> </a><div class="pCellBodyLeft" >
out );
</div>    
</td>
    <td><a name="wp3758066"> </a><div class="pCellBodyLeft" >
// clock 
</div>    
<a name="wp3771596"> </a><div class="pCellBodyLeft" >
// reset 
</div>    
<a name="wp3771597"> </a><div class="pCellBodyLeft" >
// start_event 
</div>    
<a name="wp3771598"> </a><div class="pCellBodyLeft" >
// test_expr
</div>    
</td>
</tr>
</table>
</div>
	
  <pre class="pCode2" >
</pre>    
<p class="pCodeShiftBottom"></p>
<a name="wp3758101"> </a><p class="pBody" >
Ensures that <code class="cCodeBody">out</code> changes within 3 cycles after <code class="cCodeBody">sync</code> asserts. New starts are ignored.  </p>    <div align="left"><img src="images/ovl_checkers82.gif" height="93" width="432" border="0" vspace="0" hspace="100" />  </div>	
  <p class="pBody" >
</p>    
<p class="pCodeShiftTop"></p><a name="wp3758139"> </a><pre class="pCode2" >  </pre>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td colspan="4" rowspan="1"><a name="wp3758108"> </a><div class="pCellBodyLeft" >
assert_change #(
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3758116"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3758118"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ERROR, 
</div>    
<a name="wp3771599"> </a><div class="pCellBodyLeft" >
1, 
</div>    
<a name="wp3771600"> </a><div class="pCellBodyLeft" >
3, 
</div>    
<a name="wp3771601"> </a><div class="pCellBodyLeft" >
&#8216;OVL_RESET_ON_NEW_START, 
</div>    
<a name="wp3771602"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ASSERT, 
</div>    
<a name="wp3771603"> </a><div class="pCellBodyLeft" >
&#8220;Error: invalid synchronization&#8221;, 
</div>    
<a name="wp3771604"> </a><div class="pCellBodyLeft" >
&#8216;OVL_COVER_ALL)
</div>    
</td>
    <td><a name="wp3758122"> </a><div class="pCellBodyLeft" >
// severity_level 
</div>    
<a name="wp3771605"> </a><div class="pCellBodyLeft" >
// width 
</div>    
<a name="wp3771606"> </a><div class="pCellBodyLeft" >
// num_cks 
</div>    
<a name="wp3771607"> </a><div class="pCellBodyLeft" >
// action_on_new_start 
</div>    
<a name="wp3771608"> </a><div class="pCellBodyLeft" >
// property_type 
</div>    
<a name="wp3771609"> </a><div class="pCellBodyLeft" >
// msg 
</div>    
<a name="wp3771610"> </a><div class="pCellBodyLeft" >
// coverage_level
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3758124"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3758126"> </a><div class="pCellBodyLeft" >
valid_sync_out (
</div>    
</td>
    <td><a name="wp3758130"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3758132"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3758134"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3758136"> </a><div class="pCellBodyLeft" >
clk,  
</div>    
<a name="wp3771611"> </a><div class="pCellBodyLeft" >
reset_n,  
</div>    
<a name="wp3771612"> </a><div class="pCellBodyLeft" >
sync == 1, 
</div>    
<a name="wp3771613"> </a><div class="pCellBodyLeft" >
out );
</div>    
</td>
    <td><a name="wp3758138"> </a><div class="pCellBodyLeft" >
// clock 
</div>    
<a name="wp3771614"> </a><div class="pCellBodyLeft" >
// reset 
</div>    
<a name="wp3771615"> </a><div class="pCellBodyLeft" >
// start_event 
</div>    
<a name="wp3771616"> </a><div class="pCellBodyLeft" >
// test_expr
</div>    
</td>
</tr>
</table>
</div>
	
  <pre class="pCode2" >
</pre>    
<p class="pCodeShiftBottom"></p>
<a name="wp3758173"> </a><p class="pBody" >
Ensures that <code class="cCodeBody">out</code> changes within 3 cycles after <code class="cCodeBody">sync</code> asserts. A new start terminates the pending check and initiates a new check.  </p>    <div align="left"><img src="images/ovl_checkers84.gif" height="93" width="432" border="0" vspace="0" hspace="100" />  </div>	
  <p class="pBody" >
</p>    
<p class="pCodeShiftTop"></p><a name="wp3758255"> </a><pre class="pCode2" >  </pre>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td colspan="4" rowspan="1"><a name="wp3758224"> </a><div class="pCellBodyLeft" >
assert_change #(
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3758232"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3758234"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ERROR, 
</div>    
<a name="wp3771617"> </a><div class="pCellBodyLeft" >
1, 
</div>    
<a name="wp3771618"> </a><div class="pCellBodyLeft" >
3, 
</div>    
<a name="wp3771619"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ERROR_ON_NEW_START, 
</div>    
<a name="wp3771620"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ASSERT, 
</div>    
<a name="wp3771621"> </a><div class="pCellBodyLeft" >
&#8220;Error: invalid synchronization&#8221;, 
</div>    
<a name="wp3771622"> </a><div class="pCellBodyLeft" >
&#8216;OVL_COVER_ALL)
</div>    
</td>
    <td><a name="wp3758238"> </a><div class="pCellBodyLeft" >
// severity_level 
</div>    
<a name="wp3771623"> </a><div class="pCellBodyLeft" >
// width 
</div>    
<a name="wp3771624"> </a><div class="pCellBodyLeft" >
// num_cks 
</div>    
<a name="wp3771625"> </a><div class="pCellBodyLeft" >
// action_on_new_start 
</div>    
<a name="wp3771626"> </a><div class="pCellBodyLeft" >
// property_type 
</div>    
<a name="wp3771627"> </a><div class="pCellBodyLeft" >
// msg 
</div>    
<a name="wp3771628"> </a><div class="pCellBodyLeft" >
// coverage_level
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3758240"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3758242"> </a><div class="pCellBodyLeft" >
valid_sync_out (
</div>    
</td>
    <td><a name="wp3758246"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3758248"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3758250"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3758252"> </a><div class="pCellBodyLeft" >
clk,  
</div>    
<a name="wp3771629"> </a><div class="pCellBodyLeft" >
reset_n,  
</div>    
<a name="wp3771630"> </a><div class="pCellBodyLeft" >
sync == 1, 
</div>    
<a name="wp3771631"> </a><div class="pCellBodyLeft" >
out );
</div>    
</td>
    <td><a name="wp3758254"> </a><div class="pCellBodyLeft" >
// clock 
</div>    
<a name="wp3771632"> </a><div class="pCellBodyLeft" >
// reset 
</div>    
<a name="wp3771633"> </a><div class="pCellBodyLeft" >
// start_event 
</div>    
<a name="wp3771634"> </a><div class="pCellBodyLeft" >
// test_expr
</div>    
</td>
</tr>
</table>
</div>
	
  <pre class="pCode2" >
</pre>    
<p class="pCodeShiftBottom"></p>
<a name="wp3758256"> </a><p class="pBody" >
Ensures that <code class="cCodeBody">out</code> changes within 3 cycles after <code class="cCodeBody">sync</code> asserts. A new start reports an <code class="cCodeBody">illegal start event</code> violation (without initiating a new check) but any pending check is retained (even on the last check cycle).  </p>    <div align="left"><img src="images/ovl_checkers78.gif" height="93" width="432" border="0" vspace="0" hspace="100" />  </div>	
  <p class="pBody" >
</p>    
<a name="wp3758104"> </a><p class="pBody" >

</p>    
<a name="wp3702175"> </a><p class="pBody" >

</p>
<p style="margin-top:10px"> </p>
 <hr noshade="noshade" size="3" />

<center>
 <table border="0" cellspacing="5px" cellpadding="0" width= "100%" bgcolor="#ddf5ff">
 <tr>
  <td>&nbsp;</td>
  <td align="left" valign="top">
    <span style="font-size: 11px ; font-weight: bold; font-family: Arial, Verdana, Helvetica, sans-serif">
    &copy; Accellera Organization, Inc. 2005<br /> All Rights Reserved.</span>
  </td>
  <td align="right" valign="top">
    <span style="font-size: 11px ; font-weight: bold; font-family: Arial, Verdana, Helvetica, sans-serif">
    Standard OVL V1.1a</span>
  </td>
 </tr>
 </table>
</center>
 <hr />


 </body>
</html>



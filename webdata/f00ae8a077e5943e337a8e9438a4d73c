<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>The CCM</title>
</head>

<body>

<p align="center"><a href="page4.htm">
<img border="0" src="previous.gif" align="left" width="26" height="26"></a><a href="page6.htm"><img border="0" src="next.gif" align="right" width="26" height="26"></a></p>

<p align="center"><u><font size="6">The CCM </font></u></p>
<font FACE="Times New Roman" SIZE="5">
<ul>
  <li>
  <p ALIGN="LEFT">CCM components are the basic building blocks in a CCM system. 
  A major contribution of CCM derives from standardizing the component 
  development cycle using CORBA as its middleware infrastructure. Component 
  developers using CCM define the IDL interfaces that component implementations 
  will support.</li>
</ul>
</font>

<p align="left">&nbsp;</p>
<p align="center">
<img border="0" src="ccmCompoentwithIDL.gif" width="932" height="629"></p>
<p align="center">&nbsp;</p>
<p class="MsoNormal" align="center"><b><font size="6">Methods used to overcome 
the inadequacies of the original CORBA object model?</font></b></p>
<ul>
  <li>
  <p class="MsoNormal"><font size="5">&nbsp;<b><font color=red>Facets:</b> Facets, also known as <i>
  provided interfaces</i>, are interfaces that a component provides, yet which 
  are not necessarily related to its supported interfaces via inheritance. 
  Facets allow component to expose different views to its clients by providing 
  different interfaces that can be invoked.</font></font></li>
</ul>
<p class="MsoNormal"><font size="5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; For instance, the Stock_Quote interface 
provides a stock price querying capability to the component.</font></p>
<ul>
  <li>
  <p class="MsoNormal"><font size="5">&nbsp;<b>Receptacles</b>: These allow 
  components to &quot;hook&quot; themselves together. Component systems contain many 
  components that work together to provide the client functionality. The 
  receptacle allows a component to declare its dependency to an object reference 
  that it must use. Receptacles provide the mechanics to specify interfaces 
  required for a component to function correctly.</font></li>
</ul>
<p class="MsoNormal" style="text-autospace: none"><font size="5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The
<span style="font-family: Courier">Stock_Exchange </span>component uses the
<span style="font-family: Courier">SEC </span>(Securities and Exchange 
Commission) interface to function correctly.</font></p>
<ul>
  <li>
  <p class="MsoNormal"><font size="5">&nbsp;<b>Event sources/sinks</b>: Components 
  can also interact by monitoring asynchronous events. A component declares its 
  interest to publish or subscribe to events by specifying <i>event sources </i>
  and <i>event sinks </i>in its definition.</font></li>
</ul>
<p class="MsoNormal" style="text-autospace: none"><font size="5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; For example, 
the <span style="font-family: Courier">Stock_Exchange </span>component can be an 
event sink that processes <span style="font-family: Courier">Buy_Offers </span>
and <span style="font-family: Courier">Sell_Offers </span>events and it can be 
an event source that publishes <span style="font-family: Courier">Price_Change
</span>events.</font></p>
<ul>
  <li>
  <p class="MsoNormal"><font size="5">&nbsp;<b>Attributes</b>: To enable component 
  configuration, CCM extends the notion of <i>attributes </i>defined in the 
  traditional CORBA object model. Attributes can be used by configuration tools 
  to preset configuration values of a component.</font></li>
</ul>
<p align="left">&nbsp;</p>
<p align="center">
<img border="0" src="ComponentModel.gif" width="523" height="360"></p>
<p align="center">&nbsp;</p>
<p align="center">
<img border="0" src="CCMCompoents.jpg" width="998" height="785"></p>
<p align="center">&nbsp;</p>
<p align="center">&nbsp;</p>
<p class="MsoNormal" style="text-autospace: none"><font size="5">These new port 
mechanisms significantly enhance component reusability when compared to the 
traditional CORBA object model. For instance, an existing component can be 
replaced by a new component that extends the original component definition by 
adding new interfaces <i>without affecting existing clients </i>of the 
component.</font></p>
<ul>
  <li>
<p class="MsoNormal"><font size="5"><b><font color=red>Life Cycle Management: </b>To standardize 
the component life cycle management interface, CCM introduces the
<span style="font-family: Courier">home </span>IDL keyword that specifies the 
life cycle management strategy of each component. A client can access the
<span style="font-family: Courier">home</span> interface to control the life 
cycle of each component instance it uses. For example, the
<span style="font-family: Courier">home </span>interface can create and remove 
components instances.</font></font></p>
  </li>
</ul>
<p align="left">&nbsp;</p>

</body>

</html>

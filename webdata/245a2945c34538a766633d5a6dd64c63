PROFESSOR: WE ARE GOING TO TALK ABOUT RELATIONAL
ALGEBRA WHICH IS THE THEORETICAL MODEL.  I
HOPE TO FINISH SQL BY NEXT TUESDAY SO THAT
WE CAN SPEND FOUR LECTURES ON PHYSICAL
DATA STRUCTURES.  AND THIS WAY YOU CAN
FINISH THE EXERCISE JUST IN TIME SO THAT
WE'RE GOING TO HAVE THE FIRST MIDTERM.
SO YOU NOTICE NOW IN THE NEXT
FEW WEEKS YOU'LL HAVE THREE EXERCISES EACH
DUE IN ONE WEEK.  SO THAT'S WHERE YOU PUT
IN MOST OF YOUR EFFORT AND THEN THE
MIDTERM.  ANY QUESTION ABOUT THE SCHEDULE?
OKAY.
     NOW, SQL, SEQUEL IS THE LANGUAGE THAT
YOU ARE GOING TO USE FOR YOUR PROGRAMMING
EXERCISE.  SO YOU MAY ASK WHY ARE WE
STUDYING THESE OTHER LANGUAGES?  THE FACT
BEING THAT A RELATIONAL DATABASE WAS BASED
UPON SOUND MATHEMATICAL PRINCIPLES.  THE
PERSON WHO INVENTED IT WAS A MATHEMATICIAN
SO THE NICE THING ABOUT USING MATHEMATICS
AS A BASE IS THAT WE CAN -- WE CAN
SOMETIMES PROVE SOMETHING CAN BE DONE AND
NOT BE DONE, EXPRESSIVE POWER.  SO THOUGH
IN PRACTICE YOU'RE GOING TO USE SQL AT
LEAST YOU SHOULD KNOW SOME OF THE THEORY.
WHAT WE'LL DO IS COVER RELATIONAL ALGEBRA
AS THE BASE FOR FOUNDATION FOR THE
RELATIONAL DATABASE APPROACH.  NOW, LATER
ON AFTER THE MIDTERM WE'LL TALK A LITTLE
BIT ABOUT RELATIONAL CALCULUS WHICH
HAPPENS TO BE THE LANGUAGE THAT THEY
ORIGINALLY USED TO FORM DATABASE APPROACH
WITH THE RELATIONAL CALCULUS WE'RE GETTING
CLOSER TO MATHEMATICAL LOGIC AND A LOT OF
LOGIC CONCEPT WILL COME IN.  SO FOR THOSE
OF YOU WHO ARE MOSTLY -- MORE
THEORETICALLY INCLINED YOU'LL FIND THAT
INTERESTING.  OTHER PEOPLE MAY NOT FIND
THAT TO BE SO INTERESTING, BUT DON'T WORRY
BECAUSE THE PROJECT IS COMING ALONG WHICH
WILL BE TOTALLY PRACTICAL.
     OKAY.  SO BASICALLY WE HAVE THESE TWO
APPROACHES, RELATIONAL ALGEBRA WHICH IS
LIKE SO WE CAN OPERATE ON OBJECTS AND
THESE OBJECTS ARE RELATIONS.  AND ANOTHER
IS BASED UPON MATHEMATICAL, THAT IS
RELATIONAL CALCULUS.  WE'LL TALK ABOUT
ALGEBRA TODAY AND CALCULUS AFTER THE
MIDTERM.  BOTH ARE WHAT WE CALL
RELATIONALLY COMPLETE SO THIS IS USEFUL
THEORETICAL CONCEPT.  BY RELATIONALLY
COMPLETE WE MEAN WE CAN EXPRESS EVERYTHING
THAT IS EXPRESSABLE USING RELATIONAL
ALGEBRA.
     YOU SAY WHAT'S SO GOOD ABOUT IT?
WELL, IMPORTANCE IS THAT IF YOU HAVE A
LANGUAGE AND THE CONCEPT YOU CANNOT
EXPRESS IN THIS LANGUAGE, THEN THE
LANGUAGE HAS SOME DEFICIENCY.  IN OTHER
WORDS, IT'S NOT POWERFUL ENOUGH.  SO THIS
EXPRESSABILITY IS LIKE A YARDSTICK TO
JUDGE HOW POWERFUL IS THE LANGUAGE.  IF
YOU HAVE A LANGUAGE YOU CAN ALSO ASK SOME
QUERIES AND SOME QUERIES YOU CANNOT EVEN
EXPRESS THAT'S A DEFICIENT LANGUAGE.  FOR
ALGEBRA AND CALCULUS BOTH OF EQUAL POWER
THEY ARE CALLED RELATIONALLY COMPLETE.
NOW SEQUEL, SQL -- THERE IS ONE SEAT THERE
AND ANOTHER ONE OVER THERE.  NOW SQL WHICH
IS LANGUAGE IN PRACTICE YOU'RE GOING TO
USE IS ALSO RELATIONAL COMPLETE, SO WE ARE
SURE THAT ALL OF THESE LANGUAGES ARE
EQUALLY POWERFUL.
     NOW LIKE I MENTIONED, THE ALGEBRA
APPROACH CONSISTS OF A NUMBER OF OPERATORS
JUST LIKE IN ORDINARY ALGEBRA WE HAVE
PLUS, MINUS, THOSE OPERATORS AND HERE WE
HAVE THIS, RESTRICT, PROJECT, PRODUCT,
UNION, INTERSECTION, DIFFERENCE, JOIN AND
DIVIDE.  AND THE ALGEBRA IS CLOSED.  BY
THAT WE MEAN THAT IF YOU DO ANYTHING MORE
IT'S NOT POSSIBLE.  FOR EXAMPLE, THE SET
OF INTEGERS IS CLOSED UNDER ADDITION.
THESE MEANS IF YOU ADD TO INTEGERS THE
RESULT IS WHAT?  ANOTHER INTEGER.  SO YOU
STAY IN THE DOMAIN OF INTEGERS.
SUBTRACTION INTEGER, YOU GET INTEGER.  BUT
IS IT CLOSED UNDER DIVISION?  NO BECAUSE
DIVIDE TWO NUMBERS YOU GET WHAT?  COULD BE
A FRACTION, RIGHT?  MAY NOT BE A WHOLE
NUMBER.  SO JUST MEANS IT IS NOT CLOSED
UNDER THE OPERATION OF DIVISION.  NOW FOR
RELATIONAL ALGEBRA THE GOOD THING IS THAT
WE KNOW THESE OPERATORS AND IF YOU APPLY
THOSE OPERATORS ON OBJECTS, IT IS CLOSED.
YOU ALWAYS OPERATING ON THE TABLES.
     THE IDEA IS QUITE SIMPLE TO
UNDERSTAND IF YOU DRAW PICTURES AND
ILLUSTRATE THE MOST IMPORTANT OPERATORS.
IN FACT THE TWO MOST USEFUL ARE THE FIRST
TWO.  I THINK I ALREADY TALK ABOUT SEVERAL
TIMES.  IN DAY TO DAY OPERATION WHEN WE DO
THOSE BREAD AND BUTTER OPERATIONS LIKE
DOING PAYROLL, ALL THOSE KIND OF THINGS,
WHAT WE ALWAYS DO IS TRY TO EITHER SELECT
A FEW RECORDS FROM A FILE SUCH AS FINDING
RECORDS WHERE THE SALARY IS BELOW 10,000.
OR WE ARE TRYING TO FIND A SELECTED FIELD
OR ATTRIBUTE OR COLUMNS, WHATEVER NAME YOU
WANT TO USE.  FOR EXAMPLE, IF I WAS DOING
PAYROLL, I ONLY WANT TO SELECT A NAME AND
ADDRESS AND SALARY FIELD.  THE OTHER FIELD
I DON'T CARE.  OKAY?  SO THE FIRST ONE IS
RESTRICT LIKE THIS PICTURE DEPICTS.  IN
OTHER WORDS, I TAKE THE ROWS I WANT BY
SOME KIND OF CONDITION.  SOME KIND OF
PREDICATE.  AND THE OTHER ONE IS
PROJECTION.  SO YOU PROJECT ON TO THE
ATTRIBUTES THAT YOU WANT TO GET THIS ONE.
     IF YOU ALREADY TRIED ORACLE YOU
NOTICE THAT YOU CAN DE -- YOU CAN APPLY
THE CONDITIONS AND SELECT THOSE COLUMNS
YOU WANT SO YOU CAN VIEW THE FIELD.  IN
OTHER WORDS, VIRTUAL RELATION OR VIEW
USUALLY CAN BE CONSTRUCTED USING THE
RESTRICTION AND PROJECTION OPERATORS.  AND
I WILL SAY THAT 80 PERCENT OF WHAT WE DO
IN DATABASE CAN BE ACCOMPLISHED USING
THESE TWO OPERATORS.  THEY ARE THE MOST
IMPORTANT.  BUT THERE ARE NOT COMPLETE.
IN OTHER WORDS, IF YOU HAVE JUST THESE TWO
OPERATORS I CANNOT DO EVERYTHING I WANT.
WHY NOT?  YES?
     STUDENT:   SOMETIMES YOU NEED A
DERIVED ATTRIBUTE.
     PROFESSOR:   SOMETIMES I NEED DERIVED
ATTRIBUTE.  QUITE CORRECT.  ALSO WHEN
YOU -- ONE IMPORTANT THING.  THESE TWO
OPERATORS, THEY OPERATE HOW MANY
RELATIONS?  ONE?  TWO?  THREE?  FOUR?  HOW
MANY?  HOW MANY RELATIONS?  THESE PROJECT
AND RESTRICT OPERATOR?
     STUDENT:   ONE.
     PROFESSOR:   ONE, RIGHT.  BECAUSE
LET'S SAY THIS IS MY PAYROLL RELATION.  I
APPLY THIS RESTRICT TO PICK UP ROWS OR
PROJECT TO PICK UP COLUMNS.  I HAVE NO WAY
OF COMBINING INFORMATION FROM FOR THAN ONE
TABLE, DO I?  NO BECAUSE THESE TWO
OPERATORS IS INTENDED TO OPERATE ON A
SINGLE FILE OR SINGLE RELATION.  SO, VERY
USEFUL FOR SO-CALLED UNI RECORD
PROCESSING.  ONE AT A TIME.  IF YOU THINK
ABOUT IT, ALL THOSE PAYROLL, BILLING
OPERATIONS, THEY'RE UNI RECORD PROCESSING.
YOU'RE READING RECORD INTO THE BUFFER,
PROCESS IT AND THEN SPIT IT OUT.  BY
SPITTING OUT, I MEAN YOU WRITE IT BACK ON
DATABASE OR DATABASE OR PRINT IT OUT.
ALWAYS ONE RECORD AT A TIME.  THIS IS FINE
AS LONG AS WE DON'T COMBINE INFORMATION
FROM DIFFERENT RELATIONS OR DIFFERENT
TABLES.  BUT THIS IS NOT TRUE BECAUSE THE
POWER OF DATABASE LIES IN THE FACT THAT WE
CAN COMBINE INFORMATION FROM MANY
DIFFERENT RELATIONS, DIFFERENT TABLES AND
THESE TWO CANNOT ACCOMPLISH THAT.  AND
WHAT ENABLE US TO ACCOMPLISH THAT IS THE
OPERATION WHAT WE CALL THE JOIN, JOIN
OPERATION.  THE JOIN OPERATION IS ENABLE
TO GO ACROSS FROM ONE RELATION TO ANOTHER
AND THEN COMBINE THAT.  NOW, HERE THEY ARE
ALSO A COUPLE OTHER RELATIONS WHICH ARE
DEPENDING ON MORE THAN ONE LIKE THEORETIC,
THESE ARE BASED UPON THEORY NOTION OF
UNION OF TWO SETS.  YOU COMBINE TWO
TABLES.  INTERSECTION, FINDING A COMMON
ROWS OF THE TWO TABLES, OR DIFFERENCE,
TAKING THE DIFFERENCE OF TWO TABLES.
     AND ALSO THE CARTESIAN PRODUCT, WHICH
IS TAKE TWO ARBITRARY TABLES AND FIND ALL
POSSIBLE COMBINATIONS OF THAT.  VERY
EXPENSIVE OPERATION.  YOU CAN EASILY SEE
THAT BECAUSE IF YOU HAVE TWO BIG TABLES
AND FIND ALL THE COMBINATIONS, SO THAT'S
EXPENSIVE.
     SO, ASIDE FROM RESTRICT AND PROJECT,
THESE OPERATE ON A SINGLE TABLE VERY NICE.
THE OTHER MOST USEFUL IS THE JOIN.  WE
CALL IT NATURALLY JOIN IS THAT IS WHAT
ENABLE US TO COMBINE THE INFORMATION.
     THEN WE GIVE EXAMPLE HERE.  YOU SEE
THIS EXAMPLE SO MANY TIMES YOU GET BORED.
SUPPLIER PART.  NOW IN MY EXAM I THROW IN
ANOTHER ONE A PROJECT WHERE YOU HAVE
SUPPLIER RELATION, PART RELATION, PROJECT
RELATION AND SOMETHING TO RELATE THEM.
     OKAY.  SO HERE WE HAVE A TABLE WE
CALL FLYER AND SUPPLIER HAS ATTRIBUTES,
NAME, STATUS AND CITY.  AND WE PART, PART
NAME, COLOR, WEIGHT, CITY AND THEN THIS
TABLE, SP TABLE SAYS WHAT SUPPLIER,
SUPPLIED WHAT PART, IN WHAT QUANTITY.
NOW, LET'S DO REVERSE ENGINEERING.  BY
THAT I MEAN, PREVIOUSLY IN THE FIRST
EXERCISE I ASKED YOU TO DESIGN THE
DATABASE, A CONCEPTUAL DATABASE AND WHAT
YOU DID IS THAT YOU DESIGNED ER DIAGRAM
AND COME UP WITH THE SCHEMA.  NOW WE SEE
THE ACTUAL RELATIONS.  SO I'M ASKING YOU
TO DO REVERSE ENGINEERING SO THAT YOU
CONSTRUCT ER DIAGRAM FOR ME.  CAN YOU DO
THAT?  OKAY.  GIVEN THE THREE TABLES,
WHAT'S THE CORRESPONDING ER DIAGRAM?
OKAY.
     STUDENT:   TABLE S.
     PROFESSOR:   TABLE S.  ER DIAGRAM.
     STUDENT:   ENTITY S.
     PROFESSOR:   VERY GOOD.  THANK YOU.
AND I WILL JUST GO BY ROW, IF YOU DON'T
MIND.  YES?
     STUDENT:   ENTITY S.
     PROFESSOR:   ENTITY S HAS WHAT?
     STUDENT:   FOUR ATTRIBUTES.
     PROFESSOR:   FOUR ATTRIBUTES.  AND
THEY'RE OBVIOUSLY -- S NUMBER, S NAME,
STATUS AND CITY.  AND WHAT IS THE KEY OF
THIS ATTRIBUTE?  ENTITY?
     STUDENT:   KEY WOULD BE THE P NUMBER.
     PROFESSOR:   YEAH YOU SELECT THE MOST
NATURAL ONE.  THE S NUMBER IS THE KEY
BECAUSE THAT'S THE WAY WE CONSTRUCT IT.
BUT THERE COULD BE WHAT WE CALL ALTERNATE
KEYS.  ANOTHER ONE WE CAN USE AS KEY.
     STUDENT:   CAN COMBINE ALL ATTRIBUTES
AND MAKE A KEY OUT OF THAT.  THE S NAME IS
JUST THE S NAME.
     PROFESSOR:   RIGHT IT'S POSSIBLE THE
S NAME CAN BE ALTERNATE IF THEY'RE UNIQUE.
IT'S CERTAINLY CORRECT TO SAY YOU COMBINE
ALL THIS IT BECOMES A KEY BUT THAT'S A
VERY EXPENSIVE KEY.  ANY TIME HAVE YOU TO
USE THE WHOLE THING.  BUT JUST LOOKING AT
THE DATA, MAYBE YOU SEE THAT S NAME CAN BE
ALTERNATE KEY IF YOU SEE DUPLICATE THAT
OBVIOUSLY CANNOT BE USED AS THE KEY.  SO
WE'VE GOT ONE ENTITY AND THEN LET'S TURN
AROUND?  YES?  ANOTHER ONE?
     STUDENT:   ENTITY P.
     PROFESSOR:   ENTITY P.  AND
ATTRIBUTES?
     STUDENT:   IT HAS FIVE ATTRIBUTES, P
NUMBER, P NAME, COLOR, WEIGHT AND CITY.
AND WHICH ONE IS THE KEY?
     STUDENT:   THE P NUMBER.
     PROFESSOR:   AND THIS ONE IS THAT AN
ALTERNATE KEY?
     STUDENT:   NO.
     PROFESSOR:   WHY NOT?
     PROFESSOR:   GIVE ME EXAMPLE.
     STUDENT:   OF AN ALTERNATE KEY?
     PROFESSOR:   WHERE?
     STUDENT:   THERE IS TWO P NAME HAS
TWO SCREWS.  I CANNOT USE THAT. SO
OBVIOUSLY NOT AN ALTERNATE KEY.  ANY MORE
ENTITY?
     STUDENT:   RELATIONSHIP.
     PROFESSOR:   OKAY.  YES?  ACTUALLY
THE BLUE -- YEAH.  WHAT IS THE
RELATIONSHIP?  NEXT GUY?  TWO PEOPLE
SHAKING -- OKAY.  I KILL TWO BIRDS WITH
ONE STONE.  THAT'S GOOD.
     STUDENT:   MANY TO MANY.
     PROFESSOR:   RELATIONSHIP.
     STUDENT:   MANY TO MANY.
     PROFESSOR:   MANAGEMENT?
     STUDENT:   MANY TO MANY.
     STUDENT:   NO.
     STUDENT:   SP.
     PROFESSOR:   SP IS SUPPLIER PART
RELATION AND I LIKE YOUR HAIR.
     STUDENT:   THANK YOU.
     PROFESSOR:   WHAT DO I DO NOW?  I
NEED TO DRAW SOME LINES.
     STUDENT:   THEY WOULD BOTH BE --
     PROFESSOR:   FROM SP TO WHERE?
     STUDENT:   ONE TO S.
     PROFESSOR:   ONE TO S, ONE TO P.  SO
FAR SO GOOD.  AND THEN I NEED TO WRITE
SOMETHING HERE AND WHAT IS THAT?
     STUDENT:   THE S SIDE?
     PROFESSOR:   MANY, MANY, ONE, MANY?
     STUDENT:   MANY, MANY.
     PROFESSOR:   MANY, MANY WHAT?
     STUDENT:   S1 GOES TO A WHOLE BUNCH
OF STUFF.  EACH ONE CAN GO --
     PROFESSOR:   BECAUSE A SUPPLIER CAN
SUPPLY MANY PARTS AND PART CAN BE SUPPLIED
BY MANY SUPPLIERS, RIGHT?  THERE IS NO
RESTRICTION THAT A PART MUST BE SUPPLIED
BY A CERTAIN SUPPLIER, SO WHY I SAID MANY
TO MANY.  OKAY.  ANY ATTRIBUTES FOR THIS
ENTITY?
     STUDENT:   QUANTITY.
     PROFESSOR:   QUANTITY.  AND I DRAW
THIS HERE.  VERY GOOD.  SO I THINK THIS
EXERCISE WE RUN THROUGH SEVERAL TIMES.  SO
I HOPE THIS BECOME ALMOST SECOND NATURE
YOU CAN DRAW A DIAGRAM LIKE THIS.
     IT'S VERY LOGICAL, VERY SENSIBLE AND
IT'S A VERY GOOD WAY OF EXPRESSING, THE
CONTENT OF THE DATABASE.  QUESTIONS?
OKAY.  SO NOW WE SEE THAT THESE THREE
TABLES ARE NOT INDEPENDENT.  THEY ARE
RELATED.  AND THEY ARE RELATED THROUGH
ONCE WE GET CONCEPTUAL MODEL IT'S VERY
CLEAR THEY ARE RELATED THROUGH SP
RELATION.  SO NOW IF I WANT TO EXTRACT
INFORMATION FROM THE PART TABLE, LET'S SAY
I WANT TO FIND WHAT PARTS HAVE THE COLOR
GREEN, WHAT DO I DO?  THIRD ROW NOW.
YEAH?  YOU.
     STUDENT:   CAN YOU REPEAT THE
QUESTION?
     PROFESSOR:   I WANT TO FIND WHAT ARE
THE GREEN PARTS.
     STUDENT:   OKAY.  SO YOU WOULD LIKE
SQL STATEMENT?  I DON'T UNDERSTAND WHAT
YOU WANT.
     PROFESSOR:   WE HAVE THREE OPERATORS.
RESTRICT, PROJECT AND JOIN.
     STUDENT:   RESTRICT.
     PROFESSOR:   RESTRICT.  WHAT?
     STUDENT:   ON COLOR.  BASED ON-.
     PROFESSOR:   COLOR.  WHICH RELATION?
     STUDENT:   EXCUSE ME?
     PROFESSOR:   WHICH RELATION.  WE HAVE
THREE.
     STUDENT:   P.
     PROFESSOR:   P.  SO THAT AFFECTS
SINGLE RELATION, P RELATION AND DO A
RESTRICT.
     IF I WANT TO FIND SUPPLIERS THAT ARE
LOCATED IN LONDON?
     STUDENT:   ME?
     PROFESSOR:   NO, YOU.  SORRY.
     STUDENT:   I DON'T GET WHY THE COLORS
IS ACTUALLY LIKE IN A COLUMN WHY DID YOU
USE RESTRICT?  IT'S FOR ROWS.
     PROFESSOR:   SORRY.  MANY I POSED
QUERY.  WHAT I WANT ARE THE PARTS WITH THE
GREEN COLOR.  IF I ONLY PICK UP THE COLUMN
WHICH IS YOU KNOW COLOR GREEN AND THAT'S
GOT NO INFORMATION --
     STUDENT:   OH.
     PROFESSOR:   WHAT I'M MOST INTERESTED
IN PART, P1, P2, PART NUMBER.  MY
QUESTION, OR QUERY, I WANT SUPPLIERS
SUPPLY NUMBERS AND NAME LOCATED IN LONDON.
     STUDENT:   OKAY.  YOU JUST DO THE
SAME THING AS DID YOU.
     PROFESSOR:   WHAT SAME THING?
     STUDENT:   USE RESTRICT FOR THE CITY.
     PROFESSOR:   RESTRICT ON WHAT?
     STUDENT:   ON S.  THE SUPPLIER.
     PROFESSOR:   SUPPLIER.  OKAY  .
     ON SUPPLIER AND MY RESTRICT PREDICATE
OR CONDITION IS THAT CITY MUST EQUAL TO
LONDON AND PICK.  NOW, IF I MAKE IT A
FURTHER MORE COMPLEX THEN I WILL SAY I
WANT A SUPPLIER NAME ONLY JUST A NAME,
SUPPLIER NAME ONLY OF THOSE SUPPLIERS IN
LONDON.  JUST SUPPLIER NAME OF THOSE
SUPPLIERS IN LONDON.  YEAH?
     STUDENT:   SOMETHING TO DO --
     PROFESSOR:   TWO OPERATIONS.
     STUDENT:   WE HAVE TO DO PROJECT TO
GET THE S NUMBER IN THE S TABLE.  AND THEN
WE DO THE RESTRICT FROM S TABLE TO FIND
THE CITY.
     PROFESSOR:   ANYBODY DISAGREE WITH
THAT?  YES?
     STUDENT:   HAVE TO DO IT IN THE OTHER
ORDER.
     PROFESSOR:   WHY?
     STUDENT:   YOU HAVE TO GET ROWS FIRST
OTHERWISE YOU'VE LOST THE INFORMATION.
     PROFESSOR:   SEE THAT?  OKAY.  SO YOU
SEAT RELATIONAL ALGEBRA IS WHAT WE CALL
THE PROCEDURAL LANGUAGE.  MEANING WHAT?
MOST LANGUAGES ARE PROCEDURAL.  HAVE YOU
TO DO OPERATIONS IN SEQUENCE.  IF YOU
CHANGE THE SEQUENCE THE RESULT MAY NOT BET
SAME.  SO, IF YOU DO THE PROJECT FIRST,
WE'RE LOSING INFORMATION ON CITY.  WE
CANNOT -- YOU HAVE TO DO IT THE OTHER WAY.
THAT'S TYPICAL FOR A PROCEDURAL LANGUAGE.
ON THE OTHER HAND, CALCULUS IS
NONPROCEDURAL.  WE EXPRESS IT AS A LOGICAL
EXPRESSION.  DOESN'T SAY IN WHAT ORDER WE
HAVE TO DID THAT.
     NOW NEXT QUERY.  SUPPOSE I WANT --
LISTEN TO THIS.  I WANT TO KNOW THE PARTS
SUPPLIED BY SUPPLIERS IN LONDON.  I WANT
TO KNOW THE PARTS SUPPLIED BY SUPPLIERS IN
LONDON.  THIS IS COMPLEX.  BUT LET'S TRY
THAT.  I'M GOING TRY EVERYBODY WITH HATS.
     STUDENT:   TAKE THE PRODUCT OF S AND
P FIRST.
     PROFESSOR:   TAKE PRODUCT OF S AND P.
     STUDENT:   AND THEN YOU WOULD DO A
RESTRICT.
     PROFESSOR:   DO A RESTRICT.
     STUDENT:   ON THAT PRODUCT.
     PROFESSOR:   OF THAT PRODUCT.
     STUDENT:   FOR CITY.
     PROFESSOR:   OKAY.
     STUDENT:   AND THEN YOU WOULD DO A
PROJECT ON DEPARTMENT.
     PROFESSOR:   THAT'S VERY GOOD IN A
SENSE THAT HAVE YOU COME UP WITH A
SEQUENCE OPERATION.  IN OTHER WORDS, WHAT
HE SUGGESTS IS TO TAKE THE CARTESIAN
PRODUCT OF THESE TWO TABLES AND THEN TRY
TO DO THE RESTRICT AND PROJECT FROM THAT.
THE PROBLEM IS IF I DO I'VE GOT ALL
POSSIBLE COMBINATIONS.  NOT NECESSARILY
THE ONE I'M LOOKING FOR NAMELY BECAUSE IF
YOU DO THAT, EVERY PART WILL BE SUPPLIED
BY SOMEBODY IN LONDON.  LET'S SEE.  TRY
ANOTHER ONE WITH HAT.  YOU.
     STUDENT:   YOU WOULD RESTRICT P TO
LONDON AND THEN PROJECT FOR THE PART.
     PROFESSOR:   I RESTRICT P TO LONDON?
     STUDENT:   AND PROJECT, LOOKING FOR
PART NAME OR PART NUMBER?
     PROFESSOR:   I THINK I SAID IT WRONG.
I'M LOOKING FOR PART.  SUPPLIED BY SOME
SUPPLIER IN LONDON.  NOT ABOUT PARTS THAT
ARE -- I DON'T KNOW WHAT THIS IS FOR.
MAYBE THIS PART I USED IN LONDON OR
SOMETHING.  I'M LOOKING FOR PART SUPPLIED
BY SUPPLIER AND SUPPLIER IS IN LONDON.
OKAY.  NO HAT PERSON VOLUNTEER.  OKAY.
YEAH?
     STUDENT:   THERE IS -- DO YOU HAVE A
PART -- THE TABLE FOR PARTS LISTS THE CITY
THAT THEY CAN BE FOUND IN, RIGHT?  I MEAN
IT DEPENDS ON YOUR INTERPRETATION --
     PROFESSOR:   LET'S IGNORE THAT.
BECAUSE THIS IS NOT WHAT I MEANT.
     STUDENT:   FOR YOUR QUESTION --
     PROFESSOR:   THIS MAY BE PARTS THAT
ARE JUST USED IN THAT CITY, OKAY?  I DON'T
KNOW WHY -- I'M GOING TO TRY FIND A PART
SUPPLIED BY SUPPLIER LOCATED IN LONDON.
YEAH?
     STUDENT:   IN THE S TABLE YOU WOULD
RESTRICT THEN GO TO SP RELATION.  FIND THE
S NUMBER AND THEN YOU'LL GET THE PART
NUMBER AND TAKE THAT DOWN TO P.
     PROFESSOR:   OKAY  .
     EVERYBODY LISTEN TO HIM.  OKAY.  WHAT
HE SAY IS THAT YOU WILL TRY FIRST GO TO
ONE TABLE, FIND SUPPLIER IN LONDON THEN GO
TO ANOTHER TABLE.  MY QUESTION IS HOW DO
YOU GO TO ANOTHER TABLE?
     STUDENT:   USING JOIN.
     PROFESSOR:   USE THE JOIN.  THAT'S
THE RIGHT ANSWER.  OKAY.  NOW LET'S --
LET'S TRY TO TRACE ONE OF THESE FOR YOU.
LET'S SAY WE FIND A FIRST SUPPLIER IN
LONDON, S1.  S1 IS IN LONDON, RIGHT?
EVERYBODY SEE THAT, RIGHT?  OKAY.  NOW I'M
GOING FIND WHAT PARTS SUPPLIED BY THIS
SUPPLIER.  HOW DO I DO THAT?  SO I GO FROM
S1, I WANT TO CHECK WHAT PART SUPPLIED BY
THEM.  GUY FROM THIS TABLE TO THIS TABLE.
TRACING THROUGH S1.  RIGHT?  AND THAT IS
DONE BY A JOIN.  I FOLLOW THIS LINK TO THE
TABLE.  SO NOW I FOUND OUT.  THERE ARE
MANY.  SO ACTUALLY P1, P2, P3, P4.
EVERYBODY.  OKAY.  ALL SIX PARTS ARE
SUPPLIED BY THIS SUPPLIER.  AND IF I WANT
A PART NAME WHAT DO I DO?  YEAH?
     STUDENT:   DO A JOIN WITH P.
     PROFESSOR:   DO A JOIN WITH P.  SO
NOW I FOLLOW P1 TO HERE AND I GET NUT.  I
FOLLOW P2 TO HERE GET BOLT.  SO ON, SO
FORTH.  YOU SEE THE REASON WE HAVE TO JOIN
NOW?  WHAT IS THE REASON?  CAN YOU --
     STUDENT:   SO YOU CAN RELATE DATA.
     PROFESSOR:   TO RELATE.  THAT'S GOOD.
IN OTHER WORDS, THE REASON WE USE JOIN,
COMBINE.  LET'S GET TOGETHER YOU AND ME
(SINGING) WHAT'S THE NEXT LINE?  WHY DON'T
YOU AND I COMBINE.  SOMETHING LIKE THAT.
RELATE.  FIND A RELATION.  A LINK TO THE
WAY YOU RELATE IS THROUGH THAT JOIN
OPERATOR.  YOU CAN SEE THAT ONLY USING THE
JOIN OR LIKE SOMEONE SUGGESTED EARLIER THE
PRODUCT CAN BE COMBINED TABLES.  PRODUCT
IS NO GOOD BECAUSE PRODUCT GIVE YOU ALL
COMBINATIONS, NOT SELECTIVE.  SO IT IS THE
JOIN.  SO HAVING TO EXPLAIN THE RATIONALE
YOU BEGIN TO SEAT POWER OF THIS OPERATOR,
RIGHT?  SO THESE THREE OPERATORS ARE THE
MOST IMPORTANT.  RESTRICT, SELECT AND
JOIN.  THE PRODUCT GIVE YOU ALL
COMBINATIONS SO FOR MATHEMATICAL REASONS
IT'S KIND OF USEFUL SOMETIMES BUT THIS CAN
BE VERY EXPENSIVE.  IF YOU HAVE TWO TABLES
OF A MILLION ENTRIES THIS GIVE YOU MILLION
TIMES MILLION.  YEAH?
     STUDENT:   QUESTION ON PREVIOUS
SLIDE.  YOUR RESULTS.  BASED ON THE QUERY
YOU SET UP.
     PROFESSOR:   YEAH.
     STUDENT:   WOULD -- HOW MANY
INSTANCES WOULD BE IN YOUR ANSWER?
     PROFESSOR:   OKAY.  IF I'M LOOK FOR
LONDON, RIGHT, I IN FACT GET ALL THESE
PARTS.  P1 TO P6.  IT WILL BE A LIST.  IF
I'M ASKING FOR PART NAMES.  IT WILL BE A
LIST OF NUT, BOLT, SCREW, CAM AND COG.
     STUDENT:   ONE INSTANCE OF SCREW.
     PROFESSOR:   IF I PROJECT I HAVE TO
GET RID OF THE DUPLICATES.
     STUDENT:   JUST BASED ON PART NAME.
     PROFESSOR:   IN MY QUERY US JUST TO
LOOK FOR PART NAMES I GET RID OF
DUPLICATE.  IF MY QUERY IS TO GET WHAT ARE
THE PART NUMBERS,
     STUDENT:   OR COLOR.
     PROFESSOR:   YEAH.  THEN I HAVE P1
THROUGH P6, ALL SIX OF THEM.  IN FACT, S1
IS NOT ONLY SUPPLIER IN LONDON.  I HAVE
ANOTHER ONE WHICH IS S4.  SO I GO FROM S4
I USE EQUAL JOIN TO GO HERE SO I HAVE P4,
P5 I'M SORRY P2, P4, P5.  I LINK OVER HERE
I WILL GET BOLT, SCREW AND CAM.  BUT I
TAKE THE UNION -- UNI SO THIS DOESN'T GIVE
ME MORE.
     STUDENT:   WHEN YOU DID A JOIN LIKE
THAT DOES IT TAKE CARE -- TO ME MY FIRST
GUESS WOULD HAVE BEEN THEN TO RESTRICT SP
TO THE S1 BUT BY SAYING JOIN YOU DON'T
HAVE TO SAY RESTRICT THEN TOO.
     PROFESSOR:   YEAH.  ACTUALLY THAT'S
GOOD IDEA BECAUSE RESTRICT WILL GIVE ME
LESS TUPLES.  I ALWAYS DO THE RESTRICT
BEFORE I JOIN.  WHY?  AS YOU CAN SEE, JOIN
IS ALSO QUITE EXPENSIVE, INVOLVE COMPARING
EVERYBODY TO EVERYBODY.  IF I DO THE
RESTRICT FIRST, IT WILL FIRST CUT DOWN
NUMBER OF TUPLES.
     STUDENT:   I UNDERSTAND THAT ON
THE -- BUT WHEN WE MOVED TO THE NEXT THING
DO YOU DO ANOTHER RESTRICT OR NO YOU DON'T
HAVE TO?  JOIN IS --
     PROFESSOR:   DEPENDS ON THE QUERY.
     STUDENT:   OKAY.
     PROFESSOR:   IN THIS CASE SINCE I
ALREADY DID RESTRICT IN THE FIRST PLACE, I
DON'T.
     STUDENT:   OKAY.
     PROFESSOR:   IF I ASK FOR WHAT ARE
DIRECT PARTS SUPPLIED BY A SUPPLIER IN
LONDON -- WHAT RED PARTS SUPPLIED BY
SUPPLIER IN LONDON DO I RESTRICT HERE AND
HERE.  DO I THAT BEFOREHAND.  YOU KNOW
WHY?  TO CUT DOWN ON NUMBER OF
POSSIBILITIES.  YEAH?
     STUDENT:   WHEN DO YOU A JOIN, ARE
YOU ACTUALLY CREATING LIKE A VIRTUAL TABLE
THAT HAS THE PARTS FROM EACH --
     PROFESSOR:   CORRECT.  IN THE SENSE
OF IMPLEMENTATION, YES.  SO WE COMBINE
INFORMATION IT'S KEPT IN MEMORY AND IT'S
NOT COMMITTED YET BY THAT I MEAN WE HAVE
NOT WRITTEN TO THE STORAGE.  OKAY?  AND IF
THE USER JUST ASKS FOR THE RESULT, WE
DISPLAY RESULT FOR THE USER.  WE NEVER
SAVE IT.  UNLESS THE USER WANTS TO SAVE IT
SOMEWHERE, THEN WE HAVE TO SAVE IT.
     OKAY?  SO HERE BASICALLY I JUST WANT
TO EXPLAIN THESE THREE VERY IMPORTANT
OPERATORS AND IF YOU UNDERSTAND THESE
THREE, YOU CAN DO ALMOST ALL OF THE
DATABASE -- IN FACT ALL BECAUSE THEY ARE
COMPLETE.  ALL OF THEM.
     NOW THERE IS FOURTH OPERATOR WHICH
OFTEN CAUSE PROBLEMS.  THIS IS THE
SO-CALLED DIVISION.  NOW, IT'S A NATURAL
OPERATOR.  THE JOIN IS VERY NATURAL,
NOBODY DISAGREE IT'S VERY EASY TO
UNDERSTAND.  BUT DIVISION IS SOMEWHAT
UNNATURAL.  LET ME TRY TO EXPLAIN THAT.
THE REASON WE HAVE DIVISION IS TO ANSWER
THE LOGICAL QUESTION FOR ALL.  OKAY.  WHAT
ARE THE SUPPLIER THAT SUPPLY ALL PARTS?
WHICH SUPPLIER SUPPLIES ALL PARTS?
     STUDENT:   S1.
     PROFESSOR:   RIGHT.  BECAUSE S1
SUPPLIES EVERYBODY.  HOW CAN YOU FIND THAT
OUT?  NOT BY JOIN, RIGHT?  JOIN DOESN'T
GIVE US THIS INFORMATION.  BUT DIVISION
WILL.  THE IDEA OF DIVISION IS THAT --
OKAY.  LOOK AT THIS.  DIVISION ACTUALLY
APPLIES ONLY TO AN TWO COLUMNS AND THE
MUST HAVE A SINGLE COLUMN.  OTHERWISE IT
WON'T WORK.  SO HERE I HAVE WHAT?  A, X,
A, Y, A, Z, B, X, B, Y.  AND THIS TABLE IS
DIVIDED BY A TABLE WITH X AND Z.  SO WHAT
DO I DO?  I LOOK AT FIRST THOSE ROWS WITH
THE SAME FIRST ENTRY, NAMELY A.  A, X, A,
Y, A, Z.  AND THEN I LOOK AT OTHER ENTRY,
X, Y, Z.  NOW IF X, Y, Z, CONTAIN X AND Z,
WHICH IS A CASE HERE, I RETAIN A.  IN
OTHER WORDS, THIS SET MUST CONTAIN THIS
SET IN ORDER FOR ME TO RETAIN THAT.  OKAY?
NOW IF YOU LOOK AT THE OTHER ONE, B, WELL
IT JUST HAS AN X.  CERTAINLY NOT
CONTAINING X AND Z, SO NOT RETAINING THE
RESULT.  C, SAME THING WHY IS NOT HERE SO
IT IS NOT RETAINED.  SO THE ANSWER IS A.
IN OTHER WORDS, IF THIS IS THE SUPPLIER
AND THIS IS THE PART, IF I'M ASKING WHAT
ARE THE SUPPLIERS THAT SUPPLY BOTH PARTS
THE ANSWER IS A ONLY.  RIGHT?  OKAY.  YOU
CAN SEE THAT THIS DIVISION OPERATOR IS
QUITE POWERFUL.  IT ENABLE US TO ANSWER
THE QUERY FOR ALL.  OKAY?  THAT'S WHY
DIVISION WORKS BUT DIVISION ALWAYS CAUSE
SOME CONFUSION.  IN FACT, IN SQL WE DON'T
IMPLEMENT DIVISION.  WE CAN DO IT USING
OTHER OPERATORS.  OKAY.  SO, THE GOOD NEWS
IS THAT IF WE CAN USE RESTRICT, PROJECT,
CARTESIAN PRODUCT AND JOIN, WE HAVE
ENOUGH.  WE DON'T HAVE TO HAVE DIVISION.
THE BAD NEWS IS IT WILL BE IN EXAM TO SEE
IF YOU UNDERSTAND IT.
     STUDENT:   HOW DO YOU SAY IT THEN?
BACK TO THAT EXAMPLE.
     PROFESSOR:   THIS EXAMPLE?  OKAY.
LET ME CONSTRUCT THIS EXAMPLE FOR YOU.
OKAY.  SO LET'S SAY I WANT TO FIND OUT
THOSE SUPPLIERS SUPPLYING ALL THE RED
PARTS.  SUPPLIER SUPPLY ALL RED PARTS.
FIRST WHAT IS THE RED PARTS.  THE RELATION
RED PART IS IN FACT A PROJECTION OF P --
SORRY NOT PROJECTION BUT RESTRICTION OF P.
WITH THE CONDITION THAT COLOR EQUAL TO
RED.  AND ARGUMENT IS THIS P RELATION.  IF
YOU DON'T LIKE THIS GREEK CHARACTERS,
THAT'S FINE.  IN FACT, IN MY NOTES I
PREFER TO WRITE IT NOT USING THE GREEK
OPERATORS, ALTHOUGH THE  TEXTBOOK USES
THAT.
     SO THE RED PART I CAN WRITE IT AS P
AND I GIVE YOU THE CONDITION COLOR EQUAL
TO RED.  THIS MEANS I'M PICKING ONLY THOSE
ROWS WHERE THE COLOR EQUAL RED AND THE
ANSWER IS THAT THE RED PART RELATION LOOK
LIKE THIS.  I PICK THIS ONE, THIS ONE,
THIS ONE, RIGHT?  SO IT WILL LOOK LIKE P1,
P4, P6.  OKAY?  NOW REMEMBER IN RELATIONAL
ALGEBRA EVERY OPERATION WILL STILL GIVE
YOU RELATION.  IN OTHER WORDS YOU START
WITH A TABLE, YOU OPERATE ON THAT, YOU END
UP WITH A TABLE.  SAME WITH YOUR SQL QUERY
IN SEE QUELL QUERY YOU CONSTRUCT SQL QUERY
THEN YOUR RESULT IS ANOTHER TABLE.  OKAY?
YOU ALWAYS OPERATE ON TABLES.  OKAY.  SO
HERE IS A LIST AND IN FACT I CAN CONTINUE
ON DOING A PROJECT AND THIS PROJECT RED
PART LIST IS THIS BUT NOW I PROJECT.  ONLY
ON TO THE PART NUMBER.  IN OTHER WORDS, I
DON'T CARE ABOUT THE OTHER ATTRIBUTES.  I
CAN PROJECT ONLY ON PART NUMBER.  NOW THIS
GIVE ME A TABLE.  REMEMBER IT'S ALWAYS A
TABLE.  WITH A SINGLE COLUMN, P1, P4, P6.
OKAY?  SO IF THIS AS YOU CAN SEE, THIS IS
BASICALLY THE LIST OF ALL OF THE RED
PARTS.  RIGHT?  OKAY.  I HAVE THAT NOW.
SO NOW I ASK MYSELF, WHAT SUPPLIER
SUPPLIES THESE PARTS?  WHERE DO I LOOK FOR
ANSWER?
     STUDENT:   SP.
     PROFESSOR:   EXACTLY.  SP.  SO I NEED
TO LOOK AT THE SP AND GET RESULT THERE
OKAY?  NOW, THE QUANTITY DOESN'T MATTER.
BECAUSE IT ALWAYS SOMETHING.  SO, I WILL
MAKE A PROJECTION TO THESE TWO COLUMNS
ONLY.  AND WE CALL THIS SP PRIME IT'S SP
BUT I PROJECT ON S NUMBER AND PART NUMBER.
SO THIS A PART NUMBER WITH EXACTLY TWO
COLUMNS AS I WANT IT.  S NUMBER, P NUMBER,
S1, P1, BLAH, BLAH, BLAH AND HERE S4, P45.
SO THIS IS THE TABLE OF ALL OF THE
SUPPLIERS SUPPLYING WHAT PARTS, RIGHT?  I
DON'T CARE ABOUT THE QUANTITY.  AND THEN I
DIVIDE THIS BY THAT TABLE I CONSTRUCT,
THAT'S THE PART NUMBER, P1, P4 AND P6.
AND THE RESULT WILL BE ANOTHER TABLE OF S
NUMBERS.  THESE ARE THE SUPPLIERS
SUPPLYING P1, P4, P6.  AND LET'S CHECK IT
OUT.
     SO, FIRST I LOOK AT S1, REMEMBER THEY
MUST BE IN COMMON HERE.  COLUMN HERE.  S1
SUPPLIES EVERYBODY.  SO SHOULD I KEEP S1?
YES.  THEN I LOOK AT S2.  S2 SUPPLIES P1,
P2.  DO I KEEP IT?  NO.  BECAUSE IT DOES
NOT SUPPLY P1, P4, P6.  S4.  DO I KEEP IT?
NO.  THAT'S IT.  SO THIS IS MY ANSWER.  SO
S1 IS THE SUPPLIER THAT SUPPLIES ALL THE
RED PARTS.
     STUDENT:   IS THERE A WAY TO FIND OUT
IF THERE IS SUPPLIER THAT SUPPLIES ONLY
ALL THE RED PARTS.
     PROFESSOR:   VERY GOOD QUESTION.  HOW
DO WE ANSWER THAT?
     STUDENT:   YOU TAKE A DIFFERENCE
BETWEEN ALL OF THE PARTS THAT THAT
SUPPLIER SUPPLIES, WHICH IS COMBINATION OF
PROJECTION, RESTRICTION AND THEN CHECK TO
SEE IF THAT WITH YOUR PREVIOUS ANSWER IS
ZERO.
     PROFESSOR:   CORRECT.
     STUDENT:   THE DIFFERENCE IS ZERO.
     PROFESSOR:   AGAIN THERE ARE MANY
WAYS TO DO QUERY.  THAT IS NOT NECESSARILY
THE ONLY WAY.  IN FACT THE CHALLENGE IS
LATER ON, REMEMBER THIS QUESTION.  TO SEE
WHETHER YOU CAN DO IT YOURSELF, USING SQL.
SQL LIKE I SAID, NO DIVISION.  DIVISION IS
ALWAYS A COMPLEX OPERATOR.  PEOPLE DON'T
APPRECIATE.  BUT YOU CAN DO THE SAME.  YOU
CAN DO THE SAME WITH RESTRICT, PROJECT AND
JOIN.
     TAKES A LITTLE BIT OF MANEUVERING,
FINESSING BUT YOU CAN DO IT.  BUT I HOPE
THAT CONCEPT IS CLEAR NOW.  RIGHT?  YOU
CAN SEAT POWER OF THIS ALGEBRA.  IN OTHER
WORDS WITH JUST A FEW OPERATORS, YOU CAN
DO EVERYTHING YOU WANT TO DO.  EVERYTHING
YOU WANT TO DO IN THIS FRAMEWORK WHAT WE
CALL RELATIONALLY COMPLETE.  THERE ARE
OBVIOUSLY THINGS YOU CANNOT DO, BUT LET'S
FORGET ABOUT THAT AND JUST TALK ABOUT WHAT
YOU CAN DO WITH OPERATORS, THIS IS IT.
NOW WHEN PEOPLE FIRST IMPLEMENT RELATIONAL
DATABASE SYSTEM, THEY USE ALGEBRAIC
APPROACH.  FOR YOUR PROJECT LATER ON
CHOOSE COMPILER PROJECT, IN FACT YOU CAN
IMPLEMENT ALGEBRA MUCH EASIER.  AND YOU'LL
GET EXTRA CREDIT.  OKAY.  NOW WHAT I DO IS
TO TAKE YOU THROUGH A COMPLEX QUERY.  IN
FACT WE ALREADY WENT THROUGH SOME.  BUT
THIS IS IN THE NOTES SO WE'LL THROUGH THIS
STEP BY STEP AND SEE HOW WE CAN DO RATHER
COMPLEX THINGS WITH IT.  SO LIKE I SAID,
THE ALGEBRA IS A PROCEDURAL LANGUAGE.  YOU
HAVE TO DO IT STEP BY STEP AND IF YOU
CHANGE THE ORDER THE RESULT COULD BE
DIFFERENT.  NOW THIS EXTENDED EXAMPLE
ILLUSTRATES WHAT YOU CAN ACCOMPLISH BY A
FEW STEP OF THINGS.  SO FIRST LET'S SAY IF
YOU WANT TO -- IT'S THE SAME BASE
RELATION, S, P AND ALL THAT. SO FIRST I
WANT TO FIND OUT THE SUPPLIERS IN LONDON.
HERE IS MY SYNTAX.  SO SUPPLIER IS LONDON
AND ASSIGN IT TO T1.  NOW BY THAT I MEAN
ONCE I COMPUTE THE RELATION, I STORED IT
IN RELATION T1.  OKAY.  NOW IF I WANT A
LIST OF THE SUPPLIERS I WILL DO A PROJECT
TO THE ATTRIBUTE S NUMBER.  THIS GIVE ME
T2.  OKAY?
     IF I WRITE IT DOWN IN TWO ASSIGNMENT
STATEMENTS, IT'S SOMEWHAT UNDESIRABLE
BECAUSE I CREATE THIS VARIABLE WHICH MEANS
WE HAVE TO STORE IT ON DISK AND LATER ON
WE RETRIEVE THAT.  LOT OF OVERHEAD.  BUT
WE CAN COMBINE THAT THE WAY YOU COMBINE
THAT IS REALLY YOU SUBSTITUTE T1 BY THIS
EXPRESSION.  AND YOU GOT THIS.  SO THIS
SAYS THAT I TAKE RELATION S, FIRST I MAKE
A RESTRICT.  ORDER IS IMPORTANT.  I FIRST
RESTRICT TO SAY CITY LONDON AND THEN I
MAKE PROJECT AND RESULT I STORE IT IN T2.
SO THIS MEANS I DON'T SAVE IT ON DISK,
UNTIL THE VERY LAST.  IN OTHER WORDS I
WILL RETRIEVE S RELATION, SCAN THROUGH
THAT BECAUSE IF YOU THINK, RESTRICT AND
PROJECT CAN BE DONE IN ONE SCAN OF THE
TUPLES IN THE RELATION, SO WE CAN
ECONOMIZE.  NOW IF I WANT TO FIND OUT
PARTS SUPPLIED BY THE SUPPLIER, WELL I DO
THE JOIN.  SO I JOIN THE TABLE T2, WHICH
IS THE LIST OF SUPPLIERS IN LONDON.  I
JOIN IT WITH THE SP RELATION AND I JOIN IT
USING PART NUMBER.  SO THAT'S ANOTHER
EQUATION OR EQUIVALENTLY IF I SUBSTITUTE
T2 INTO THIS EXPRESSION I GET THIS MORE
COMPLEX EXPRESSION.  NOW HERE MAKE A NOTE
WHY WE DID NOT PROJECT ON PART NUMBER
BEFORE THE JOIN.  YOU KNOW THE ANSWER
BECAUSE IF YOU DO THAT, YOU LOSE
INFORMATION AND YOU WON'T GET THE SAME
RESULT.  OKAY.  WE ARE ALMOST DONE.  SO I
CAN CREATE A SNAPSHOT RELATION.  REMEMBER
WHAT IS A SNAPSHOT?  WHAT IS A SNAPSHOT?
YEAH?
     STUDENT:   JUST A PICTURE OF THE
DATABASE AT A CERTAIN POINT IN TIME.
     PROFESSOR:   WHEN WE FINISH WITH THE
COMPUTATION, THAT'S THE SNAPSHOT AND STORE
IT.  THAT'S A SNAPSHOT.  IN OTHER WORDS,
SNAPSHOT IS NO LONGER A VIRTUAL RELATION.
IT'S ACTUALLY STORED.  SO IT'S JUST LIKE A
TAKE A PICTURE OF SOMEONE YOU LOVE, TAKE
THE PICTURE THEN YOU SAVE IT.  SO THAT YOU
CAN REMEMBER HOW BEAUTIFUL SHE WAS WHEN
SHE WAS YOUNG.  SORRY.  STRIKE OUT THAT
REMARK.  THAT'S NOT GOOD.  THAT'S NOT
GOOD.  I DIDN'T SAY ANYTHING.  YOU DIDN'T
HEAR FROM ME.
     THESE DAYS HAVE YOU TO BE VERY
CAREFUL.
     OKAY.  SO I GOT I SNAPSHOT.  THIS
MEANS AT A CERTAIN TIME I HAVE STORED IN
SR SUPPLIERS, PARTS BY SUPPLIER IN LONDON.
     NOW LOOK AT THIS QUERY.  WHAT NEW
PARTS HAVE BEEN ADDED BY THE SUPPLIERS IN
LONDON DURING THE LAST SIX MONTHS?  YOU
CANNOT ANSWER THIS QUERY USING YOUR
CURRENT DATABASE UNLESS YOU HAVE WHAT WE
CALL A TEMPORAL DATABASE.  YOU TIME STAMP
EVERYTHING.  NORMALLY YOU DON'T.  THE
REASON WE CAN ANSWER THIS QUERY IS IF YOU
PERIODICALLY TAKE SNAPSHOTS, TAKE
SNAPSHOTS EVERY SIX MONTHS SO BASICALLY
IT'S TYPICAL STRATEGY SO EVERY SIX MONTHS
WE HAVE A LIST.  SO THESE ARE THE PARTS
SUPPLIED.  ANOTHER SIX MONTHS WE TAKE
ANOTHER PICTURE AND THEN WE CAN SUBTRACT
THE TWO AND LET ME KNOW THESE ARE THE
PARTS THAT ARE ADDED TO THE STOCK.  NOW
THIS SHOWS YOU THEORETICAL OPERATION
CALLED MINUS, SUBTRACT TWO RELATIONS.  AND
THOSE ASSURE -- THOSE SHOW USEFULNESS OF
SNAPSHOTS.  THEY ARE USEFUL FOR THIS
COMPLEX QUERIES.  WE ALSO DISCUSS THAT FOR
DATABASE BACK UP.  IT'S VERY IMPORTANT,
YOU ALWAYS KEEP SNAPSHOTS.  ONE THING YOU
GUYS HAVE ALWAYS REMEMBERED, STORAGE IS
CHEAP.  OKAY?  IN OTHER WORDS, YOU WOULD
RATHER WASTE STORAGE THAN DESTROY
SOMETHING.  I'M ALWAYS -- I ALWAYS GET MAD
WITH MY GRAD STUDENTS WHEN THEY -- SOME OF
THEM ARE TRAINED IN OLDER MENTALITY AND
TRY TO ECONOMIZE.  IF THEY -- THEY DESTROY
EVERYTHING.  WHEN YOU GO BACK IT'S NO
LONGER THERE.  STORAGE IS CHEAP.  DON'T
WORRY ABOUT THAT. JUST SAVE IT.  IF YOU
NEED MORE STORAGE, JUST REQUEST IT AND YOU
GET MORE STORAGE.  YOU HAVE TO TAKE THAT
ATTITUDE.  IN THE OLD DAYS IT'S NOT THE
SAME.  AT THAT TIME STORAGE WAS EXPENSIVE.
NOT ANY MORE.
     OKAY.  NOW WE CAN ALSO ANSWER QUERY
SUCH AS PARTS ARE NO LONGER SUPPLIED BY
SUPPLIERS IN LONDON, BY SUBTRACTING TWO
SNAPSHOTS THE OTHER WAY AROUND.  NOW LOOK
AT THIS.
     IS THAT A BEAUTY?  THIS SAYS WHAT
SUPPLIER SUPPLIES PARTS NO LONGER SUPPLIED
BY SUPPLIERS IN LONDON?  THAT'S A GOOD WE
GOOD QUESTION.  SO WE PREVIOUSLY HAVE SOME
SUPPLIERS AND THEY WENT OUT OF BUSINESS.
WE WANT TO KNOW -- ACTUALLY THIS HAPPENED
TO ME BECAUSE I USED TO HAVE A HOUSE, THE
ROOF THEY HAVE THOSE SLATES.  NOBODY MAKE
THOSE SLATES ANY MORE.  THE QUERIES IN THE
SPACE IS ALMOST ALL GONE.  AT THAT TIME I
DIDN'T KNOW DATABASE.  I COULDN'T ASK
THOSE KIND OF QUERIES.  ANY WAY, SO YOU
CAN SOME SEE YOU FIRST TAKE SNAPSHOTS,
SUBTRACT THEM SO YOU GET A LIST OF PARTS
NO LONGER SUPPLIES.  AND THEN YOU APPLY
THIS DIVISION OPERATOR.  TO GET THE
RESULT.  FINALLY, WHERE ARE THE SUPPLIERS
SUPPLY ALL RED PARTS NO LONGER SUPPLIED BY
SUPPLIERS IN LONDON?  SOME OF THESE ARE OF
COURSE ARE MEANT TO ANNOY YOU.  BUT I'M
JUST JOKING BECAUSE THESE ARE VERY REAL
QUESTIONS THAT ONE CAN ANSWER.
     SO NOTICE STEP BY STEP WE CONSTRUCT
VERY COMPLEX QUERIES.  SO YOU KNOW DIVIDE
AND CONQUER.  NOBODY CAN WRITE A COMPLEX
QUERY IN ONE SHOT.  DOESN'T BOTHER ME.
JUST LOOK AT ONE PART AT A TIME.  SAME
LATER WHEN YOU DEAL WITH SQL QUERIES HAVE
YOU TO REMEMBER YOU CANNOT JUST COME --
YOU ARE NOT BORN WITH SQL SPEAK ABILITY.
YOU JUST HAVE TO WORK ON IT AND GRADUALLY
FORMULATE MORE COMPLEX QUERIES.  OKAY.
ADDITIONAL OPERATORS, YES?  AND WE HAVE
THE CONCEPT OF THETA OPERATOR WHICH MEANS
ANYTHING.  AND THEY HAVE THETA JOIN WHICH
IS A JOIN USING LESS THAN, EQUAL THAN.
THIS IS EXTENDED OPERATOR.
     AND THE ALGEBRA IS GOOD BECAUSE IT
SERVE AS A YARDSTICK AND ALSO YOU PROBABLY
CAN APPRECIATE THE FACT THAT AFTER MY
EXPLANATION IT SHOULD BECOME VERY CLEAR
WHAT THIS WHOLE BUSINESS OF QUERYING IS
ABOUT.  IT'S TO HELP US TO RETRIEVE
INFORMATION FROM THE DATABASE.  AND YOU
CAN ALSO APPRECIATE THE BEAUTY OF IT.
RIGHT, JUST A FEW OPERATORS YOU CAN DO
LITERALLY EVERYTHING.  AND REMEMBER, THIS
IS THE CONCEPT OF COMPLETENESS.
     SO, WHEN PEOPLE ASK YOU A QUESTION OR
IF YOU READ IN THE LITERATURE SAYING THIS
LANGUAGE IS RELATIONAL COMPLETE, NOW YOU
KNOW WHAT IT MEANS.  IT MEANS THAT IT IS
ADEQUATE.  THERE ARE CERTAIN LANGUAGES
MORE POWERFUL USING -- THERE ARE CERTAINLY
MORE LANGUAGES -- THEY USE LOGIC.  WE ARE
NOT TALKING ABOUT THAT.  THIS IS THE LEAST
THAT ONE CAN EXPECT.  BUT LUCKILY ALMOST
ALL OF THE COMMERCIAL SYSTEM WE USE THESE
DAYS, ORACLE, ALL OF THEM, THEY SUPPORT
SQL WHICH IS RELATIONALLY COMPLETE SO YOU
DON'T HAVE TO WORRY TOO MUCH ABOUT THAT.
OKAY.
     WE CAN USE THAT FOR OPTIMIZATION
PURPOSES.  I THINK IT PAYS TO DO SOME
OPERATION EARLIER.  THIS WILL CUT DOWN ON
EXECUTION TIME.  OKAY.  SO NEXT TIME WE'RE
GOING TO TALK ABOUT SQL.  SO IF YOU
HAVEN'T DONE SO, YOU SHOULD PRINT OUT SQL
NOTES SO WE CAN START DISCUSSION.  OKAY.

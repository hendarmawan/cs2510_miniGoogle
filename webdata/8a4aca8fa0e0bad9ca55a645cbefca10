<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <!-- Copyright Accellera Organization, Inc. 2005. All Rights Reserved. -->
 <!-- THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION WHICH IS THE PROPERTY
      OF Accellera Organization, Inc. OR ITS LICENSORS AND IS SUBJECT TO LICENSE TERMS. -->

 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks AutoMap 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="V2.0-img" />
  <meta name="LASTUPDATED" content="Wed Aug 24 16:31:05 2005" />
  <title>assert_time</title>
  <link rel="StyleSheet" href="default.css" type="text/css" />
  
 </head>

 <body ><br><h1 class="pHead1" >
assert_time
</h1>    
<a name="wp3713406"> </a><p class="pBody" >
Ensures that the value of a specified expression remains TRUE for a specified number of cycles after a start event.  </p>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3713421"> </a><div class="pCellBodyLeft" >
<img src="images/ovl_checkers41.gif" height="107" width="220" border="0" vspace="0" hspace="0" />
</div>    
</td>
    <td><a name="wp3713861"> </a><div class="pCellBodyLeft" >
<span class="cStrong">Parameters</span>: 
</div>    
<a name="wp3772355"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">severity_level </em>
</div>    
<a name="wp3772356"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">num_cks </em>
</div>    
<a name="wp3772357"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">action_on_new_start </em>
</div>    
<a name="wp3772358"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">property_type </em>
</div>    
<a name="wp3772359"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">msg </em>
</div>    
<a name="wp3772360"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">coverage_level</em>
</div>    
</td>
    <td><a name="wp3713425"> </a><div class="pCellBodyLeft" >
<span style="font-weight: bold" class="cStrong">Class: </span>
</div>    
<a name="wp3772361"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">n</em>-cycle assertion
</div>    
</td>
</tr>
</table>
</div>
	
  <p class="pBody" >
</p>    
<a name="wp3713426"> </a><h3 class="pHead3" >
Syntax
</h3>    

<p class="pCodeShiftTop"></p><a name="wp3713875"> </a><pre class="pCode1" >assert_time 
</pre>    <a name="wp3772362"> </a><pre class="pCode1" >		[#(<em class="cEmphasis">severity_level</em>, <em class="cEmphasis">num_cks, action_on_new_start, property_type</em>,<em class="cEmphasis"> msg</em>,<em class="cEmphasis"> coverage_level </em>)] 
</pre>    <a name="wp3772363"> </a><pre class="pCode1" >		<em class="cEmphasis">instance_name</em> (<em class="cEmphasis">clk, reset_n, start_event, test_expr </em>);
</pre>    
<p class="pCodeShiftBottom"></p>
<a name="wp3713475"> </a><h4 class="pHead4" >
Parameters  </h4>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3713430"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3713432"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">severity_level</em>
</div>    
</td>
    <td><a name="wp3713434"> </a><div class="pCellBodyLeft" >
Severity of the failure. Default: &#8216;OVL_ERROR.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3713436"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3713438"> </a><div class="pCellBodyLeft" >
num_cks
</div>    
</td>
    <td><a name="wp3713811"> </a><div class="pCellBodyLeft" >
Number of cycles after <em class="cEmphasis">start_event</em> is TRUE that <em class="cEmphasis">test_expr</em>  must be held TRUE. Default: 1.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3713836"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3713838"> </a><div class="pCellBodyLeft" >
action_on_new_start
</div>    
</td>
    <td><a name="wp3713840"> </a><div class="pCellBodyLeft" >
Method for handling a new start event that occurs while a check is pending. Values are: &#8216;OVL_IGNORE_NEW_START, &#8216;OVL_RESET_ON_NEW_START and &#8216;OVL_ERROR_ON_NEW_START. Default: &#8216;OVL_IGNORE_NEW_START.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3713458"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3713460"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">property_type</em>
</div>    
</td>
    <td><a name="wp3713462"> </a><div class="pCellBodyLeft" >
Property type. Default: &#8216;OVL_ASSERT.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3713464"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3713466"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">msg</em>
</div>    
</td>
    <td><a name="wp3713468"> </a><div class="pCellBodyLeft" >
Error message printed when assertion fails. Default: &#8220;VIOLATION&#8221;.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3713470"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3713472"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">coverage_level</em>
</div>    
</td>
    <td><a name="wp3713474"> </a><div class="pCellBodyLeft" >
Coverage level. Default: &#8216;OVL_COVER_ALL.
</div>    
</td>
</tr>
</table>
</div>
	
  <h4 class="pHead4" >
</h4>    

<a name="wp3713509"> </a><h4 class="pHead4" >
Ports  </h4>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3713478"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3713480"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">clk</em>
</div>    
</td>
    <td><a name="wp3713482"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3713484"> </a><div class="pCellBodyLeft" >
Clock event for the assertion. The checker samples on the rising edge of the clock.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3713486"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3713488"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">reset_n</em>
</div>    
</td>
    <td><a name="wp3713490"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3713492"> </a><div class="pCellBodyLeft" >
Active low synchronous reset signal indicating completed initialization.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3713494"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3713496"> </a><div class="pCellBodyLeft" >
start_event
</div>    
</td>
    <td><a name="wp3713498"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3713500"> </a><div class="pCellBodyLeft" >
Expression that (along with <em class="cEmphasis">num_cks</em>) identifies when to check <em class="cEmphasis">test_expr</em>.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3713502"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3713504"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">test_expr</em>
</div>    
</td>
    <td><a name="wp3713506"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3713508"> </a><div class="pCellBodyLeft" >
Expression that should evaluate to TRUE for <em class="cEmphasis">num_cks</em> cycles after <em class="cEmphasis">start_event</em> initiates a check.
</div>    
</td>
</tr>
</table>
</div>
	
  <h4 class="pHead4" >
</h4>    

<a name="wp3713510"> </a><h3 class="pHead3" >
Description
</h3>    

<a name="wp3713511"> </a><p class="pBody" >
The <code class="cCodeBody">assert_time</code> assertion checker checks the expression <span style="font-style: oblique" class="cCodeBodyEmphasis">start_event</span> at each rising edge of <span style="font-style: oblique" class="cCodeBodyEmphasis">clk</span> to determine whether or not to initiate a check. Once initiated, the check evaluates <span style="font-style: oblique" class="cCodeBodyEmphasis">test_expr</span> each rising edge of <span style="font-style: oblique" class="cCodeBodyEmphasis">clk</span> for <span style="font-style: oblique" class="cCodeBodyEmphasis">num_cks</span> cycles to verify that its value is TRUE. During that time, the assertion fails each cycle a sampled value of <span style="font-style: oblique" class="cCodeBodyEmphasis">test_expr</span> is not TRUE. 
</p>    
<a name="wp3713900"> </a><p class="pBody" >
The method used to determine what constitutes a start event for initiating a check is controlled by the <span style="font-style: oblique" class="cCodeBodyEmphasis">action_on_new_start</span> parameter. If no check is in progress when <span style="font-style: oblique" class="cCodeBodyEmphasis">start_event</span> is sampled TRUE, a new check is initiated. But, if a check is in progress when <span style="font-style: oblique" class="cCodeBodyEmphasis">start_event</span> is sampled TRUE, the checker has the following actions:
</p>    
<a name="wp3769056"> </a><p class="pBullet1" >
<img src="images/bullet1.gif" align="top" />&#8216;OVL_IGNORE_NEW_START
</p>    
<a name="wp3769057"> </a><p class="pIndent1" >
The checker does not sample <span style="font-style: oblique" class="cCodeBodyEmphasis">start_event</span> for the next <span style="font-style: oblique" class="cCodeBodyEmphasis">num_cks</span> cycles after a start event.
</p>    
<a name="wp3769058"> </a><p class="pBullet1" >
<img src="images/bullet1.gif" align="top" />&#8216;OVL_RESET_ON_NEW_START
</p>    
<a name="wp3769059"> </a><p class="pIndent1" >
The checker samples <span style="font-style: oblique" class="cCodeBodyEmphasis">start_event</span> every cycle. If a check is pending and the value of <span style="font-style: oblique" class="cCodeBodyEmphasis">start_event</span> is TRUE, the checker terminates the check and initiates a new check without sampling <span style="font-style: oblique" class="cCodeBodyEmphasis">test_expr</span>. 
</p>    
<a name="wp3769061"> </a><p class="pBullet1" >
<img src="images/bullet1.gif" align="top" />&#8216;OVL_ERROR_ON_NEW_START
</p>    
<a name="wp3769062"> </a><p class="pIndent1" >
The checker samples <span style="font-style: oblique" class="cCodeBodyEmphasis">start_event</span> every cycle. If a check is pending and the value of <span style="font-style: oblique" class="cCodeBodyEmphasis">start_event</span> is TRUE, the assertion fails with an <code class="cCodeBody">illegal start event</code> violation. In this case, the checker does not initiate a new check, does not terminate a pending check and reports an additional assertion violation if <span style="font-style: oblique" class="cCodeBodyEmphasis">test_expr</span> is FALSE.
</p>    
<a name="wp3714303"> </a><h4 class="pHead4" >
Assertion Checks  </h4>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3714292"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3714294"> </a><div class="pCellBodyLeft" >
ASSERT_TIME
</div>    
</td>
    <td><a name="wp3714296"> </a><div class="pCellBodyLeft" >
The value of <em class="cEmphasis">test_expr</em> was not TRUE within <em class="cEmphasis">num_cks</em> cycles after <em class="cEmphasis">start_event</em> was sampled TRUE.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3714298"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3714300"> </a><div class="pCellBodyLeft" >
illegal start event
</div>    
</td>
    <td><a name="wp3714302"> </a><div class="pCellBodyLeft" >
The <em class="cEmphasis">action_on_new_start</em> parameter is set to &#8216;OVL_ERROR_ON_NEW_START and <em class="cEmphasis">start_event</em> expression evaluated to TRUE while the checker was monitoring <em class="cEmphasis">test_expr</em>.
</div>    
</td>
</tr>
</table>
</div>
	
  <h4 class="pHead4" >
</h4>    

<a name="wp3714323"> </a><h4 class="pHead4" >
Cover Points  </h4>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3714306"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3714308"> </a><div class="pCellBodyLeft" >
window_open
</div>    
</td>
    <td><a name="wp3714310"> </a><div class="pCellBodyLeft" >
A time check was initiated.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3714312"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3714314"> </a><div class="pCellBodyLeft" >
window_close
</div>    
</td>
    <td><a name="wp3714316"> </a><div class="pCellBodyLeft" >
A time check lasted the full <em class="cEmphasis">num_cks</em> cycles.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3714318"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3714320"> </a><div class="pCellBodyLeft" >
window_resets
</div>    
</td>
    <td><a name="wp3714322"> </a><div class="pCellBodyLeft" >
The <em class="cEmphasis">action_on_new_start</em> parameter is &#8216;OVL_RESET_ON_NEW_START, and <em class="cEmphasis">start_event</em> was sampled TRUE while the checker was monitoring <em class="cEmphasis">test_expr</em>.
</div>    
</td>
</tr>
</table>
</div>
	
  <h4 class="pHead4" >
</h4>    

<a name="wp3713554"> </a><h3 class="pHead3" >
See also
</h3>    

<p class="pCodeShiftTop"></p><a name="wp3713555"> </a><pre class="pCode2" >assert_change, assert_next, assert_frame, assert_unchange, 
assert_win_change, assert_win_unchange, assert_window
</pre>    
<p class="pCodeShiftBottom"></p>
<a name="wp3713556"> </a><h3 class="pHead3" >
Examples
</h3>    

<p class="pCodeShiftTop"></p><a name="wp3714427"> </a><pre class="pCode2" >  </pre>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td colspan="4" rowspan="1"><a name="wp3746565"> </a><div class="pCellBodyLeft" >
assert_time #(
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3714396"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3714398"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ERROR, 
</div>    
<a name="wp3772364"> </a><div class="pCellBodyLeft" >
3, 
</div>    
<a name="wp3772365"> </a><div class="pCellBodyLeft" >
&#8216;OVL_IGNORE_NEW_START, 
</div>    
<a name="wp3772366"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ASSERT, 
</div>    
<a name="wp3772367"> </a><div class="pCellBodyLeft" >
&#8220;Error: invalid transaction&#8221;, 
</div>    
<a name="wp3772368"> </a><div class="pCellBodyLeft" >
&#8216;OVL_COVER_ALL)
</div>    
</td>
    <td><a name="wp3714402"> </a><div class="pCellBodyLeft" >
// severity_level 
</div>    
<a name="wp3772369"> </a><div class="pCellBodyLeft" >
// num_cks 
</div>    
<a name="wp3772370"> </a><div class="pCellBodyLeft" >
// action_on_new_start 
</div>    
<a name="wp3772371"> </a><div class="pCellBodyLeft" >
// property_type 
</div>    
<a name="wp3772372"> </a><div class="pCellBodyLeft" >
// msg 
</div>    
<a name="wp3772373"> </a><div class="pCellBodyLeft" >
// coverage_level
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3714404"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3714406"> </a><div class="pCellBodyLeft" >
valid_transaction (
</div>    
</td>
    <td><a name="wp3714410"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3714412"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3714414"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3714416"> </a><div class="pCellBodyLeft" >
clk,  
</div>    
<a name="wp3772374"> </a><div class="pCellBodyLeft" >
reset_n,  
</div>    
<a name="wp3772375"> </a><div class="pCellBodyLeft" >
req == 1, 
</div>    
<a name="wp3772376"> </a><div class="pCellBodyLeft" >
ptr &gt;= 1 &amp;&amp; ptr &lt;= 3);
</div>    
</td>
    <td><a name="wp3714418"> </a><div class="pCellBodyLeft" >
// clock 
</div>    
<a name="wp3772377"> </a><div class="pCellBodyLeft" >
// reset 
</div>    
<a name="wp3772378"> </a><div class="pCellBodyLeft" >
// start_event 
</div>    
<a name="wp3772379"> </a><div class="pCellBodyLeft" >
// test_expr
</div>    
</td>
</tr>
</table>
</div>
	
  <pre class="pCode2" >
</pre>    
<p class="pCodeShiftBottom"></p>
<a name="wp3745797"> </a><p class="pBody" >
Ensures that <code class="cCodeBody">ptr</code> is sampled in the range 1 to 3 for three cycles after <code class="cCodeBody">req</code> is sampled equal to 1 at the rising edge of <code class="cCodeBody">clk. </code>If <code class="cCodeBody">req</code> is sampled equal to 1 when the checker samples <code class="cCodeBody">ptr</code>, a new check is not initiated (i.e., the new start is ignored).  </p>    <div align="left"><img src="images/ovl_checkersa29.gif" height="106" width="484" border="0" vspace="0" hspace="100" />  </div>	
  <p class="pBody" >
</p>    
<p class="pCodeShiftTop"></p><a name="wp3746689"> </a><pre class="pCode2" >  </pre>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td colspan="4" rowspan="1"><a name="wp3746658"> </a><div class="pCellBodyLeft" >
assert_time #(
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3746666"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3746668"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ERROR, 
</div>    
<a name="wp3772380"> </a><div class="pCellBodyLeft" >
3, 
</div>    
<a name="wp3772381"> </a><div class="pCellBodyLeft" >
&#8216;OVL_RESET_ON_NEW_START, 
</div>    
<a name="wp3772382"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ASSERT, 
</div>    
<a name="wp3772383"> </a><div class="pCellBodyLeft" >
&#8220;Error: invalid transaction&#8221;, 
</div>    
<a name="wp3772384"> </a><div class="pCellBodyLeft" >
&#8216;OVL_COVER_ALL)
</div>    
</td>
    <td><a name="wp3746672"> </a><div class="pCellBodyLeft" >
// severity_level 
</div>    
<a name="wp3772385"> </a><div class="pCellBodyLeft" >
// num_cks 
</div>    
<a name="wp3772386"> </a><div class="pCellBodyLeft" >
// action_on_new_start 
</div>    
<a name="wp3772387"> </a><div class="pCellBodyLeft" >
// property_type 
</div>    
<a name="wp3772388"> </a><div class="pCellBodyLeft" >
// msg 
</div>    
<a name="wp3772389"> </a><div class="pCellBodyLeft" >
// coverage_level
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3746674"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3746676"> </a><div class="pCellBodyLeft" >
valid_transaction (
</div>    
</td>
    <td><a name="wp3746680"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3746682"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3746684"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3746686"> </a><div class="pCellBodyLeft" >
clk,  
</div>    
<a name="wp3772390"> </a><div class="pCellBodyLeft" >
reset_n,  
</div>    
<a name="wp3772391"> </a><div class="pCellBodyLeft" >
req == 1, 
</div>    
<a name="wp3772392"> </a><div class="pCellBodyLeft" >
ptr &gt;= 1 &amp;&amp; ptr &lt;= 3);
</div>    
</td>
    <td><a name="wp3746688"> </a><div class="pCellBodyLeft" >
// clock 
</div>    
<a name="wp3772393"> </a><div class="pCellBodyLeft" >
// reset 
</div>    
<a name="wp3772394"> </a><div class="pCellBodyLeft" >
// start_event 
</div>    
<a name="wp3772395"> </a><div class="pCellBodyLeft" >
// test_expr
</div>    
</td>
</tr>
</table>
</div>
	
  <pre class="pCode2" >
</pre>    
<p class="pCodeShiftBottom"></p>
<a name="wp3746690"> </a><p class="pBody" >
Ensures that <code class="cCodeBody">ptr</code> is sampled in the range 1 to 3 for three cycles after <code class="cCodeBody">req</code> is sampled equal to 1 at the rising edge of <code class="cCodeBody">clk. </code>If <code class="cCodeBody">req</code> is sampled equal to 1 when the checker samples <code class="cCodeBody">ptr</code>, a new check is initiated (i.e., the new start restarts a check).  </p>    <div align="left"><img src="images/ovl_checkers59.gif" height="106" width="484" border="0" vspace="0" hspace="100" />  </div>	
  <p class="pBody" >
</p>    
<a name="wp3747096"> </a><p class="pBody" >

</p>    
<p class="pCodeShiftTop"></p><a name="wp3746877"> </a><pre class="pCode2" >  </pre>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td colspan="4" rowspan="1"><a name="wp3746846"> </a><div class="pCellBodyLeft" >
assert_time #(
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3746854"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3746856"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ERROR, 
</div>    
<a name="wp3772396"> </a><div class="pCellBodyLeft" >
3, 
</div>    
<a name="wp3772397"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ERROR_ON_NEW_START, 
</div>    
<a name="wp3772398"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ASSERT, 
</div>    
<a name="wp3772399"> </a><div class="pCellBodyLeft" >
&#8220;Error: invalid transaction&#8221;, 
</div>    
<a name="wp3772400"> </a><div class="pCellBodyLeft" >
&#8216;OVL_COVER_ALL)
</div>    
</td>
    <td><a name="wp3746860"> </a><div class="pCellBodyLeft" >
// severity_level 
</div>    
<a name="wp3772401"> </a><div class="pCellBodyLeft" >
// num_cks 
</div>    
<a name="wp3772402"> </a><div class="pCellBodyLeft" >
// action_on_new_start 
</div>    
<a name="wp3772403"> </a><div class="pCellBodyLeft" >
// property_type 
</div>    
<a name="wp3772404"> </a><div class="pCellBodyLeft" >
// msg 
</div>    
<a name="wp3772405"> </a><div class="pCellBodyLeft" >
// coverage_level
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3746862"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3746864"> </a><div class="pCellBodyLeft" >
valid_transaction (
</div>    
</td>
    <td><a name="wp3746868"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3746870"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3746872"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3746874"> </a><div class="pCellBodyLeft" >
clk,  
</div>    
<a name="wp3772406"> </a><div class="pCellBodyLeft" >
reset_n,  
</div>    
<a name="wp3772407"> </a><div class="pCellBodyLeft" >
req == 1, 
</div>    
<a name="wp3772408"> </a><div class="pCellBodyLeft" >
ptr &gt;= 1 &amp;&amp; ptr &lt;= 3);
</div>    
</td>
    <td><a name="wp3746876"> </a><div class="pCellBodyLeft" >
// clock 
</div>    
<a name="wp3772409"> </a><div class="pCellBodyLeft" >
// reset 
</div>    
<a name="wp3772410"> </a><div class="pCellBodyLeft" >
// start_event 
</div>    
<a name="wp3772411"> </a><div class="pCellBodyLeft" >
// test_expr
</div>    
</td>
</tr>
</table>
</div>
	
  <pre class="pCode2" >
</pre>    
<p class="pCodeShiftBottom"></p>
<a name="wp3746878"> </a><p class="pBody" >
Ensures that <code class="cCodeBody">ptr</code> is sampled in the range 1 to 3 for three cycles after <code class="cCodeBody">req</code> is sampled equal to 1 at the rising edge of <code class="cCodeBody">clk. </code>If <code class="cCodeBody">req</code> is sampled equal to 1 when the checker samples <code class="cCodeBody">ptr</code>, the checker issues an <code class="cCodeBody">illegal start event</code> violation and does not start a new check.  </p>    <div align="left"><img src="images/ovl_checkers62.gif" height="106" width="484" border="0" vspace="0" hspace="100" />  </div>	
  <p class="pBody" >
</p>    
<a name="wp3747099"> </a><p class="pBody" >

</p>
<p style="margin-top:10px"> </p>
 <hr noshade="noshade" size="3" />

<center>
 <table border="0" cellspacing="5px" cellpadding="0" width= "100%" bgcolor="#ddf5ff">
 <tr>
  <td>&nbsp;</td>
  <td align="left" valign="top">
    <span style="font-size: 11px ; font-weight: bold; font-family: Arial, Verdana, Helvetica, sans-serif">
    &copy; Accellera Organization, Inc. 2005<br /> All Rights Reserved.</span>
  </td>
  <td align="right" valign="top">
    <span style="font-size: 11px ; font-weight: bold; font-family: Arial, Verdana, Helvetica, sans-serif">
    Standard OVL V1.1a</span>
  </td>
 </tr>
 </table>
</center>
 <hr />


 </body>
</html>



     NOW LET'S GO TO DB2.  NOW WHAT I WANT
TO DO IS TELL YOU A LITTLE BIT ABOUT
IMPLEMENTATION OF REAL DATABASE MANAGEMENT
SYSTEM AND DB2 IS IBM DATABASE SYSTEM.  IT
STARTED BEING SORT WARE ON THE MAIN FRAME
AND NOW WE KNOW WE CAN RUN DB2 ON PC'S
BECAUSE THINGS HAVE CHANGED DRAMATICALLY.
IN THE DB2, HAVE YOU BASE RELATIONS THAT
CAN CONSTITUTE DIFFERENT VIEWS AND THEN A
USER CAN PROGRAMMER CAN USE SQL LANGUAGE
TO ACCESS THAT AND UNDERNEATH THEY ARE
DATA SETS USING DIFFERENT KIND OF
STRUCTURES, VSAM BEING THE MOST POPULAR.
WE ALREADY STUDIED THAT, THIS IS THE B
TREE STRUCTURE WE TALKED ABOUT.  SO B TREE
AS WE DISCUSSED, VERY EFFICIENT FOR THE
MANAGEMENT OF DATABASES.
     THE MAIN IDEA OF THE SYSTEM IS THAT
THEY TRY TO BE ABLE TO OPTIMIZE YOUR
QUERIES.  AND THE WAY THEY DO THAT IS BY
USING KIND OF A TRICK.  BUT THIS A NEAT
TRICK AND IN FACT, THIS TRICK CAN BE
APPLIED LATER ON BY YOU, NOT ONLY IN THIS
CONTEXT, BUT OTHER CONTEXT AS WELL.  OKAY.
THE FOLLOWING, IF I HAVE SOME SOURCE
PROGRAM, C PROGRAM OR PASS CAL, WHATEVER,
NOW I CAN IMBED MY DATABASE MANIPULATION
COMMANDS IN THE SOURCE PROGRAM.  FOR
EXAMPLE, IN C LANGUAGE WE CAN DO XEXC AND
INVOKE ORACLE AND PASS IT A SQL COMMAND
AND GET THE RESULT FROM SOME BUFFER AREA.
NOWADAYS WE ARE DOING WEB BASED
PROGRAMMING, BUT THE IDEA IS THE SAME.  IN
A WEEK WE ARE GOING TO LOOK AT WEB BASE,
SO WE HAVE SOME FORM AND IN THE FORM WE
HAVE IMBEDDED USUALLY JUST A SINGLE SQL
COMMAND, OKAY?  SO, WE PASS THIS COMMAND
THROUGH THE OLD DBC RUN IT ON DATABASE AND
GET BACK THE RESULT.  SAME THING.  OKAY.
     IT'S ONLY THAT OF COURSE IF I WRITE
IT IN HOST LANGUAGE, I CAN DO MORE COMPLEX
THINGS, NOT LIKE IN THE FORM PROCESSING
CASE, USUALLY I DO ONE DATABASE
MANIPULATION AT A TIME.  SO, IN THE
PROGRAM I MAY HAVE IMBEDDED IN IT QUITE A
FEW DATABASE MANIPULATION COMMANDS.  NOW
IBM'S IDEA IS THAT LET'S SEPARATE THE TWO.
SO I TAKE MY ORIGINAL PROGRAM WHICH HAVE
ALL THESE IMBEDDED DATABASE MANIPULATION
COMMANDS, I REPLACE THAT BY SYSTEM COM.
SEE WHAT I MEAN?  CAN I HAVE THE LIGHT,
PLEASE?  SO HERE'S MY C PROGRAM PASCAL
PROGRAM, WHATEVER.  HERE IN THIS PLACE I
INVOKE THE DATABASE.  SO, IF I JUST RUN A
PROGRAM LIKE THIS, I HIT THIS POINT, GUY
TO DATABASE, GET BACK SOMETHING, OKAY.
THERE IS NO CHANCE FOR ME TO OPTIMIZE
ANYTHING.  RATHER THAN DOING THAT, I
REPLACE THAT BY SYSTEM COM AND THEN
COLLECT ALL OF THESE COMMANDS INTO A
SEPARATE MODULE THEN I CAN COMPILE THIS
SEPARATELY.  OKAY?  ONCE I REPLACE THIS I
CAN COMPILE THIS PROGRAM, OKAY.  THEN
WHENEVER WE RUN THIS PROGRAM WE HIT THIS
POINT WE HAVE A SYSTEM TRAP, WE TRAP INTO
THE SYSTEM WHICH THEN GOES TO THE DATABASE
MANIPULATION MODULE US AND DO THAT
PROJECT.  SO THIS MEANS I CAN SEPARATELY
OPTIMIZE MY HOST PROGRAM AND MY DATABASE
PROGRAM.  DIVIDE AND CONQUER.  VERY NEAT
TRICK, OKAY.  JUST REMEMBER THIS TRICK
BECAUSE LATER ON YOU MAY FIND IT USEFUL IN
OTHER DIFFERENT CONTEXT.  IN OTHER WORDS,
IF YOU WANT TO DO SOMETHING, A BIG
PROGRAM, DON'T TRY TO CONCENTRATE ALL OF
YOUR EFFORT ON JUST THE PROGRAM, TRY TO
SEPARATE THIS OUT THINGS.  THIS MAKES
DEBUGGING ALSO EASIER.
     SO LET'S LOOK AT THIS ARCHITECTURE.
OKAY.  SO STARTING FROM THE SOURCE, SO
LIKE I SAID, IF I HAVE A PROGRAM I FIRST
RUN IT THROUGH THE PRECOMPILER, SO THE
PRECOMPILERS.  PURPOSE IS TO SEPARATE OUT
THE TRUE SOURCE FROM THE DATABASE PART.
SO, IF I REPLACE THOSE DATABASE LOCATIONS
BY -- I HAVE A PROGRAM THAT CAN RUN
THROUGH THE REGULAR COMPILER AND ALL OF
THAT. IN THE MEANTIME, I COLLECT DATABASE
STATEMENT INTO THE MODULE WHICH ARE CALLED
DBRM AND THIS BINDING TIME CALLS SO-CALLED
APPLICATION PLANS.  NOW LOOK WHEN YOU
ACTUALLY RUN THE PROGRAM.  OKAY?  WHEN YOU
RUN THE PROGRAM, THEN YOU CAN GET TRAPPED
AND THEN TRAPPED INTO THE SYSTEM AND THE
SYSTEM THEN LOADS THE CORRESPONDING
APPLICATION AND RUN THE DATABASE PART.
THAT'S THE PHILOSOPHY.  IN MY NOTES I'LL
GO INTO MORE DETAIL TO EXPLAIN TO YOU WHAT
EACH MODULE WILL DO.  BUT THIS ARE JUST
DETAILS.  WHAT I LIKE YOU TO REMEMBER IS
THIS VERY CLEVER TECHNIQUES OF DOING THE
OPTIMIZATION SEPARATE.  THAT'S THE TRICK.
YOU SEPARATE OUT THE THINGS AND THEN YOU
WILL FIND THAT YOU CAN DO MUCH, MUCH
BETTER JOB THIS WAY.  OKAY.  SO THIS IS
THE MODULE ON DB2 AND I HOPE YOU WILL
SPEND SOME TIME STUDYING IT.  THERE ARE
JUST A FEW PAGES AND GOING THROUGH THE
CONCEPT LIKE I MENTIONED. 

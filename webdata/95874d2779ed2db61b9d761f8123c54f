<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./BOUND_files/filelist.xml">
<title>Oracle Objects for OLE Bound Widget Library and C++ Class Library
Workbook</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Nicole Earnest Hopeman</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Nicole Earnest Hopeman</o:LastAuthor>
  <o:Revision>3</o:Revision>
  <o:TotalTime>4</o:TotalTime>
  <o:Created>1999-10-21T15:56:00Z</o:Created>
  <o:LastSaved>1999-10-21T15:59:00Z</o:LastSaved>
  <o:Pages>37</o:Pages>
  <o:Words>12553</o:Words>
  <o:Characters>71556</o:Characters>
  <o:Lines>596</o:Lines>
  <o:Paragraphs>143</o:Paragraphs>
  <o:CharactersWithSpaces>87875</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:Zoom>75</w:Zoom>
  <w:DoNotHyphenateCaps/>
  <w:PunctuationKerning/>
  <w:DrawingGridHorizontalSpacing>6 pt</w:DrawingGridHorizontalSpacing>
  <w:DrawingGridVerticalSpacing>6 pt</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>3</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:DoNotShadeFormData/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Helvetica;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-alt:Arial;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Courier;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
 /* Page Definitions */
@page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.75in;
	mso-footer-margin:.75in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in;text-justify-trim:punctuation'>

<div class=Section1>

<p class=MsoNormal style='mso-line-height-alt:12.0pt;mso-pagination:none;
mso-layout-grid-align:none;text-autospace:none'><b><span style='font-size:14.0pt;
font-family:Helvetica'>Oracle Objects for OLE Bound Widget Library and C++
Class Library Workbook<o:p></o:p></span></b></p>

<p class=MsoNormal style='mso-line-height-alt:12.0pt;mso-pagination:none;
mso-layout-grid-align:none;text-autospace:none'><b><span style='font-size:14.0pt;
font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='mso-line-height-alt:12.0pt;mso-pagination:none;
mso-layout-grid-align:none;text-autospace:none'><span style='font-size:14.0pt;
font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>This
document contains information regarding the Oracle Objects for OLE Bound Widget
libraries (MFC) and a library workbook explaining how to use the libraries.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>There
are two parts in this document<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>A.
</span><span style='font-size:10.0pt;font-family:Arial'>OMFC Bound Widget
Libaray<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>B.
Oracle Objects for OLE C++ Class Library Workbook<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='mso-line-height-alt:12.0pt;mso-pagination:none;
mso-layout-grid-align:none;text-autospace:none'><span style='font-size:14.0pt;
font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='mso-line-height-alt:12.0pt;mso-pagination:none;
mso-layout-grid-align:none;text-autospace:none'><span style='font-size:14.0pt;
font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='mso-line-height-alt:12.0pt;mso-pagination:none;
mso-layout-grid-align:none;text-autospace:none'><span style='font-size:14.0pt;
font-family:Arial'>A. OMFC BOUND WIDGET LIBRARY<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>This
file documents the OMFC library provided with the Oracle Objects for OLE C++
Class Library.<span style="mso-spacerun: yes">  </span>The OMFC library
contains classes you can use to build GUI programs using Microsoft's MFC
framework.<span style="mso-spacerun: yes">  </span>These classes have been
built using Visual C++ 2.2<span style="mso-spacerun: yes">  </span>and 4.0.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><i><span style='font-size:10.0pt;font-family:Arial'>Note:
</span></i></b><span style='font-size:10.0pt;font-family:Arial'>The OMFC
library for Visual C++ 2.2 is named <b><i>omfc.lib </i></b>and <b><i>omfc40.lib
</i></b>in<span style="mso-spacerun: yes">                </span>Visual C++
4.0.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>In
this document the &quot;<b><i>omfc.lib</i></b>&quot; refers to the bound widget
library for either compiler.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>Please
ensure that the right library name for your compiler is included in the project
settings.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Arial'>IMP:</span></u></b><b><span
style='font-size:10.0pt;font-family:Arial'>Bound control libraries (OMFC4x.LIB)
support under MSVC 4.2 or later.<o:p></o:p></span></b></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>Current
release of<span style="mso-spacerun: yes">  </span>OMFC40.LIB is supported only
for MSVC 4.0 compiler. Since different<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>version
of MSVC 4.x compiler requires different OMFC4x.LIB<span style="mso-spacerun:
yes">  </span>libraries, this release provides the<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>OMFC40.MAK
under \{ORACLE_HOME}\oo4o21\cpp\mfc directory. With this, client can built<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>their
own OMFC libraries for their versions of compilers.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial'>How to build the sample program.<o:p></o:p></span></b></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>The
sample program can be found in the </span><b><span style='font-size:8.0pt;
font-family:Arial'>[ORACLE_HOME]</span></b><span style='font-size:10.0pt;
font-family:Arial'>\oo4o\cpp\mfc\samples\empedit <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>directory
(where </span><b><span style='font-size:8.0pt;font-family:Arial'>[ORACLE_HOME]</span></b><span
style='font-size:10.0pt;font-family:Arial'> is the directory your Oracle
products are installed - usually c:\orawin).<span style="mso-spacerun: yes"> 
</span>The project file is vsdept32.mak and can be loaded by Microsoft Visual
C++ version 2.2.<span style="mso-spacerun: yes">  </span>There is also another
sample in </span><b><span style='font-size:8.0pt;font-family:Arial'>[ORACLE_HOME]</span></b><span
style='font-size:10.0pt;font-family:Arial'>\oo4o\cpp\workbook\empedt called
empedt32.mak.<span style="mso-spacerun: yes">  </span>Microsoft store all the
path information to locate header files and libraries for all your projects in
one place. To change the path information, select <u>Options</u> from the VC++
main menu. Select <u>Directories</u> from the popup menu and a dialog appears
containing five edit fields. The second of these contains the path for include
files. You will need to add references for the class library include files and
the omfc include files. These are installed into </span><b><span
style='font-size:8.0pt;font-family:Arial'>[ORACLE_HOME]</span></b><span
style='font-size:10.0pt;font-family:Arial'>\oo4o\cpp\include and </span><b><span
style='font-size:8.0pt;font-family:Arial'>[ORACLE_HOME]</span></b><span
style='font-size:10.0pt;font-family:Arial'>\oo4o\cpp\mfc\include respectively.
Unfortunately, there is an upper size to the path of 128 bytes and it is quite
easy to execed this limit if you have many include directories. You may wish to
copy all the Oracle Objects include files to one place and just add that
directory to the path. The third edit field contains the library path and
should be modified to contain the paths to <b><i>oraclm.lib </i></b>and<b><i>
omfc.lib</i></b>. These are installed into </span><b><span style='font-size:
8.0pt;font-family:Arial'>[ORACLE_HOME]</span></b><span style='font-size:10.0pt;
font-family:Arial'>\oo4o\cpp\lib and </span><b><span style='font-size:8.0pt;
font-family:Arial'>[ORACLE_HOME]</span></b><span style='font-size:10.0pt;
font-family:Arial'>\oo4o\cpp\mfc\lib respectively.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>In
order to run the sample (or any application you build), it will need to access
the Class Library runtime DLL - <b><i>oraclm.dll.</i></b> The easiest way to do
this is to copy it to a directory on your path (such as \orawin\bin) or your
windows system directory. The latter is recommended. You can find the DLL in
the </span><b><span style='font-size:8.0pt;font-family:Arial'>[ORACLE_HOME]</span></b><span
style='font-size:10.0pt;font-family:Arial'>\oo4o\cpp\bin directory, or if you
want to debug in the class library, you should use the version in </span><b><span
style='font-size:8.0pt;font-family:Arial'>[ORACLE_HOME]</span></b><span
style='font-size:10.0pt;font-family:Arial'>\oo4o\cpp\bin\dbg. A debuggable
version of <b><i>omfc.lib </i></b>is also supplied in </span><b><span
style='font-size:8.0pt;font-family:Arial'>[ORACLE_HOME]</span></b><span
style='font-size:10.0pt;font-family:Arial'>\oo4o\cpp\mfc\lib\dbg.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial'>What problem do these classes solve?</span></b><span
style='font-size:10.0pt;font-family:Arial'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>The
basic classes of the Oracle Objects for OLE C++ Class Library enable you to
access the data in an Oracle database.<span style="mso-spacerun: yes"> 
</span>You can fetch records, add records, edit records, execute arbitrary SQL
statements, and so forth. However, if you want to write a GUI program that
displays the database data, you are on your own. You must fetch the data, push
the data into your GUI widgets, and repeat whenever the dynaset moves to
another record.<span style="mso-spacerun: yes">  </span>If the widget is used
to edit the data, you must execute a StartEdit, SetValue, Update cycle.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>The <b>OBinder</b>
and <b>OBound</b> classes make this work much easier.<span style="mso-spacerun:
yes">  </span>An <b>OBinder</b> instance manages a dynaset.<span
style="mso-spacerun: yes">  </span><b>OBound</b> instances are attached to
fields in the <b>OBinder</b>'s dynaset and &quot;bound&quot; to the <b>OBinder</b>
instance.<span style="mso-spacerun: yes">  </span>From then on, the <b>OBinder</b>
and <b>OBound</b> code do most of the tedious bookkeeping for you: the <b>OBound</b>
instance values are changed when needed, and when edits are made through the <b>OBound</b>
instances they are saved to the Oracle database.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>The
C++ Class Library provides an implementation of <b>OBinder</b>. However, it
provides only a pure virtual <b>OBound</b> class.<span style="mso-spacerun:
yes">  </span>To make use of the convenience of <b>OBinder</b>, you need
subclasses of <b>OBound</b> that implement the <b>OBound</b> functionality.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>The
classes in this OMFC library are subclasses of <b>OBound</b>.<span
style="mso-spacerun: yes">  </span>They provide GUI widget implementations of
the <b>OBound</b> functionality.<span style="mso-spacerun: yes">  </span>As a
result you can create a form using Visual C++'s App Studio resource editor and,
with very few lines of code, you can hook those widgets to database
fields.<span style="mso-spacerun: yes">  </span>You then have a working
application.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>Please
see the <i>Oracle Objects for OLE C++ online help system</i> for more
discussion of <b>OBinder</b> and <b>OBound</b>.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;font-family:Arial'>Note
to Visual Basic users</span></b><span style='font-size:10.0pt;font-family:Arial'>:
An <b>OBinder</b> object works like a data control (it has no user interface
but it performs all the bookkeeping).<span style="mso-spacerun: yes">  </span><b>OBound</b>
objects work like bound controls.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial'>What kind of objects are available?<o:p></o:p></span></b></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>OMFC
classes are provided for the following kinds of user interface widgets:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><span
style='mso-tab-count:1'>            </span>edit controls:<span
style='mso-tab-count:2'>                 </span>display (and edit) values as strings<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><span
style='mso-tab-count:1'>            </span>static text controls:<span
style='mso-tab-count:1'>        </span>display values as strings<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><span
style='mso-tab-count:1'>            </span>check box:<span style='mso-tab-count:
2'>                    </span>display (and edit) values as &quot;on&quot; or
&quot;off&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><span
style='mso-tab-count:1'>            </span>radio button group:<span
style='mso-tab-count:1'>         </span>display (and edit) values as a setting
from a set of choices<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><span
style='mso-tab-count:1'>            </span>slider:<span style='mso-tab-count:
3'>                           </span>a combination slider and text display that
graphically displays<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><span
style='mso-tab-count:4'>                                                </span>and
edits a numeric value<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial'>How are these objects used?<o:p></o:p></span></b></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>This
OMFC library (and in fact the entire C++ Class Library) is used to build large
model programs.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>To
make and set up instances of any of these classes, you must go through several
steps:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'>1.<span style='mso-tab-count:1'>         </span>First,
you must create the user interface widget.<span style="mso-spacerun: yes"> 
</span>In Visual C++ this is easiest to do using Microsoft's App Studio
resource editor.<span style="mso-spacerun: yes">  </span>You can also create
the widget programmatically.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'>2.<span style='mso-tab-count:1'>         </span>Next,
you must declare an <b>OBinder</b> instance in your application, typically in
the view class for the window where the database form resides.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'>3.<span style='mso-tab-count:1'>         </span>You
must declare an <b>OBound</b> subclass instance for each widget (or one for a
group of radio buttons).<span style="mso-spacerun: yes">  </span>These
instances are usually members of the view class for the window where the
database form resides.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'>4.<span style='mso-tab-count:1'>         </span>You
must call the &quot;<b>BindToControl</b>&quot; method on each of the <b>OBound</b>
subclass instances.<span style="mso-spacerun: yes">  </span>You should do this
just once (for example, in the &quot;<b>OnInitialUpdate</b>&quot; method of
your view).<span style="mso-spacerun: yes">  </span>The <b>BindToControl</b>
method tells the instance variable exactly which widget it is managing.<span
style="mso-spacerun: yes">  </span>The widget is identified by window pointer
(CWnd *) and an ID (for instance IDC_WIDGET1).<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'>5.<span style='mso-tab-count:1'>         </span>You
must call the &quot;<b>BindToBinder</b>&quot; method on each of the <b>OBound</b>
subclass instances.<span style="mso-spacerun: yes">  </span>You can do this
multiple times, but normally you do it just once (for example, in the &quot;<b>OnInitialUpdate</b>&quot;
method of your view).<span style="mso-spacerun: yes">  </span>The <b>BindToBinder</b>
method tells the instance variable what <b>OBinder</b> to get its data from and
what field it should access in the <b>OBinder</b>'s dynaset.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'>6.<span style='mso-tab-count:1'>         </span>The
final step in setting up the instance is to open the <b>OBinder</b>.<span
style="mso-spacerun: yes">  </span>This creates a dynaset and fetches records
from the database.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;line-height:12.0pt;mso-pagination:
none;mso-layout-grid-align:none;text-autospace:none'><span style='font-size:
10.0pt;font-family:Arial'>Your application can now run.<span
style="mso-spacerun: yes">  </span>You need to implement some way for the user
to navigate through the records of the dynaset.<span style="mso-spacerun:
yes">  </span>For example, you can create a button with the label
&quot;Next&quot; that calls <b>OBinder::MoveNext.</b><span style="mso-spacerun:
yes">  </span>The user can make changes in the widgets.<span
style="mso-spacerun: yes">  </span>Just before the dynaset is navigated to
another record (for example, in response to a <b>MoveNext</b> call), all
changes on the current record are saved.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'>7.<span style='mso-tab-count:1'>         </span>Finally,
when the program is exiting, it is a good idea to call <b>OBinder::Close</b>
explicitly.<span style="mso-spacerun: yes">  </span>This is not strictly
necessary, but is good form.<span style="mso-spacerun: yes">  </span>See the <b>OBinder::Close</b>
in the <i>Oracle Objects for OLE C++ online help system</i>.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>The <b>OBound</b>
subclass instances manage the user interface widgets and keep them in synch
with data in the database. The instance hooks together the user's view of the
data and the database's view of the data.<span style="mso-spacerun: yes"> 
</span>(Step 4 sets up the user interface association; Step 5 sets up the
database data association.)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial'>An example</span></b><span style='font-size:10.0pt;
font-family:Arial'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>An
example is provided that uses the OMFC classes. When you installed Oracle
Objects for OLE the sample was placed in the <i>Samples</i> subdirectory of the
<i>OMFC</i> directory (if you asked to install sample code). The example allows
the user to edit the emp2 table, which is an extended version of the sample emp
table provided with Oracle databases.<span style="mso-spacerun: yes"> 
</span>The interesting files are VSDEPVW.H (which declares the bound control
variables for the formview) and VSDEPVW.CPP (which uses the bound controls).<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>The <b>OBinder</b>
that controls the dynaset on the emp2 table is a member of a special
subclass.<span style="mso-spacerun: yes">  </span>It is subclassed so that the
instance can override the <b>PostMove</b> and <b>PostAdd</b> trigger
methods.<span style="mso-spacerun: yes">  </span>The <b>PostMove</b> trigger is
overridden so that when a new employee is selected, the department <b>OBinder</b>
can be updated to the appropriate department.<span style="mso-spacerun: yes"> 
</span>The <b>PostAdd</b> trigger is overridden so that when a new employee
record is created, a department number and employee ID number are filled in
automatically.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial'>Methods of all the classes</span></b><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>These
methods described below are available in all the classes.<span
style="mso-spacerun: yes">  </span>The methods that are inherited from <b>OBound</b>
are not documented here (<b>BindToBinder</b> in particular).<span
style="mso-spacerun: yes">  </span>Please see the <i>Oracle Objects for OLE C++
online help system</i><b> </b>for more information on <b>OBound</b> and its
methods.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Arial'>operator=</span></u></b><u><span
style='font-size:10.0pt;font-family:Arial'> and copy constructor</span></u><span
style='font-size:10.0pt;font-family:Arial'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>All
these classes define the assignment operator and copy constructor in the class
definition but do not implement them.<span style="mso-spacerun: yes"> 
</span>This prevents the use of the compiler's default assignment operator (or
copy constructor), which would be wrong.<span style="mso-spacerun: yes"> 
</span>Neither the assignment operation nor construction by copy is defined for
any of these classes.<span style="mso-spacerun: yes">  </span>If you
inadvertently use assignment or copy construction on one of these objects, you
get a link error.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Arial'>BindToControl</span></u></b><u><span
style='font-size:10.0pt;font-family:Arial'><o:p></o:p></span></u></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>This
method associates the object with a particular user interface widget.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>Usage:<span
style='mso-tab-count:1'>  </span>oresult BindToControl(CWnd *<i>wnd</i>, int <i>itemid</i>)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Arial'>wnd</span></i><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>       </span>points
to the window containing the control<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Arial'>itemid</span></i><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>   </span>is
the control ID (IDC_WHATEVER) identifying the control.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;font-family:Arial'>BindToControl</span></b><span
style='font-size:10.0pt;font-family:Arial'> can only be called once per
object.<span style="mso-spacerun: yes">  </span>It dynamically subclasses the
control window (calls <b>CWnd::SubclassDlgItem</b>) so that the <b>OBound</b>
subclass code receives user interface messages.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><u><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></u></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='mso-line-height-alt:12.0pt;mso-pagination:none;
mso-layout-grid-align:none;text-autospace:none'><u><span style='font-size:14.0pt;
font-family:Arial'>The individual classes<o:p></o:p></span></u></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial'>OBoundEdit</span></b><u><span style='font-size:10.0pt;
font-family:Arial'><o:p></o:p></span></u></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>This
is the class you will most often use.<span style="mso-spacerun: yes"> 
</span>It displays the database value in a text Edit control.<span
style="mso-spacerun: yes">  </span>It has the additional method:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Arial'>SetProperty</span></u></b><u><span
style='font-size:10.0pt;font-family:Arial'><o:p></o:p></span></u></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>This
method sets whether the control is read-only or read-write.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>Usage:<span
style='mso-tab-count:1'>  </span>oresult SetProperty(bool <i>mode</i>=OBOUND_READWRITE);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Arial'>mode</span></i><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>    </span>a
flag indicating whether the control is read-only or read-write.<span
style="mso-spacerun: yes">  </span>It can be either:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>            </span>OBOUND_READWRITE<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>            </span>OBOUND_READONLY<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial'>OBoundStatic</span></b><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>This
class allows you to bind a static text item.<span style="mso-spacerun: yes"> 
</span>Objects of this class are always read-only.<span style="mso-spacerun:
yes">  </span>It has no additional methods.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial'>OBoundCheckBox</span></b><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>This
class allows you to display and edit database values as a checkbox.<span
style="mso-spacerun: yes">  </span>It is of greatest value for a database field
that only has two possible values, such as TRUE and FALSE.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>The <b>SetProperty</b>
method enables you to specify what value will be considered &quot;on&quot; and
what value will be considered &quot;off&quot;.<span style="mso-spacerun: yes"> 
</span>When the user checks the checkbox, the field data is set to the
&quot;on&quot; value.<span style="mso-spacerun: yes">  </span>When the user
unchecks the checkbox, the field data is set to the &quot;off&quot; value.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>If
the field value is neither &quot;off&quot; nor &quot;on&quot;, then the
checkbox behaves as follows:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><span
style='mso-tab-count:1'>            </span>If the checkbox is tristate, it is
placed into the &quot;grayed-out&quot; state.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><span
style='mso-tab-count:1'>            </span>If the checkbox is not tristate, it
is off.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Arial'>SetProperty</span></u></b><u><span
style='font-size:10.0pt;font-family:Arial'><o:p></o:p></span></u></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>This
method specifies whether the control is read-only or read-write, and what the
&quot;on&quot; and &quot;off&quot; values are for the checkbox.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'>Usage: oresult SetProperty(const
OValue <i>onvalue</i>, const OValue <i>offvalue</i>, bool <i>mode</i>=OBOUND_READWRITE)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.5in;text-indent:-1.0in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Arial'>onvalue</span></i><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>             </span>the
value corresponding to the checkbox being checked<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.5in;text-indent:-1.0in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Arial'>offvalue</span></i><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>             </span>the
value corresponding to the checkbox being unchecked<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.5in;text-indent:-1.0in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Arial'>mode</span></i><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>                </span>a
flag indicating whether the control is read-only or read-write.<span
style="mso-spacerun: yes">  </span>It can be either:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.5in;line-height:12.0pt;mso-pagination:
none;mso-layout-grid-align:none;text-autospace:none'><span style='font-size:
10.0pt;font-family:Arial'>OBOUND_READWRITE<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.5in;line-height:12.0pt;mso-pagination:
none;mso-layout-grid-align:none;text-autospace:none'><span style='font-size:
10.0pt;font-family:Arial'>OBOUND_READONLY<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.5in;line-height:12.0pt;mso-pagination:
none;mso-layout-grid-align:none;text-autospace:none'><span style='font-size:
10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial'>OBoundGroupButton</span></b><span style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Arial'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>A
single radio button cannot represent a database field value.<span
style="mso-spacerun: yes">  </span>A group of radio buttons can represent a
value.<span style="mso-spacerun: yes">  </span>Each radio button corresponds to
a single possible value, and the single radio button that is on indicates the
actual database field value.<span style="mso-spacerun: yes">  </span>Choosing a
different radio button changes the field value.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>To
use an <b>OBoundGroupButton</b> you create regular user interface widgets.<span
style="mso-spacerun: yes">  </span>You then call <b>BindToControl</b> on the <b>OBoundGroupButton</b>
instance for each radio button in the group.<span style="mso-spacerun: yes"> 
</span>You should call <b>SetProperty</b> for each radio button to set the
value of the radio button.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>If
the current field value does not correspond to the value of any of the radio
buttons in the group, none of the radio buttons are selected.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Arial'>SetProperty</span></u></b><u><span
style='font-size:10.0pt;font-family:Arial'><o:p></o:p></span></u></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>This
method specifies whether the control is read-only or read-write, and what value
the radio button represents.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'>Usage:<span style='mso-tab-count:
1'>  </span>oresult SetProperty(int <i>itemid</i>, const OValue <i>value</i>,
bool <i>mode</i>=OBOUND_READWRITE)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Arial'>itemid</span></i><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>   </span>identifies
which radio button you are setting the value for<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Arial'>value</span></i><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>     </span>the
value that this radio button represents<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Arial'>mode</span></i><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>    </span>a
flag indicating whether the control is read-only or read-write.<span
style="mso-spacerun: yes">  </span>It can be either:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>            </span>OBOUND_READWRITE<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>            </span>OBOUND_READONLY<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial'>OBoundSlider</span></b><span style='font-size:10.0pt;
font-family:Arial'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>A
slider is a combination of a scroll bar and a static text display.<span
style="mso-spacerun: yes">  </span>It is suitable for displaying and editing
numeric data that has a known range.<span style="mso-spacerun: yes"> 
</span>The data is displayed and edited using the scroll bar.<span
style="mso-spacerun: yes">  </span>It is also displayed using the static text
display.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>The <b>OBoundSlider</b>
has a slightly different <b>BindToControl</b> method.<span style="mso-spacerun:
yes">  </span>It needs to bind two controls simultaneously: the scroll bar and
the static text.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Arial'>BindToControl</span></u></b><u><span
style='font-size:10.0pt;font-family:Arial'><o:p></o:p></span></u></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>This
method associates the object with a scroll bar and static text item.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'>Usage:<span style='mso-tab-count:
1'>  </span>oresult BindToControl(CWnd *<i>wnd</i>, int <i>scrollid</i>, int <i>staticid</i>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Arial'>wnd</span></i><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>       </span>points
to the window containing the control<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Arial'>scrollid</span></i><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>  </span>is
the control ID (IDC_WHATEVER) identifying the scroll bar<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Arial'>staticid</span></i><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>  </span>is
the control ID (IDC_STATIC3) identifying the static text item<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>Except
for the extra id argument, which allows the <b>OBoundSlider</b> to connect to a
second user-interface widget, this method works the same as the <b>BindToControl</b>
described above under &quot;Methods of all the classes&quot;.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Arial'>SetProperty</span></u></b><u><span
style='font-size:10.0pt;font-family:Arial'><o:p></o:p></span></u></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'>This
method specifies whether the control is read-only or read-write and sets the
range of the scroll bar.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'>Usage:<span style='mso-tab-count:
1'>  </span>oresult SetProperty(const OValue <i>minvalue</i>, const OValue <i>maxvalue</i>,
bool <i>mode</i>=OBOUND_READWRITE)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.5in;text-indent:-1.0in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Arial'>minvalue</span></i><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>           </span>the
minimum value of the scroll bar<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.5in;text-indent:-1.0in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Arial'>maxvalue</span></i><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>           </span>the
maximum value of the scroll bar<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.5in;text-indent:-1.0in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Arial'>mode</span></i><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:1'>                </span>a
flag indicating whether the control is read-only or read-write.<span
style="mso-spacerun: yes">  </span>It can be either:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.5in;text-indent:-1.0in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:2'>                                    </span>OBOUND_READWRITE<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.5in;text-indent:-1.0in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Arial'><span style='mso-tab-count:2'>                                    </span>OBOUND_READONLY<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='mso-line-height-alt:12.0pt;mso-pagination:none;
mso-layout-grid-align:none;text-autospace:none'><b><span style='font-size:14.0pt;
font-family:Helvetica'>B. Oracle Objects for OLE C++ Class Library Workbook</span></b><span
style='font-size:14.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;mso-bidi-font-size:
12.0pt;font-family:Helvetica'>INTRODUCTION<o:p></o:p></span></b></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>This
Workbook provides examples of C++ code that use the Oracle Objects for OLE C++
Class Library. The </span><i><span style='font-size:10.0pt;font-family:Arial'>Oracle
Objects for OLE C++ online help system</span></i><b><span style='font-size:
10.0pt;font-family:Helvetica'> </span></b><span style='font-size:10.0pt;
font-family:Helvetica'>provides general information on Oracle Objects for OLE
as well as detailed descriptions of all the C++ classes and their methods.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Some
of the examples discussed in this Workbook are so simple that they are
represented only with code fragments.<span style="mso-spacerun: yes"> 
</span>Others are sufficiently complex that the complete code has been provided
in separate files.<span style="mso-spacerun: yes">  </span>The notes for those
examples indicate the names of the files containing the code.<span
style="mso-spacerun: yes">  </span>The sample files are found in subdirectories
of the <i>samples</i> directory, which is a subdirectory of the <i>workbook</i>
directory. The samples are installed by default or if you choose to install
sample code in a custom install. <b><span style="mso-spacerun: yes"> </span></b>A
few of the examples provide complete projects.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
examples presented here begin with simple, fairly common uses of the library
and progress to more complex, less common uses. Clever and dedicated developers
(with time on their hands) may learn how to use the Class Library simply by
working through the examples. However, using the library will be easier if you
read and understand relevant sections of the </span><i><span style='font-size:
10.0pt;font-family:Arial'>Oracle Objects for OLE C++ online help system</span></i><span
style='font-size:10.0pt;font-family:Helvetica'>.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>This
Class Library is intended for use against an Oracle databasea relational
database that uses the SQL language as its primary interface.<span
style="mso-spacerun: yes">  </span>The SQL used in these examples is as simple
as possible, and brief explanations are provided of what the SQL statement does
in each case.<span style="mso-spacerun: yes">  </span>But to exploit the full
power of this Libraryand of any relational databaseyou need a good grasp of
SQL.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Many
of the examples use the standard demonstration tables that are shipped with
Oracle databases. Most of the examples entail a database named ExampleDB, a
user named scott, and a password for that user of tiger.<span
style="mso-spacerun: yes">   </span>To use the example code for your own
projects, you need to change the database name to refer to your database and
the user information to refer to some valid user on your database. (Alternatively,
you can create a database alias called ExampleDB that refers to a database with
the scott/tiger account.)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>To
use the Class Library properly, your application must call the <b>OStartup </b>and
<b>OShutdown</b> methods.<span style="mso-spacerun: yes">  </span>These
routines perform necessary initialization and cleanup for the Class Library
(for example, they initialize and uninitialize OLE).<span style="mso-spacerun:
yes">  </span>In the examples that contain only fragments of code, we assume
that these routines are called outside the fragments.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<span style='font-size:10.0pt;font-family:Helvetica;mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA'><br clear=all
style='mso-special-character:line-break;page-break-before:always'>
</span>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><![if !supportEmptyParas]>&nbsp;<![endif]><span
style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Helvetica'>Example
1: Just get some data</span></u></b><span style='font-size:10.0pt;font-family:
Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>This
very minimal example demonstrates the simplest and most common use of the
library: to fetch some simple data from the database.<span style="mso-spacerun:
yes">  </span>In this example look at a table named emp, which has several
columns.<span style="mso-spacerun: yes">  </span>The only column we care about
for this example is one called sal, which represents the salary paid to an
employee.<span style="mso-spacerun: yes">  </span>The database contains a
record for each current employee.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Our
task is to find determine the total salary paidthe sum of the salaries of all
the employees.<span style="mso-spacerun: yes">  </span>To do this we have to <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;line-height:12.0pt;mso-pagination:
none;mso-layout-grid-align:none;text-autospace:none'><span style='font-size:
10.0pt;font-family:Helvetica'>1.<span style='mso-tab-count:1'>   </span>connect
to the database, <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;line-height:12.0pt;mso-pagination:
none;mso-layout-grid-align:none;text-autospace:none'><span style='font-size:
10.0pt;font-family:Helvetica'>2.<span style='mso-tab-count:1'>   </span>query
the database and retrieve records, and<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;line-height:12.0pt;mso-pagination:
none;mso-layout-grid-align:none;text-autospace:none'><span style='font-size:
10.0pt;font-family:Helvetica'>3.<span style='mso-tab-count:1'>   </span>process
the records.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>We
can do this all in a single subroutine, as follows:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>double
SumSalary(void)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ODatabase datab;<span style="mso-spacerun:
yes">   </span>// the database object<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ODynaset<span style="mso-spacerun: yes"> 
</span>dyn;<span style="mso-spacerun: yes">     </span>// dynaset object<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>double<span style="mso-spacerun: yes">   
</span>sum=0.0; // sum of all salaries<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>double<span style="mso-spacerun: yes">   
</span>cursal;<span style="mso-spacerun: yes">  </span>// salary of the current
employee<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// connect to the database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>datab.Open(&quot;ExampleDB&quot;,
&quot;scott&quot;, &quot;tiger&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// query the database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>dyn.Open(datab, &quot;select sal from emp&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// process all the records<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>while (!dyn.IsEOF()) // until weve gone
past all the records<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>dyn.GetFieldValue(&quot;sal&quot;,
&amp;cursal);<span style="mso-spacerun: yes">  </span>// get the current salary<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>sum += cursal;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>dyn.MoveNext();<span
style="mso-spacerun: yes">    </span>// move to the next record<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>return(sum);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>For
the sake of simplicity, we have ignored all error handling in this
example.<span style="mso-spacerun: yes">  </span>In later examples we consider
how to handle various errors.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Both
the database and the dynaset objects are opened&quot;.<span
style="mso-spacerun: yes">  </span>This is necessary because an unopened <b>ODatabase</b>
has no connection to a database, and an unopened <b>ODynaset</b> has no
records.<span style="mso-spacerun: yes">  </span>Until these objects are opened
they are not very useful.<span style="mso-spacerun: yes">  </span>The database
connection is established by opening the <b>ODatabase</b> object by passing in
the name of the database (ExampleDB), the username (scott), and the users
password (tiger).<span style="mso-spacerun: yes">  </span>The <b>ODynaset</b>
is opened on a particular <b>ODatabase</b>.<span style="mso-spacerun: yes"> 
</span><b>ODynasets</b> are always the set of records that is the result of an
SQL select on the database.<span style="mso-spacerun: yes">  </span>The
database is represented by the <b>ODatabase</b> argument to the <b>ODynaset</b>
<b>Open</b> method.<span style="mso-spacerun: yes">  </span>The <b>ODynaset
Open</b> method is also given a SQL statement that indicates which records from
the database are to be fetched.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>In
this case the SQL statement is select sal from emp<span style="mso-spacerun:
yes">  </span>(emp is the name of the table being queried).<span
style="mso-spacerun: yes">  </span>A relational database contains many
tables.<span style="mso-spacerun: yes">  </span>A query can access one or more
of the tables at once.<span style="mso-spacerun: yes">  </span>A query against
an Oracle database can, in fact, access tables across many databases
distributed on a network.<span style="mso-spacerun: yes">  </span>The emp table
has a number of columns in it; sal, ename, and hiredate are three of
them.<span style="mso-spacerun: yes">  </span>Since we are only interested in
salary, we ask only for the sal column.<span style="mso-spacerun: yes"> 
</span>We could have asked for more columns (the special symbol * in the
column list gets all the columns). This would not have changed our code, but it
would have fetched more data from the databaseunnecessarily.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Opening
the <b>ODynaset</b> gives us a set of records that match the data in the
database.<span style="mso-spacerun: yes">  </span>The <b>ODynaset</b> contains
the notion of which record is &quot;current&quot;.<span style="mso-spacerun:
yes">  </span>We can use the navigational methods on the <b>ODynaset</b> to
move from record to record.<span style="mso-spacerun: yes">  </span>By default,
when the <b>ODynaset </b>is opened, the first record becomes current.<span
style="mso-spacerun: yes">  </span>We can then use the <b>ODynaset</b>s <b>MoveNext</b>
method to traverse all the records that were fetched.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>We
use the <b>IsEOF</b> method to tell when weve gone through all the
records.<span style="mso-spacerun: yes">  </span>It returns TRUE when weve
&quot;Move[d]Next&quot; past the last record.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Now
that we can navigate through the records, it's time to fetch the data.<span
style="mso-spacerun: yes">  </span>The simplest way to do this is to use the <b>GetFieldValue</b>
method of the <b>ODynaset</b>.<span style="mso-spacerun: yes">  </span>This
method is overloaded to support different types.<span style="mso-spacerun:
yes">  </span>The method converts the data from the database to the type you
implicitly ask for, if possible.<span style="mso-spacerun: yes">  </span>Here
we ask for a double, because the salary is stored as a value with fractional
dollars.<span style="mso-spacerun: yes">  </span>We call <b>GetFieldValue</b>
with the name of the column and pass the address of a double variable we want
set to the value of the salary in the current record.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Then
we add up all the salaries.<span style="mso-spacerun: yes">  </span>Sounds
simple? Actually, it is, because the server can do most of the work for
us.<span style="mso-spacerun: yes">  </span>Theres no need for us to download
all the records (in a big company there may be thousands, and thats a lot of
network traffic). Instead, we can let the server do the sum for us.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>We
replace the line<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>dyn.Open(datab, &quot;select sal from
emp&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>with<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>dyn.Open(datab, &quot;select sum(sal) from
emp&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Now
the database hands us back a single record that contains the sum of the
salaries.<span style="mso-spacerun: yes">  </span>Often (as in this case), the
server is a more powerful computer than our client workstation.<span
style="mso-spacerun: yes">  </span>In such cases, it is more efficient to let
the server do the simple calculations, and it decreases the total number of
bytes that have to be transferred over the network.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>If
we use this statement as it stands, subsequent references to the returned
column need to use the name sum(sal), which is clumsy because of the
parentheses.<span style="mso-spacerun: yes">  </span>One more modification to
the SQL statement can make it more elegant.<span style="mso-spacerun: yes"> 
</span>We say:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>dyn.Open(datab, &quot;select sum(sal)
sumsal from emp&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>and
now we can refer to the returned column as sumsal. This renaming can become
significant in the case of more complex calculations or when we later change
queries but want to keep the same column names.<o:p></o:p></span></p>

<span style='font-size:10.0pt;font-family:Helvetica;mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA'><br clear=all
style='mso-special-character:line-break;page-break-before:always'>
</span>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><![if !supportEmptyParas]>&nbsp;<![endif]><span
style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Our
completed routine becomes:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>double
SumSalary(void)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ODatabase datab;<span style="mso-spacerun:
yes">   </span>// the database object<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ODynaset<span style="mso-spacerun: yes"> 
</span>dyn;<span style="mso-spacerun: yes">     </span>// dynaset object<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>double<span style="mso-spacerun: yes">   
</span>sum;<span style="mso-spacerun: yes">  </span><span style="mso-spacerun:
yes">   </span>// sum of all salaries<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// connect to the database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>datab.Open(&quot;ExampleDB&quot;,
&quot;scott&quot;, &quot;tiger&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// query the database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>dyn.Open(datab, &quot;select sum(sal)
&quot;&quot;sumsal&quot;&quot; from emp&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// get the sum of the salaries<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>dyn.GetFieldValue(&quot;sumsal&quot;,
&amp;sum);<span style="mso-spacerun: yes">  </span>// get the salary total<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>return(sum);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Notice
one more thing.<span style="mso-spacerun: yes">  </span>We connected to the
database but we never disconnected.<span style="mso-spacerun: yes"> 
</span>This is correct.<span style="mso-spacerun: yes">  </span>When the
routine exits, it destroys the <b>ODynaset</b> and <b>ODatabase</b>
objects.<span style="mso-spacerun: yes">  </span>The destruction of the <b>ODatabase</b>
object properly drops the database connectionyou dont have to think about it.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<span style='font-size:10.0pt;font-family:Helvetica;mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA'><br clear=all
style='mso-special-character:line-break;page-break-before:always'>
</span>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><![if !supportEmptyParas]>&nbsp;<![endif]><span
style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Helvetica'>Example
2: Execute a SQL statement</span></u></b><span style='font-size:10.0pt;
font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Another
typical operation with a database is to execute some SQL statement that is not
a query.<span style="mso-spacerun: yes">  </span>For example, you execute SQL statements
to create tables, add users, administer the database, delete a set of records,
and so forth.<span style="mso-spacerun: yes">  </span>In this example we create
a simple table.<span style="mso-spacerun: yes">  </span>This example also
demonstrates some simple error handling.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
routine to create the states table.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//<span
style="mso-spacerun: yes">   </span>returns 0 on success, -1 on failure<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
<b>There is a bug in this code!<span style="mso-spacerun: yes">  </span>(See
below)<span style="mso-spacerun: yes">  </span>Dont use this!</b><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>int
CreateStatesTable(void)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ODatabase datab;<span style="mso-spacerun:
yes">   </span>// the database object<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>oresult<span style="mso-spacerun: yes">  
</span>ores;<span style="mso-spacerun: yes">    </span>// indicates whether
operation succeeded<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// connect to the database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ores = datab.Open(&quot;ExampleDB&quot;,
&quot;scott&quot;, &quot;tigers&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (ores != O_SUCCESS)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>{ // couldnt open the database connection<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">       
</span>ErrorMessage(datab.GetSession().GetServerErrorText());<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return(-1);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// create the table<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>const char *sqls = &quot;create table
states (name char(15), area number, population number)&quot;;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ores = datab.ExecuteSQL(sqls);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (ores != O_SUCCESS)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>{<span style="mso-spacerun: yes">  
</span>// couldnt create the table<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">       
</span>ErrorMessage(datab.GetSession().GetServerErrorText()); <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return(-1);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// everything went just fine<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>return(0);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>We
connect to the database by opening the <b>ODatabase</b> object.<span
style="mso-spacerun: yes">  </span>Most methods in the library return a result
of the type oresult, which indicates whether the method succeeded or failed.<span
style="mso-spacerun: yes">  </span>If you determine that the method failed, you
need to call other routines to get the actual error.<span style="mso-spacerun:
yes">  </span>In this case we want the routine <b>GetServerErrorText</b>, which
is a method in the <b>OSession</b> class, to get the error text back from the
Oracle database software. <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>We
check the return from the <b>Open </b>method. If the routine did not execute
successfully, we get an <b>OSession</b> object from the <b>ODatabase</b> object
and use it to get the error text.<span style="mso-spacerun: yes"> 
</span>Notice that since the <b>GetSession</b> method returns an <b>OSession</b>,
it can be used inline.<span style="mso-spacerun: yes">  </span>Since the C++
objects in the Class Library are handles to underlying implementation objects,
they are lightweight.<span style="mso-spacerun: yes">  </span>The use of
temporary objects, such as the <b>OSession</b> that is returned by <b>GetSession</b>,
is perfectly reasonable.<span style="mso-spacerun: yes">  </span><b>GetServerErrorText</b>
returns a (const char *), which we hand to some generic error processing
routine, which presumably alerts the user.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>To
create the table, we first construct a SQL statement.<span style="mso-spacerun:
yes">  </span>In this example we are creating a trivial table, so we can use a
static string.<span style="mso-spacerun: yes">  </span>In general, code puts
together some complex SQL statement.<span style="mso-spacerun: yes"> 
</span>Our SQL statement creates a table with the name states that has three
columns in it: name, which is a text column with a width of 15 characters,
area, which is a number, and population, which is another number.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Next
we use the <b>ExecuteSQL</b> method to pass the SQL statement to the database
to be executed.<span style="mso-spacerun: yes">  </span>Once again we check the
return and get the error text if necessary.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Because
the cleanup work is done for you in the object destructors, you dont have to
worry about the database connectionwhether or not the open succeeded.<span
style="mso-spacerun: yes">  </span>Cleanup happens automatically.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Now,
when we run this example it fails (weve given the wrong password for the user
scott).<span style="mso-spacerun: yes">  </span>And <b>GetServerErrorText</b>
returns a 0 rather than an error string indicating a bad password.<span
style="mso-spacerun: yes">  </span>Why? Because <b>GetSession</b> is returning
an unopened <b>OSession</b> object.<span style="mso-spacerun: yes">  </span>And
thats because our database object cant return an <b>OSession</b> because it
isnt open.<span style="mso-spacerun: yes">  </span>But were getting the error
on the Open!<span style="mso-spacerun: yes">  </span>How do we get the correct
error?<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
answer is first to create an <b>OSession</b> object explicitly, and then open
the database using that session.<span style="mso-spacerun: yes">  </span>Then,
if the database open fails, we can refer to our <b>OSession</b> object.<span
style="mso-spacerun: yes">  </span>Rewritten, the code looks like this:<o:p></o:p></span></p>

<span style='font-size:10.0pt;font-family:Helvetica;mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA'><br clear=all
style='mso-special-character:line-break;page-break-before:always'>
</span>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><![if !supportEmptyParas]>&nbsp;<![endif]><span
style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
routine to create the states table.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//<span
style="mso-spacerun: yes">   </span>returns 0 on success, -1 on failure<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
Corrected version<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>int
CreateStatesTable(void)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>OSession<span style="mso-spacerun: yes"> 
</span>sess;<span style="mso-spacerun: yes">    </span>// database session
object<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ODatabase datab;<span style="mso-spacerun:
yes">   </span>// the database object<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>oresult<span style="mso-spacerun: yes">  
</span>ores;<span style="mso-spacerun: yes">    </span>// indicates whether
operation succeeded<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// open the default (unnamed) session<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ores = sess.Open();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (ores != O_SUCCESS)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>ErrorMessage(sess.GetErrorText());<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return(-1);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// connect to the database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ores = datab.Open(sess,
&quot;ExampleDB&quot;, &quot;scott&quot;, &quot;tigers&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (ores != O_SUCCESS)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>{ // couldnt open the database connection<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">       
</span>ErrorMessage(sess.GetServerErrorText());<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return(-1);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// create the table<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>const char *sqls = &quot;create table
states (name char(15), area number, population number) &quot;;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ores = datab.ExecuteSQL(sqls);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (ores != O_SUCCESS)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>{<span style="mso-spacerun: yes">  
</span>// couldnt create the table<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">       
</span>ErrorMessage(sess.GetServerErrorText()); <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return(-1);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// everything went just fine<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>return(0);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>This
version is almost the same as the earlier one, except that we use our explicit <b>OSession</b>
object to get the database errors, and theres code to open the <b>OSession</b>
object.<span style="mso-spacerun: yes">  </span>Opening the <b>OSession</b> is
very straightforward.<span style="mso-spacerun: yes">  </span>Notice that if
the <b>OSession</b> <b>Open</b> fails we get an error message by calling <b>GetErrorText</b>
rather than <b>GetServerErrorText</b>.<span style="mso-spacerun: yes">  </span><b>GetServerErrorText</b>
is appropriate when the error is a problem with the database. This cant be the
case until were actually connected to, or trying to connect to, the database.
If the <b>OSession</b> open fails, it is due to some internal problem such as
low memory.<span style="mso-spacerun: yes">  </span>So we use <b>GetErrorText</b>
instead.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<span style='font-size:10.0pt;font-family:Helvetica;mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA'><br clear=all
style='mso-special-character:line-break;page-break-before:always'>
</span>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><![if !supportEmptyParas]>&nbsp;<![endif]><span
style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Helvetica'>Example
3:<span style="mso-spacerun: yes">  </span>A joined query</span></u></b><span
style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>One
of the most important and powerful features of a relational database is the
possibility of querying data from several tables at once.<span
style="mso-spacerun: yes">  </span>Instead of formulating and coordinating
several related queries on different tables, the queries can be combined.<span
style="mso-spacerun: yes">  </span>Most of this example is about writing the
SQL needed for a joined query.<span style="mso-spacerun: yes">  </span>If you
are already familiar with SQL, you can skim through this example, but be sure
to read the very last paragraph.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Consider
the emp and dept sample tables that are installed in the scott account of most
Oracle7 sample databases.<span style="mso-spacerun: yes">  </span>The emp table
contains the employee name (ename field), the employees job (job field), the
employees salary (sal field), and the department number where the employee
works (deptno field).<span style="mso-spacerun: yes">  </span>A related table
is the dept table.<span style="mso-spacerun: yes">  </span>It also contains the
department number (deptno field), as well as the department name (dname field)
and the department location (loc field).<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Suppose
we want to write an application that looks at where the different employees
work.<span style="mso-spacerun: yes">  </span>We want to query employee names
and the location of the departments where they work.<span style="mso-spacerun:
yes">  </span>One possible solution (though not a good one) is to create two
separate queries:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
bad solution to employee &amp; department join<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>ODatabase
datab;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>datab.Open(&quot;ExampleDB&quot;,
&quot;scott&quot;, &quot;tiger&quot;);<span style="mso-spacerun: yes">  
</span>// open the database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>ODynaset
empdyn;<span style="mso-spacerun: yes">  </span>// employee query<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>ODynaset
deptdyn; // department query<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>empdyn.Open(datab,
&quot;select ename from emp&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>deptdyn.Open(datab,
&quot;select loc from dept&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Now
we have one query for employee names and another for department locations.<span
style="mso-spacerun: yes">  </span>Not only do we need to manage the two
queries, but we do not know which record in the department list corresponds to
which employee.<span style="mso-spacerun: yes">  </span>The two queries are not
sorted: the first department is not necessarily the department of the first
employee.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>However,
the two tables do share a field: deptno.<span style="mso-spacerun: yes"> 
</span>This field is the key that relates the two tables.<span
style="mso-spacerun: yes">  </span>Now we could write:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
still not a good solution to employee &amp; department join<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>ODatabase
datab;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>datab.Open(&quot;ExampleDB&quot;,
&quot;scott&quot;, &quot;tiger&quot;);<span style="mso-spacerun: yes">  
</span>// open the database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>ODynaset
empdyn;<span style="mso-spacerun: yes">  </span>// employee query<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>ODynaset
deptdyn; // department query<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>empdyn.Open(datab,
&quot;select ename, deptno from emp&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>deptdyn.Open(datab,
&quot;select loc, deptno from dept&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Now
whenever we look at an employee record, we can read its department number.<span
style="mso-spacerun: yes">  </span>Then we can scan through the department
records to find the department with that department number.<span
style="mso-spacerun: yes">  </span>Then well have the location.<span
style="mso-spacerun: yes">  </span>The trouble with this solution is that it
requires us to scan those department records pretty often.<span
style="mso-spacerun: yes">  </span>When were writing a client-server
application, this is the kind of processing that the server does best.<span
style="mso-spacerun: yes">  </span>The server is very good at coordinating
data; there's no reason to download the data to the client workstation for
coordination.<o:p></o:p></span></p>

<span style='font-size:10.0pt;font-family:Helvetica;mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA'><br clear=all
style='mso-special-character:line-break;page-break-before:always'>
</span>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><![if !supportEmptyParas]>&nbsp;<![endif]><span
style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>What
we can do here is tell the server to match the deptno fields of the two
tables.<span style="mso-spacerun: yes">  </span>Then we have:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
the joined query solution<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>ODatabase
datab;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>datab.Open(&quot;ExampleDB&quot;,
&quot;scott&quot;, &quot;tiger&quot;);<span style="mso-spacerun: yes"> 
</span>// open the database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>ODynaset
jdyn;<span style="mso-spacerun: yes">  </span>// joined query<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>jdyn.Open(datab,
&quot;select emp.ename, dept.loc from emp, dept \<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">                  </span>where emp.deptno =
dept.deptno&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Now
we have a dynaset with two fields in it: ename and loc.<span
style="mso-spacerun: yes">  </span>These are just the fields we wanted.<span
style="mso-spacerun: yes">  </span>And the loc field corresponds to the
location of the department where the employee works.<span style="mso-spacerun:
yes">  </span>In effect, when the server was preparing the records for return
to our client, it did the coordination, more efficiently than we could have
done it ourselves (because of all the machinery of a relational database).<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>A
couple of points are noteworthy:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Symbol'>·<span style='mso-tab-count:1'>              </span></span><span
style='font-size:10.0pt;font-family:Helvetica'>The first is the syntax of the
SQL statement.<span style="mso-spacerun: yes">  </span>We specified which
fields we wanted in our query.<span style="mso-spacerun: yes">  </span>Since
the fields are coming from several tables, we fully specified the fields by
calling them by names like table.field.<span style="mso-spacerun: yes"> 
</span>When we specified the tables we were querying, we gave a comma-separated
list of all the tables we wanted. Finally, we gave a join condition, which is
just a &quot;where&quot; clause that specifies how we want to coordinate the
data from the various tables.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Helvetica'><span style='mso-tab-count:1'>            </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Symbol'>·<span style='mso-tab-count:1'>              </span></span><span
style='font-size:10.0pt;font-family:Helvetica'>Another point is that the deptno
field is not one of the fields in our dynaset.<span style="mso-spacerun: yes"> 
</span>If we wanted deptno we would have to include it in the list of select
fields as: &quot;select emp.ename, emp.deptno....<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Helvetica'><span style='mso-tab-count:1'>            </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Symbol'>·<span style='mso-tab-count:1'>              </span></span><span
style='font-size:10.0pt;font-family:Helvetica'>By the way, the backslash (\)
is not part of the SQL statement.<span style="mso-spacerun: yes">  </span>It is
just the standard C syntax for continuing a literal across multiple lines.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Helvetica'><span style='mso-tab-count:1'>            </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Symbol'>·<span style='mso-tab-count:1'>              </span></span><span
style='font-size:10.0pt;font-family:Helvetica'>Finally a most important
point:<span style="mso-spacerun: yes">  </span>Dynasets formed from joined
queries are essentially read-only.<span style="mso-spacerun: yes">  </span>The
records in such a dynaset do not correspond to actual records in any table.<span
style="mso-spacerun: yes">  </span>Therefore it is not possible to delete,
update, or add new records to such a dynaset: theres no table to be changed so
it doesnt make sense.<span style="mso-spacerun: yes">  </span>Other kinds of
queries, such as queries that have computed columns, are also read-only.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Helvetica'><span style='mso-tab-count:1'>      </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<span style='font-size:10.0pt;font-family:Helvetica;mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA'><br clear=all
style='mso-special-character:line-break;page-break-before:always'>
</span>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><![if !supportEmptyParas]>&nbsp;<![endif]><span
style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Helvetica'>Example
4: A connection dialog</span></u></b><span style='font-size:10.0pt;font-family:
Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>You
need to specify three things to open a database object: the database name, the
user name, and the users password.<span style="mso-spacerun: yes">  </span>You
can hard code these values into your code, but that is a bad idea because then
you wont be able to use the same program for another user or against a different
database.<span style="mso-spacerun: yes">  </span>It is much better to generalize
the connection information.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
obvious way to do this is to create a dialog that obtains the information.<span
style="mso-spacerun: yes">  </span>We want a routine that hands back an open <b>ODatabase</b>
object if the connection was possible and a closed <b>ODatabase</b> to indicate
failure.<span style="mso-spacerun: yes">  </span>We want the ability to create
the ODatabase with different options.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
sample subdirectory <i>logdlg</i> contains the files LOGDLG.CPP and
LOGDLG.H.<span style="mso-spacerun: yes">  </span>These files contain the code
for an implementation of such a login dialog using Visual C++s MFC
framework.<span style="mso-spacerun: yes">  </span>The dependency on the
framework is slight, so you don't have to be very experienced with MFC to
understand what the code is doing.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
important portion of the logdlg class follows:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>class
logdlg : public CDialog // subclass of a dialog<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>public:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// Construction<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>logdlg(CWnd* pParent = NULL);<span
style='mso-tab-count:1'>   </span>// standard constructor<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// get a database login<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ODatabase GetLogin(long options =
ODATABASE_DEFAULT);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>private:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>OSession<span style="mso-spacerun: yes"> 
</span>m_session;<span style="mso-spacerun: yes">      </span>// our handle to
the default session<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ODatabase m_database;<span
style="mso-spacerun: yes">     </span>// our handle to the database object<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
more implementation details...<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>};<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>An
instance of the class is a dialog, which is what is created here.<span
style="mso-spacerun: yes">  </span>Then, when the client of the class wants a
valid and open <b>ODatabase</b> object, the method <b>GetLogin</b> is
called.<span style="mso-spacerun: yes">  </span>This method runs the dialog,
tries to make the database connection, notifies the user of errors, and finally
returns.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>You
can see from the source of <b>GetLogin</b> that it does very little.<span
style="mso-spacerun: yes">  </span>It performs some setup and then calls the
DoModal routine to run the dialog.<span style="mso-spacerun: yes">  </span>It
then returns an <b>ODatabase</b> object, which may or may not be open. The real
work is done when OK is pressed.<span style="mso-spacerun: yes"> 
</span>Heres the method that gets called then:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>void
logdlg::OnOK()<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>CString dbname;<span style="mso-spacerun:
yes">   </span>// database name string<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>CString user;<span style="mso-spacerun:
yes">     </span>// user name string<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>CString password; // password string<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>// get the strings the user has entered<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>GetDlgItem(IDC_USERNAME)-&gt;GetWindowText(user);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>GetDlgItem(IDC_PASSWORD)-&gt;GetWindowText(password);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>GetDlgItem(IDC_DATABASE)-&gt;GetWindowText(dbname);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>// try to open the database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>if (m_database.Open(m_session, dbname,
user, password, m_options) != OSUCCESS)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>{ // some error<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">           </span>// get the oracle error number<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">   
</span>long oraerr = m_session.ServerErrorNumber();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">           </span>// get the oracle error message, to
display to the user<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">   
</span>const char *dberrs = m_session.GetServerErrorText();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">   
</span>ErrorMessage(dberrs); // tell user what went wrong<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>else<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">   
</span>// we're done - get out of the dialog<span style='mso-tab-count:1'> </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">   
</span>CDialog::OnOK();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>} <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span>return;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>This
method gets the text from the login dialog and uses it to try to open the <b>ODatabase</b>
object.<span style="mso-spacerun: yes">  </span>When it is opening the <b>ODatabase</b>
object it uses the options that were passed in to <b>GetLogin</b>.<span
style="mso-spacerun: yes">  </span>If there is an error, the generic
ErrorMessage routine is called (which may just put up a simple message
box).<span style="mso-spacerun: yes">  </span>Only if the open was successful
is the parent dialog classs routine OnOK called (which closes the dialog).<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>There
are two ways for the dialog to end:<span style="mso-spacerun: yes"> 
</span>Either the OK is successful, in which case the returned <b>ODatabase</b>
object will be open, or the user chooses cancel, in which case the returned <b>ODatabase</b>
object will be closed.<span style="mso-spacerun: yes">  </span>If the user
chooses OK to try to connect and the connection fails, the above routine
alerts the user but does not close the dialog.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Note
again that it is reasonable to pass <b>ODatabase</b> instances around.<span
style="mso-spacerun: yes">  </span>Here we are using one as the return value
from a subroutine.<span style="mso-spacerun: yes">  </span>A caller might have
some code like this:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
connect to the database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>ODatabase<span
style="mso-spacerun: yes">  </span>database;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>logdlg<span
style="mso-spacerun: yes">   </span>dblogin;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>database
= dblogin.GetLogin();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>if
(database.IsOpen())<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>; // success<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>else<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>; // user canceled for some reason<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Useful
improvements to the dialog would be to allow the fields to be preset, or to
allow database options to be set on the <b>ODatabase.Open</b>.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<span style='font-size:10.0pt;font-family:Helvetica;mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA'><br clear=all
style='page-break-before:always'>
</span>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Helvetica'>Example
5: Updating a dynaset</span></u></b><u><span style='font-size:10.0pt;
font-family:Helvetica'><o:p></o:p></span></u></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Sometimes
you may need to do more than just read the contents of a dynaset. You may also
want to modify the records in the dynaset, and therefore the database itself.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>You
can update database records using the Class Library in two ways.<span
style="mso-spacerun: yes">  </span>The first is to execute an update SQL
statement.<span style="mso-spacerun: yes">  </span>The second is to use the
dynaset to edit the records.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Consider
the emp table.<span style="mso-spacerun: yes">  </span>It contains employee
salary information.<span style="mso-spacerun: yes">  </span>Suppose the company
has had a good year and everyone is getting a $1000 salary increase.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
give all employees a raise of amount &quot;raise&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>oboolean
GiveRaise(int raise)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ODatabase db;<span style="mso-spacerun:
yes">  </span>// our database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>logdlg<span style="mso-spacerun: yes">   
</span>db_login;<span style="mso-spacerun: yes">  </span>// used to connect to
database (see example 4)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// open a connection to the database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>db = db_login.GetLogin();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (!db.IsOpen())<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return(FALSE);<span
style="mso-spacerun: yes">  </span>// indicates that we couldnt give out the
raises<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// give everybody a raise<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>char sql[80];<span style="mso-spacerun:
yes">  </span>// for constructing the sql statement<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>sprintf(sql, &quot;update emp sal = sal +
%d&quot;, raise);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (db.ExecuteSQL(sql) != OSUCCESS)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return(FALSE);<span
style="mso-spacerun: yes">  </span>// we couldnt do it<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">                        </span>// would be a good
idea to look at errors to see why<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>return(TRUE);<span style="mso-spacerun:
yes">  </span>// weve given the raises<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><span
style="mso-spacerun: yes">        </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Notice
that we run a login dialog in this routine and then, by exiting the routine and
destroying the <b>ODatabase</b> instance, we drop the database connection.<span
style="mso-spacerun: yes">  </span>Generally a routine like this should
probably pass in the <b>ODatabase</b> object as a parameter so that many such
operations can share a login.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Updating
records in this way is very efficient because the server does all the
work.<span style="mso-spacerun: yes">  </span>But in more complex situations it
is not possible to use such a simple update SQL statement.<span
style="mso-spacerun: yes">  </span>A more realistic example would be a case in
which the raise for each employee is calculated in some fashion and then
applied to each record. This requires us to go through every record in the
database and update some of them as needed.<span style="mso-spacerun: yes"> 
</span>Heres a routine to do that:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
Calculate and apply raises to all employees<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>oboolean
GiveRaises(const ODatabase &amp;db)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (!db.IsOpen())<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return(FALSE);<span
style="mso-spacerun: yes">  </span>// we cant work without an open database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// create a dynaset referring to the
employees<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ODynaset dyn;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>dyn.Open(db, &quot;select ename, sal,
hiredate from emp&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (!dyn.IsOpen())<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return(FALSE);<span
style="mso-spacerun: yes">  </span>// cant open dynaset<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>double<span style="mso-spacerun: yes">  
</span>salary, raise;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// go through all the records<span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>while (!dyn.IsEOF())<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>{<span style="mso-spacerun: yes"> 
</span>// for every record<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>raise = CalculateRaise(dyn);<span
style="mso-spacerun: yes">  </span>// calculate raise somehow<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>if (raise &gt; 0)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>{ // edit this record<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">            </span>dyn.StartEdit();<span
style="mso-spacerun: yes">  </span>// begin editing this record<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">            </span>dyn.GetFieldValue(&quot;sal&quot;,
&amp;salary);<span style="mso-spacerun: yes">  </span>// get old salary<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">            </span>dyn.SetFieldValue(&quot;sal&quot;,
salary + raise);<span style="mso-spacerun: yes">  </span>// set new salary<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">            </span>dyn.Update();<span
style="mso-spacerun: yes">  </span>// finish editing this record<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>dyn.MoveNext();<span
style="mso-spacerun: yes">  </span>// go to the next record<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun:
yes">            </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>return(TRUE);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>There
are three steps to editing a record:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Helvetica'>1.<span style='mso-tab-count:
1'>   </span>First, call the <b>StartEdit</b> method to tell the dynaset that
youre about to edit the record.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Helvetica'>2.<span style='mso-tab-count:
1'>         </span>Second, make calls to change values in the current
record.<span style="mso-spacerun: yes">  </span>These could be <b>Dynaset.SetFieldValue</b>
calls or they may be <b>OField.SetValue</b> calls.<span style="mso-spacerun:
yes">  </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Helvetica'>3.<span style='mso-tab-count:
1'>   </span>Finally, call <b>Update</b> to push the changes into the database.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>This
method is much more flexible than a direct update, but it is also slower.<span
style="mso-spacerun: yes">  </span><b>StartEdit</b> must go to the database and
attempt to lock the record.<span style="mso-spacerun: yes">  </span>It also
checks to see if the data in the database is different from the data in the dynaset
(which would indicate that someone else has edited the record, invalidating the
dynaset).<span style="mso-spacerun: yes">  </span>If another dynaset or program
has a lock on the record, <b>StartEdit</b> can either wait indefinitely or can
return a cant obtain lock error.<span style="mso-spacerun: yes"> 
</span>(See the documentation on <b>ODatabase</b> options for the
ODATABASE_NOWAIT option.)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Finally
there is a subtle difficulty when updating (or making any other kind of change)
to dynasets or to the database:<span style="mso-spacerun: yes">  </span>Changes
made to records in a dynaset are immediately reflected in that dynaset.<span
style="mso-spacerun: yes">  </span>Any changes made by other users, or other
dynasets in your program, are not reflected immediately.<span
style="mso-spacerun: yes">  </span>If the dynaset has not yet fetched the row
that was changed, it gets the new value when and if it does fetch the row.<span
style="mso-spacerun: yes">  </span>But it is difficult to predict which rows
have really been fetched (because of caching).<span style="mso-spacerun: yes"> 
</span>You can guarantee that the dynaset has the most up-to-date version of
the data by performing a <b>Refresh</b> on the dynaset.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<span style='font-size:10.0pt;font-family:Helvetica;mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA'><br clear=all
style='mso-special-character:line-break;page-break-before:always'>
</span>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><![if !supportEmptyParas]>&nbsp;<![endif]><span
style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Helvetica'>Example
6: Adding and deleting records with a dynaset</span></u></b><span
style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Example
5 covers the editing of existing records.<span style="mso-spacerun: yes"> 
</span>In many cases you need not only to edit records but to add new records
and to delete existing ones. The <b>ODynaset</b> method <b>DeleteRecord</b>
deletes the current record.<span style="mso-spacerun: yes">  </span>To delete a
record, navigate to it and then execute <b>DeleteRecord</b>.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Here
is a routine that deletes all employees with a salary above a certain amount.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>oboolean
DeleteOverpaid(const ODatabase &amp;db, double maxsal)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (!db.IsOpen())<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return(FALSE);<span
style="mso-spacerun: yes">  </span>// error because database object isnt open<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ODynaset dyn;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>OField<span style="mso-spacerun: yes">  
</span>salary;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">   
</span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>dyn.Open(db, &quot;select sal from
emp&quot;); <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>salary = dyn.GetField(&quot;sal&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>while (!dyn.IsEOF())<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>if ((double) salary &gt; maxsal)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>{ // this employee is overpaid.<span
style="mso-spacerun: yes">  </span>Delete.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">            </span>dyn.DeleteRecord();<span
style="mso-spacerun: yes">  </span>// deletes the current record<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>dyn.MoveNext();<span
style="mso-spacerun: yes">  </span>// go through all the records<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>return(TRUE);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Once
we delete a record with <b>DeleteRecord</b>, the current record becomes invalid
(it has been deleted).<span style="mso-spacerun: yes">  </span>Most operations
on such a record fail.<span style="mso-spacerun: yes">  </span>Navigating to
another record gets us to a valid record.<span style="mso-spacerun: yes"> 
</span>We won't be able to navigate back to the deleted (thus invalid) record.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>In
this example we get the field value by using an <b>OField</b> object rather
than directly through the <b>ODynaset</b> object.<span style="mso-spacerun:
yes">  </span><b>OField</b> objects are closely linked to the underlying
dynaset: as navigation occurs in the dynaset, the field value changes to
contain the current record value.<span style="mso-spacerun: yes">  </span>An <b>OField</b>
instance is more convenient to use than going through the dynaset, because it
can be treated as a variable, as illustrated by the (double) salary &gt;
maxsal statement above.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Adding
a new record is a little more complex.<span style="mso-spacerun: yes"> 
</span>You can use two methods to add records to a dynaset.<span
style="mso-spacerun: yes">  </span>The first is <b>AddNewRecord</b>, which adds
a blank record.<span style="mso-spacerun: yes">  </span>The second is <b>DuplicateRecord</b>,
which adds a blank record and then fills it with the field values found in the
current record (current at the time <b>DuplicateRecord</b> is called).<span
style="mso-spacerun: yes">  </span>When a blank record is created, it is either
filled with NULLs or sent to the database server to have defaults filled in,
depending on whether the ODATABASE_PARTIAL_INSERT option has been turned
on.<span style="mso-spacerun: yes">  </span>(See the <b>ODatabase</b>
documentation for details.)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>After
adding the record you may change some of its values.<span style="mso-spacerun:
yes">  </span>The <b>AddNewRecord</b> or <b>DuplicateRecord</b> call allows
editing similarly to the way that <b>StartEdit</b> does.<span
style="mso-spacerun: yes">  </span>When you have made all the changes you want,
call <b>Update</b> to put your changes into the database.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>When
you are adding new records, it is important to be aware of the structure of the
table that you are editing.<span style="mso-spacerun: yes">  </span>Some fields
may require unique values.<span style="mso-spacerun: yes">  </span>Some fields
may not allow NULL values.<span style="mso-spacerun: yes">  </span>These requirements
must be fulfilled or the <b>Update</b> call fails.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Here
is a routine that adds a new record to the employee table.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>oboolean
AddEmployee(ODynaset *empdyn, const char *ename,<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">                     </span>double salary, int
deptno)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (!empdyn-&gt;IsOpen())<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return(FALSE);<span
style="mso-spacerun: yes">  </span>// cant work with unopened dynaset<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// Add the new record<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (empdyn-&gt;AddNewRecord() != OSUCCESS)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return(FALSE);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// Set the values of the record<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   
</span>empdyn-&gt;SetFieldValue(&quot;ename&quot;, ename);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>empdyn-&gt;SetFieldValue(&quot;sal&quot;,
salary);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   
</span>empdyn-&gt;SetFieldValue(&quot;deptno&quot;, deptno);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// the empno field is required and must be
unique.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>//<span style="mso-spacerun: yes"> 
</span>We will find the current maximum empno and add 1 to it.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ODynaset empnodyn;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>empnodyn.Open(empdyn-&gt;GetDatabase(),<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">                  </span>&quot;select max(empno)+1
newempno from emp&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>int empno;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>empnodyn.GetFieldValue(&quot;newempno&quot;,
&amp;empno);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// finish setting the employee record<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   
</span>empdyn-&gt;SetFieldValue(&quot;empno&quot;, empno);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// put this record in the database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (empdyn-&gt;Update() != OSUCCESS)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return(FALSE);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>return(TRUE);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
values of most of the fields were left NULL.<span style="mso-spacerun: yes"> 
</span>We set the values of ename, sal, and deptno based on the arguments to
the routine.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
empno field is used as a unique key in the employee table, so it must be unique
and non-NULL.<span style="mso-spacerun: yes">  </span>An easy way to specify this
is to ask the server for the highest current employee number, and then have the
server add 1 to that number so that we get a new unique value.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>In
practice this is not a good solution, for two reasons. First, we are making an
extra query to the database for every record added.<span style="mso-spacerun:
yes">  </span>It would be faster to figure out a good employee number at the
beginning of the program and then use that number (incrementing it or
whatever).<span style="mso-spacerun: yes">  </span>Second, this method
guarantees only that the empno field is unique among current records.<span
style="mso-spacerun: yes">  </span>If an employee record was deleted, its
employee number field might get reused.<span style="mso-spacerun: yes"> 
</span>This is generally not desirable.<span style="mso-spacerun: yes"> 
</span>The database has objects called sequences that help with this kind of
problem.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>As
with editing and updating a dynaset, there is a difficulty with cross-dynaset
consistency.<span style="mso-spacerun: yes">  </span>If a dynaset contains a
record, and it has been fetched from the server already, then when another
dynaset deletes that same record there will be a ghost record in the first
dynaset.<span style="mso-spacerun: yes">  </span>Similarly, records added to
the first dynaset wont show up in other existing dynasets. (Added records can
be seen by refreshing the dynaset.) Attempting to edit a record that has been
deleted from the database will fail on the <b>StartEdit</b> method.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Helvetica'>Example
7: Transaction control</span></u></b><span style='font-size:10.0pt;font-family:
Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Normally,
when you change the database data with dynaset operations, the database
immediately reflects the changes you have made.<span style="mso-spacerun:
yes">  </span>When you add records or change field values, the database is
changed when you execute the <b>Update</b> method.<span style="mso-spacerun:
yes">  </span>When you delete records, the database is changed when the <b>DeleteRecord</b>
method is executed.<span style="mso-spacerun: yes">  </span>This is sufficient
when changing a record is an independent operation.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>But
sometimes you have an entire set of changes that must be made together.<span
style="mso-spacerun: yes">  </span>Either they are all made or none of them are
made.<span style="mso-spacerun: yes">  </span>The classic example is an
application that maintains bank account balances.<span style="mso-spacerun:
yes">  </span>When a transfer is made from one account to the other, two
separate records are edited.<span style="mso-spacerun: yes">  </span>The record
that records the balance of one account is debited and the record of the other
account is credited.<span style="mso-spacerun: yes">  </span>These two
operations must succeed or fail together.<span style="mso-spacerun: yes"> 
</span>If one takes place without the other, the banks books will not balance
properly.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
solution is to enclose the set of changes in a transaction.<span
style="mso-spacerun: yes">  </span>Before making the first change you call the <b>BeginTransaction</b>
method.<span style="mso-spacerun: yes">  </span>Then you make your
changes.<span style="mso-spacerun: yes">  </span>If you want to cancel the
changes, you call the <b>Rollback</b> method.<span style="mso-spacerun: yes"> 
</span>If you want to make the changes permanent, you call the <b>Commit</b>
method.<span style="mso-spacerun: yes">  </span>Either <b>Rollback</b> or <b>Commit</b>
completes the current transaction.<span style="mso-spacerun: yes"> 
</span>Then, by default, we return to the normal behavior of changing the
database directly on each <b>Update</b> or <b>DeleteRecord</b>.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;font-family:Helvetica'>Note
to experienced Oracle developers</span></b><span style='font-size:10.0pt;
font-family:Helvetica'>: The normal transactional model of the Class Library is
similar to the autocommit mode in SQL*Plus or Oracle Forms.<span
style="mso-spacerun: yes">  </span>Executing <b>BeginTransaction</b> is like
turning autocommit off.<span style="mso-spacerun: yes">  </span>Executing <b>Rollback</b>
or <b>Commit</b> is a rollback or commit.<span style="mso-spacerun: yes"> 
</span>And the default behavior of <b>Rollback</b> or <b>Commit</b> is then to
reenter autocommit mode.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
example we consider here uses <b>DynasetMarks</b>.<span style="mso-spacerun:
yes">  </span>These are objects that remember a position in a dynaset.<span
style="mso-spacerun: yes">  </span>You can get a mark on the current position
and then later use the <b>MoveToMark</b> method to reposition on that record
again.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Heres
a bank account example:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
transfer money from credit to debit account<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
we have a DynasetMark on the two accounts<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>void
TransferMoney(ODynaset accounts,<span style="mso-spacerun: yes">   </span>//
dynaset of bank accounts<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">                   </span>ODynasetMark credit,<span
style="mso-spacerun: yes">  </span>// mark on record to be credited<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">                   </span>ODynasetMark debit,<span
style="mso-spacerun: yes">   </span>// mark on record to be debited<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">                   </span>double amount<span
style="mso-spacerun: yes">         </span>// amount to transfer<span
style="mso-spacerun: yes">   </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">                   </span>)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// get the dynasets session<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>OSession banksess = accounts.GetSession();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// start the transaction<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>banksess.BeginTransaction();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// make the transfer<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>double balance;<span style="mso-spacerun:
yes">  </span>// an accounts balance<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// credit one account<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>accounts.MoveToMark(credit);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>accounts.StartEdit();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   
</span>accounts.GetFieldValue(&quot;balance&quot;, &amp;balance);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>accounts.SetFieldValue(&quot;balance&quot;,
balance + amount);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (accounts.Update() != OSUCCESS)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>{ // couldn't change the first record<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>banksess.Rollback();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// debit the other account<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>accounts.MoveToMark(debit);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>accounts.StartEdit();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   
</span>accounts.GetFieldValue(&quot;balance&quot;, &amp;balance);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   
</span>accounts.SetFieldValue(&quot;balance&quot;, balance - amount);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (accounts.Update() != OSUCCESS)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>{ // couldn't change this record<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>banksess.Rollback();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   </span><span style="mso-spacerun: yes"> </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">          </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// everything is fine - commit the
transaction<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>banksess.Commit();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>return;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>(Here
were checking for errors only on the <b>Update</b> statement.<span
style="mso-spacerun: yes">  </span>A real application would be more careful and
would check for errors on all the methods.)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>How
could the second update fail and the first succeed?<span style="mso-spacerun:
yes">  </span>The database connection might have been lost (maybe because of a
hardware failure in a network).<span style="mso-spacerun: yes">  </span>Or
perhaps the new account balance violated a database constraint (for example,
there might be a trigger stored in the database that caused the update to fail
because the account balance dropped below zero).<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Example
8 shows another way to accomplish the same task.<span style="mso-spacerun:
yes">  </span>Rather than using a dynaset, it calls <b>ExecuteSQL</b> directly
to make the database changes.<span style="mso-spacerun: yes">  </span>Changes
made to the database using <b>ExecuteSQL</b> (by way of update, insert, and
delete statements) are part of the transaction that is managed by <b>BeginTransaction</b>
and <b>Commit</b> or <b>Rollback</b>.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
<b>Commit</b> and <b>Rollback</b> methods take an oboolean argument named <i>startnew</i>,
which is FALSE by default.<span style="mso-spacerun: yes">  </span>If you set
it to TRUE, a new transaction is started immediately after the <b>Commit</b> or
<b>Rollback</b> (just as if you had called <b>BeginTransaction</b> again).<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;font-family:Helvetica'>Oracle
developers note</span></b><span style='font-size:10.0pt;font-family:Helvetica'>:
If you call <b>BeginTransaction</b> immediately after opening the session and
always set <i>startnew</i> to TRUE, you will have a transactional environment
similar to the Oracle environment to which you are accustomed.) Consider the
following code:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
fragment illustrating Oracle7 transaction details<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>OSession
sess;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>sess.Open();<span
style="mso-spacerun: yes">  </span>// open the default session<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>sess.BeginTransaction();<span
style="mso-spacerun: yes">  </span>// start a transaction<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>ODatabase
db;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>db.Open(sess,
&quot;ExampleDB&quot;, &quot;scott&quot;, &quot;tiger&quot;); <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>ODynaset
dyn1;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>dyn1.Open(db,
&quot;select * from emp order by empno&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
change the first record<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>dyn1.MoveFirst();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>dyn1.StartEdit();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>dyn1.SetFieldValue(&quot;sal&quot;,
7500);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>dyn1.Update();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
open another dynaset<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>ODynaset
dyn2;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>dyn2.Open(db,
&quot;select * from emp order by empno&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>dyn2.MoveFirst();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>long
salary2;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>dyn2.GetFieldValue(&quot;sal&quot;,
&amp;salary2);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
open yet another dynaset<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
open a named session<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>OSession
nameds;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>nameds.Open(sess.GetClient(),
&quot;session2&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>ODatabase
db2;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>db2.Open(nameds,
&quot;ExampleDB&quot;, &quot;scott&quot;, &quot;tiger&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>ODynaset
dyn3;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>dyn3.Open(db2,
&quot;select * from emp order by empno&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>dyn3.MoveFirst();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>long
salary3;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>dyn3.GetFieldValue(&quot;sal&quot;,
&amp;salary3);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
second <b>ODynaset</b> was opened within the same session as the first. The
first <b>ODynaset</b> made a change that has not yet been committed to the
database.<span style="mso-spacerun: yes">  </span>The third <b>ODynaset</b> was
opened on a different session.<span style="mso-spacerun: yes">  </span>What are
the values of salary2 and salary3?<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Because
dyn2 is in the same session as dyn1, it sees the same database state.<span
style="mso-spacerun: yes">  </span>It will see a salary of 7500.<span
style="mso-spacerun: yes">  </span>But dyn3 is in a different session, so it
will not see a salary of 7500; rather, it will see the salary that was in the
field before it was changed.<span style="mso-spacerun: yes">  </span>This
result is independent of whether dyn3 is a part of the same process or not.<span
style="mso-spacerun: yes">  </span>Dyn3 could be on another computer
altogether.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Helvetica'>Example
8: Parameters</span></u></b><span style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>All
of the SQL statements we have used in the previous examples have been entirely
literal.<span style="mso-spacerun: yes">  </span>So, when we wanted the
employee records of Department 20, we use the SQL statement: &quot;select *
from emp where deptno = 20&quot;.<span style="mso-spacerun: yes">  </span>And
if we then wanted the records from Department 10, we used &quot;select * from
emp where deptno = 10&quot;.<span style="mso-spacerun: yes">  </span>This is
inefficient in a number of ways.<span style="mso-spacerun: yes">  </span>It
would be more efficient if we could say: &quot;select * from emp where deptno =
:deptno&quot;, where <i>:deptno</i> is something that can be set to a value at
a later time.<span style="mso-spacerun: yes">  </span>This is precisely what a
parameter is:<span style="mso-spacerun: yes">  </span>A parameter allows you to
introduce variables into the processing of an SQL statement.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Parameters
are attached to an <b>ODatabase</b> object and are accessed by way of an object
called <b>OParameterCollection</b>.<span style="mso-spacerun: yes">  </span>The
<b>OParameterCollection</b> object exposes a variable number of parameters, and
you can add or remove parameters from the collection. (The other collection
types<b>OFieldCollection</b>, <b>OConnectionCollection</b>, and <b>OSessionCollection</b>are
read-only.)<span style="mso-spacerun: yes">  </span>You can create as many
parameters as you want.<span style="mso-spacerun: yes">  </span>At any given
time, any parameters that are auto-enabled will be bound to your SQL
statement.<span style="mso-spacerun: yes">  </span>(For more information,
consult the </span><i><span style='font-size:10.0pt;font-family:Arial'>Oracle
Objects for OLE C++ online help system</span></i><span style='font-size:10.0pt;
font-family:Helvetica'>.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
following code uses a parameter to select different sets of employee records.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
main routine (processes departments)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>ProcessCompany(ODatabase
*db)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// get a list of the department numbers<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ODynaset deptnumbers;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>deptnumbers.Open(*db, &quot;select deptno
from dept order by deptno&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>OField deptnof =
deptnumbers.GetField(&quot;deptno&quot;); // the deptno column<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// set up a &quot;dnumber&quot; parameter
on the database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>OParameterCollection params =
db-&gt;GetParameters();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// create parameter with initial value of
0<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>params.Add(&quot;dnumber&quot;, 0,
OPARAMETER_INVAR, OTYPE_NUMBER);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>OParameter dnumber =
params.GetParameter(&quot;dnumber&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// process every department<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>deptnumbers.MoveFirst();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>while (!deptnumbers.IsEOF())<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>// set the value of the parameter<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>dnumber.SetValue((int) deptnof);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>// process that department<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>ProcessDepartment(db);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>// go to next department<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>deptnumbers.MoveNext();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// all done.<span style="mso-spacerun:
yes">  </span>We don't need the dnumber parameter to be part of<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// the collection anymore so get rid of it<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>params.Remove(&quot;dnumber&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>return;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>void
ProcessDepartment(ODatabase *db)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// open a dynaset of employees for the
current department<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ODynaset emps;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>emps.Open(*db, &quot;select * from emp
where deptno = :dnumber&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// process them all<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>emps.MoveFirst();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>while (!emps.IsEOF())<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>// do something interesting here<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>emps.MoveNext();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>return;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>In
ProcessCompany we set up the parameter that is then used by the subroutine
ProcessDepartment.<span style="mso-spacerun: yes">  </span>We can then write
the ProcessDepartment routine more generally. The department number it is
processing is not hard-coded into it anywhere; rather, it depends on the
parameter &quot;dnumber&quot; existing for the database, which is its argument.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
parameter is created by using the <b>Add</b> method on the <b>ODatabase</b>'s
parameter collection. The parameter's value can be changed at any later
time.<span style="mso-spacerun: yes">  </span>However, changing the parameter's
value does not instantly change the contents of any dynaset that was created
using the parameter.<span style="mso-spacerun: yes">  </span>The parameter's
value is used only at the time that the SQL statement is executed, which is
either at the <b>ExecuteSQL</b> call, the ODynaset <b>Open</b>, or the <b>ODynaset</b>
Refresh.<span style="mso-spacerun: yes">  </span>Finally, when we are finished
with the parameter we can remove it, as in the example, with the <b>OParameterCollection::Remove</b>
method.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Some
details of this example are noteworthy.<span style="mso-spacerun: yes"> 
</span>The <b>ODatabase</b> is passed into the ProcessCompany routine by
address.<span style="mso-spacerun: yes">  </span>It is legal to dereference an <b>ODatabase</b>
address, and that is what we do here.<span style="mso-spacerun: yes"> 
</span>It is also possible (and inexpensive) to pass the <b>ODatabase</b> by
value.<span style="mso-spacerun: yes">  </span>An <b>OField</b> object is used
to get the department number out of the deptnumbers dynaset.<span
style="mso-spacerun: yes">  </span>An <b>OField</b> always gives you, from the
current record, the value of the field to which it is attached. Therefore, as
the dynaset is navigated, the <b>OField</b> objects returns different
values.<span style="mso-spacerun: yes">  </span>Because various cast operators
are overloaded for the <b>OField</b> object, getting the value of the column is
just a matter of casting the <b>OField</b> object.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Here
is a more realistic version of the application from Example 7:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
transfer money from one account to another<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
SQL statement to change a balance in the accounts table<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>static
const char *setbalance =<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>&quot;update accounts set balance =
balance + :amount where accno = :anum&quot;;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>void
Transfer(ODatabase *bankdb,<span style="mso-spacerun: yes">  </span>// the bank
database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">              </span>int debitaccount,<span
style="mso-spacerun: yes">   </span>// account to debit<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">              </span>int creditaccount,<span
style="mso-spacerun: yes">  </span>// account to credit<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">              </span>double amount)<span
style="mso-spacerun: yes">      </span>// amount to transfer<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// we assume the existence of the
parameters &quot;amount&quot; and &quot;anum&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// begin the transaction<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (bankdb-&gt;GetSession().BeginTransaction()
!= OSUCCESS)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return;<span style="mso-spacerun:
yes">  </span>// couldn't start transaction<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// get the parameters<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>OParameter amount =
bankdb-&gt;GetParameters().GetParameter(&quot;amount&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>OParameter anum =
bankdb-&gt;GetParameters().GetParameter(&quot;anum&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// credit the first account<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>anum.SetValue(creditaccount);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>amount.SetValue(amount);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (bankdb-&gt;ExecuteSQL(setbalance) !=
OSUCCESS)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>bankdb-&gt;GetSession().Rollback();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// debit the second account<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>anum.SetValue(debitaccount);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>amount.SetValue(-amount);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (bankdb-&gt;ExecuteSQL(setbalance) !=
OSUCCESS)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>bankdb-&gt;GetSession().Rollback();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// it all worked<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>bankdb-&gt;GetSession().Commit();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>return;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>To
use this routine, you open the bank database and set up the two parameters
&quot;amount&quot; and &quot;anum&quot;.<span style="mso-spacerun: yes"> 
</span>Then for each transfer you call the Transfer routine.<span
style="mso-spacerun: yes">  </span>Notice that the actual SQL statement that is
used is external to the routine.<span style="mso-spacerun: yes">  </span>The
SQL statement could actually be moved into some other code, making this
Transfer routine even more general and maintainable.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Helvetica'>Example
9: An advisory</span></u></b><span style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Occasionally
you need some piece of your code to be notified when something happens to a
dynaseteither navigation or some editing.<span style="mso-spacerun: yes"> 
</span>Typically the dynaset is controlled by one portion of your code and you
monitor it with some other portion of your code (for example, some kind of
general access management package).<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>You
accomplish this monitoring with an advisory. Specifically, you attach an <b>OAdvise</b>
object to an <b>ODynaset</b>.<span style="mso-spacerun: yes">  </span>From then
on, whenever something happens to the dynaset, messages are passed to the <b>OAdvise</b>
object.<span style="mso-spacerun: yes">  </span>The advisory can exert some
control over the dynaset actions (for example, it can cancel them), and it can
monitor what is happening.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
<b>OAdvise</b> class that is part of the Class Library does nothing.<span
style="mso-spacerun: yes">  </span>To get a useful advisory object, you must
create a subclass of <b>OAdvise, </b>and then create an instance of that
subclass.<span style="mso-spacerun: yes">  </span>By overriding a few virtual
functions, you can obtain the functionality you desire.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
<i>samples</i> directory contains a subdirectory called <i>posadv</i>, which
contains the files POSADV.CPP and POSADV.H.<span style="mso-spacerun: yes"> 
</span>These files implement a subclass of <b>OAdvise</b> called <b>PosAdvise</b>.<span
style="mso-spacerun: yes">  </span>The <b>PosAdvise</b> class keeps track of
which record the dynaset is currently on the first record being 0, the next 1,
and so forth.<span style="mso-spacerun: yes">  </span>It cancels the actions
that it sees that would disturb its bookkeeping, such as a <b>DeleteRecord</b>.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Here's
how you use <b>PosAdvise</b>:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
use of PosAdvise class<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
open a dynaset<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>ODynaset
dyn1;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>dyn1.Open(db,
&quot;select * from emp&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
attach a PosAdvise advisory to the dynaset<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>PosAdvise
dynposition;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>dynposition.Open(dyn1);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
move to beginning of dynaset to get dynposition started<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>dyn1.MoveFirst();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
position the dynaset before we do some processing<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>PositionDynaset(dyn1);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
get the position<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>long
startpos = dynposition.GetPosition();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
now do some processing<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>ProcessDynaset(dyn1);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
how many records did we process?<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>long
nrecords = dynposition.GetPosition() - startpos;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
advisory is attached to the dynaset by using the <b>OAdvise Open</b>
method.<span style="mso-spacerun: yes">  </span>It is detached automatically
when it is destroyed, or when <b>Close</b> is called.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Actions
taken with the dynaset cause several things to happen:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Symbol'>·<span style='mso-tab-count:1'>              </span></span><span
style='font-size:10.0pt;font-family:Helvetica'>Before the action takes place,
the <b>ActionRequest</b> methods of all attached advisories are called. The
advisories can cancel the action at that point.<span style="mso-spacerun:
yes">  </span>(The <b>PosAdvise</b> class cancels all actions except <b>MoveFirst</b>,
<b>MoveLast</b>, <b>MoveNext</b>, and <b>MovePrev</b>.)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Symbol'>·<span style='mso-tab-count:1'>              </span></span><span
style='font-size:10.0pt;font-family:Helvetica'>Next, if the action was allowed
by all the advisories, it takes place. <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Symbol'>·<span style='mso-tab-count:1'>              </span></span><span
style='font-size:10.0pt;font-family:Helvetica'>After the action, the <b>ActionNotify</b>
methods of all the attached advisories are called.<span style="mso-spacerun:
yes">  </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Symbol'>·<span style='mso-tab-count:1'>              </span></span><span
style='font-size:10.0pt;font-family:Helvetica'>The <b>PosAdvise</b> class uses
this notification to recalculate the position within the dynaset.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Symbol'>·<span style='mso-tab-count:1'>              </span></span><span
style='font-size:10.0pt;font-family:Helvetica'>Finally, the <b>PosAdvise</b>
class can implement additional methods beyond the bounds of <b>OAdvise</b>.<span
style="mso-spacerun: yes">  </span>It implements the <b>GetPosition</b> method.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in;line-height:12.0pt;
mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Helvetica'>Example
10: OBound of a variable</span></u></b><span style='font-size:10.0pt;
font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>All
of our examples thus far have accessed the data in a dynaset more or less
directly, either through <b>ODynaset</b> methods or using <b>OFields</b>.<span
style="mso-spacerun: yes">  </span>These are not always the most convenient
access methods.<span style="mso-spacerun: yes">  </span>Whenever we navigate to
a new record and are interested in the values of various fields, we need to
fetch the values explicitly.<span style="mso-spacerun: yes">  </span>Further,
when we want to edit a record or add records, there is a moderate amount of
bookkeeping to do.<span style="mso-spacerun: yes">  </span>It would be
convenient to have a &quot;managed dynaset&quot;an object that does the more routine
work for us.<span style="mso-spacerun: yes">  </span>This is the job of the <b>OBound</b>
and <b>OBinder</b> classes.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Users
of Visual Basic will note that the <b>OBinder</b> class plays the role of the
data control (though without any user interface), and subclasses of <b>OBound</b>
play the same role as bound controls.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>You
use an <b>OBinder</b> object much as you would use an <b>ODynaset</b>
object.<span style="mso-spacerun: yes">  </span>It is opened with database and
SQL information, for example. It has methods that enable callers to add and
delete records.<span style="mso-spacerun: yes">  </span>In addition to the work
that a dynaset can do, an <b>OBinder</b> object can keep track of changes that
have been made to fields and can update the database automatically.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;font-family:Helvetica'>OBound</span></b><span
style='font-size:10.0pt;font-family:Helvetica'> objects hold the value of a
single field of a record.<span style="mso-spacerun: yes">  </span>When the
dynaset changes, the value of the <b>OBound</b> instance is changed.<span
style="mso-spacerun: yes">  </span>And when the value of the <b>OBound</b>
instance changes, the value of the corresponding field in the dynaset
changeswith all the appropriate bookkeeping handled.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify;line-height:12.0pt;mso-pagination:
none;mso-layout-grid-align:none;text-autospace:none'><span style='font-size:
10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>In
the OMFC<span style="mso-spacerun: yes">  </span>libraries that are provided
with the Class Library, you can see the use of <b>OBinder</b>s and <b>OBound</b>s.<span
style="mso-spacerun: yes">  </span>Those libraries contain machinery that
creates normal widgets that are also subclasses of <b>OBound</b>.<span
style="mso-spacerun: yes">  </span>As a result, in a GUI program that uses
these specially subclassed widgets, when the user edits the text of a widget
and then navigates to another record, the database editing is done
automatically (see Example 11).<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>In
this example we subclass <b>OBound</b> so that we have an <b>OValue</b>
variable that works with the <b>OBinder</b>-managed dynaset.<span
style="mso-spacerun: yes">  </span>The value of the bound <b>OValue</b> object
is automatically set to the current value of the field with which it is
associated. When the value of the <b>OValue</b> object is changed, the database
is updated to reflect the change. We call this class <b>OBoundVal</b>.<span
style="mso-spacerun: yes">  </span>The implementation of this class is stored
in the <i>samples</i> directory, in the subdirectory <i>boundval</i>.<span
style="mso-spacerun: yes">  </span>Our goal is to be able to write a program
like this:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>//
silly example of use of OBoundVal<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>void
GiveRaises(int minsalary, int saladd)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<span
style="mso-spacerun: yes">  </span>// give everybody with salary below
minsalary a raise of saladd<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// open connection to database<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>ODatabase odb(&quot;ExampleDB&quot;,
&quot;scott&quot;, &quot;tiger&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// construct the OBinder (the managed
dynaset)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>OBinder block;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// set up an OValue bound to the salary
field<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>OBoundVal salary;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>salary.BindToBinder(&amp;block,
&quot;sal&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// Note that we are binding the
&quot;sal&quot; column before opening the<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// query. If the select list for the query
does not contain the<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// &quot;sal&quot; column, the
OBinder.Open() call will fail.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// get the database data for the managed
dynaset<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>block.Open(odb,&quot;select ename, sal,
empno from emp order by empno&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// If we do the binding here and the
column we are attempting to<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// bind does not exist, the following call
will fail:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// salary.BindToBinder(&amp;block,
&quot;sal&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// Note that IsLast() will return TRUE
after MoveNext() attempts to <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// move past the last record. Therefore
the last record does get<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>// processed in the loop<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>while (!block.IsLast())<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>// check the salary of the current
employee<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>if ((int) salary &lt; minsalary)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">            </span>// change the salary<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">            </span>salary = (int) salary + saladd;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>block.MoveNext(); <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>return;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
most interesting part of this sample is the line where the salary is
changed.<span style="mso-spacerun: yes">  </span>It appears that we're setting
the value of a variable.<span style="mso-spacerun: yes">  </span>However, we're
actually changing the value of a field in the database.<span
style="mso-spacerun: yes">  </span>The database gets updated when we navigate
to another record.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
<b>OBound</b> class has three very important methods:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Helvetica'>1.<span style='mso-tab-count:
1'>   </span><b>Refresh</b> is called (by <b>OBinder</b>) to give the <b>OBound</b>
a new value whenever the field's value changes.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Helvetica'>2.<span style='mso-tab-count:
1'>   </span><b>SaveChange</b> is called (by <b>OBinder</b>) whenever the <b>OBound</b>
should save its value to the database.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><span
style='font-size:10.0pt;font-family:Helvetica'>3.<span style='mso-tab-count:
1'>   </span><b>Changed</b> is called by the <b>OBound</b> subclass
implementation to notify <b>OBound</b> and <b>OBinder</b> that the value has
changed.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;font-family:Helvetica'>Refresh</span></b><span
style='font-size:10.0pt;font-family:Helvetica'> and <b>SaveChange</b> must be
implemented by any subclass of <b>OBound</b>. If<span style="mso-spacerun:
yes">  </span>the <b>OBound</b> subclass overrides any of the base class
triggers steps, the overloaded triggers should call the default triggers in the
base class to work correctly. Please see the online documentation for the <b>OBound</b>
class for more details. The implementation for <b>OBoundVal</b> is shown below.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;font-family:Helvetica'>Refresh</span></b><span
style='font-size:10.0pt;font-family:Helvetica'> transfers the value from the
database to the <b>OBound</b> object.<span style="mso-spacerun: yes">  </span><b>SaveChange</b>
transfers the value from the <b>OBound</b> object to the database.<span
style="mso-spacerun: yes">  </span><b>Changed</b> notifies the <b>OBinder</b>
bookkeeping that a change needs to be saved to the database.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;font-family:Helvetica'>OBound</span></b><span
style='font-size:10.0pt;font-family:Helvetica'> is generally used as a
&quot;mix-in&quot; class, adding functionality to some other class
hierarchy.<span style="mso-spacerun: yes">  </span>In this example we add
functionality to the <b>OValue</b> class.<span style="mso-spacerun: yes"> 
</span><b>OBoundVal</b> multiply inherits from <b>OBound</b> and <b>OValue</b>.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Here
is the <b>Refresh</b> method for <b>OBoundVal</b>:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>oresult
OBoundVal::Refresh(const OValue &amp;val)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>OValue::operator=(val);<span
style="mso-spacerun: yes">  </span>// use OValue assignment to get new value<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>return(OSUCCESS);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>When
we are handed a new value, we use <b>OValue</b>'s assignment operator to save
that value.<span style="mso-spacerun: yes">  </span>This routine is called by
the <b>OBinder</b> class.<span style="mso-spacerun: yes">  </span>Here is the <b>SaveChange</b>
method:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>oresult
OBoundVal::SaveChange(void)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>return(OBound::SetValue(*this));<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>We
use the <b>OBound</b> helper routine <b>OBound::SetValue</b> to set the
value.<span style="mso-spacerun: yes">  </span><b>SaveChange</b> is called by
the <b>OBinder</b> class.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>But
how do we set the value of an <b>OBoundVal</b>?<span style="mso-spacerun:
yes">  </span>If we just allow the use of <b>OValue::SetValue</b>, our value
will get changed but the <b>OBoundVal</b> class won't know about it. Further,
we won't tell the machinery that there has been a change, so no change will get
saved to the database.<span style="mso-spacerun: yes">  </span>Here is the
proper implementation for setting the value with an integer argument:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>oresult
OBoundVal::SetValue(int val) <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>if (!Changed())<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">        </span>return(OFAILURE); // couldn't start
change<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>OValue::SetValue(val);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">    </span>return(OSUCCESS);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
first thing we do is to call the <b>Changed</b>() method.<span
style="mso-spacerun: yes">  </span>(The default argument is TRUE, which
indicates that we are making a change.)<span style="mso-spacerun: yes"> 
</span>This sets a flag indicating that this <b>OBound</b> needs to have <b>SaveChange</b>
called on it later, and telling the dynaset to attempt a <b>StartEdit</b>.<span
style="mso-spacerun: yes">  </span>This may fail, for a variety of reasons: the
user may not have permission to edit this database, the record may be locked,
and so forth. Only if the <b>StartEdit </b>is successful do we set the value of
the <b>OBoundVal</b>, using the parent method <b>OValue::SetValue</b>.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>We
need to ensure that we override every <b>OValue</b> method that changes the
object's value, because we need to call <b>Changed</b>() to make the <b>OBinder</b>
bookkeeping aware of any change in the object's value.<span
style="mso-spacerun: yes">  </span>So we must also override the <b>Clear</b>
and <b>operator=</b> methods.<span style="mso-spacerun: yes">  </span>And, for
extra utility, we also provide a number of extra <b>operator=</b> methods so
that the <b>OBoundVal</b> can act like a regular variable as much as possible.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Note
that when we use the <b>operator=</b>, we are copying the <b>OBoundVal</b>'s
value, not the object itself.<span style="mso-spacerun: yes">  </span>There are
subtle differences.<span style="mso-spacerun: yes">  </span>In general,
subclasses of <b>OBound</b> want to copy values of objects rather than the
objects themselves.<span style="mso-spacerun: yes">  </span>For this reason the
copy constructor and assignment operator are not implemented for <b>OBound</b>.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>There
isn't much difference in the way an <b>OBoundVal</b> is used and the way an <b>OField</b>
object is used.<span style="mso-spacerun: yes">  </span>Both return the field's
value for the current record.<span style="mso-spacerun: yes">  </span>Both
enable you to set the field's value.<span style="mso-spacerun: yes"> 
</span>However, the <b>OBoundVal</b> copies a value every time the dynaset
moves to another record, but the <b>OField</b> does not. <b>OField</b> gets the
value out of the dynaset only when it is requested.<span style="mso-spacerun:
yes">  </span>At the same time, If you use <b>OField</b> for editing, you must
manage the <b>StartEdit</b>s and <b>Update</b>s of the dynaset yourself.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;font-family:Helvetica'>OBound
</span></b><span style='font-size:10.0pt;font-family:Helvetica'>becomes much
more useful when the database fields are represented in a user interface.<span
style="mso-spacerun: yes">  </span>Then, the code for handling changes can be
quite distributed, so keeping track of whether <b>StartEdit</b> has been called
or not (for example) would be troublesome.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><u><span style='font-size:10.0pt;font-family:Helvetica'>Example
11: A full emp table editor</span></u></b><span style='font-size:10.0pt;
font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>This
example demonstrates the construction of a complete application.<span
style="mso-spacerun: yes">  </span>We built the application using Microsoft's
Visual C++ development environment, including the MFC framework classes.<span
style="mso-spacerun: yes">  </span>(Users of other development environments will
be able to understand what was built from this example.)<span
style="mso-spacerun: yes">  </span>The sample source is in the EMPEDT
subdirectory (emp table editor).<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
example uses the connection dialog from Example 4, which provides a convenient
interface for the user to log into the Oracle database. The main screen is a
single window containing a form that displays and allows editing of all the
fields of the employee table.<span style="mso-spacerun: yes">  </span>We built
it as an MFC formview.<span style="mso-spacerun: yes">  </span>For editing the
records of the table, we use the OMFC bound control classes (built using the <b>OBinder</b>
and <b>OBound</b> machinery) provided with the Class Library. The example also
includes a feature that generates a unique employee number automatically when
new employee records are added. The amount of code needed to write this
application is surprisingly small.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>This
example is broken up into several sections: <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.75in;text-indent:-1.5in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Helvetica'>Application Layout</span></i><span
style='font-size:10.0pt;font-family:Helvetica'> <span style='mso-tab-count:
1'>         </span>discusses the basic creation of the application<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.75in;text-indent:-1.5in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Helvetica'>Form Creation</span></i><span
style='font-size:10.0pt;font-family:Helvetica'> <span style='mso-tab-count:
1'>               </span>discusses the building of the main screen <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.75in;text-indent:-1.5in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Helvetica'>Binding<span style='mso-tab-count:
2'>                               </span></span></i><span style='font-size:
10.0pt;font-family:Helvetica'>discusses the <b>OBinder</b>-<b>OBound</b> hooks
to the form <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.75in;text-indent:-1.5in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Helvetica'>Buttons</span></i><span
style='font-size:10.0pt;font-family:Helvetica'> <span style='mso-tab-count:
2'>                              </span>discusses the implementation of
navigation buttons<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.75in;text-indent:-1.5in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Helvetica'>Using a Trigger</span></i><span
style='font-size:10.0pt;font-family:Helvetica'> <span style='mso-tab-count:
1'>             </span>discusses the implementation of the new employee number
feature<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.75in;text-indent:-1.5in;line-height:
12.0pt;mso-pagination:none;mso-layout-grid-align:none;text-autospace:none'><i><span
style='font-size:10.0pt;font-family:Helvetica'>Error Handling</span></i><span
style='font-size:10.0pt;font-family:Helvetica'> <span style='mso-tab-count:
1'>               </span>discusses the handling of errors<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><u><span style='font-size:10.0pt;font-family:Helvetica'>Application
Layout </span></u><span style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>We
generated the original application with AppWizard.<span style="mso-spacerun:
yes">  </span>We changed the view class to a form view so that a user interface
could be constructed quickly with the App Studio resource editor. The
application's memory model needs to be set to large.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>We
set the project to link against the oraclm, omfc, ole2, and ole2disp
libraries.<span style="mso-spacerun: yes">  </span>Although you don't need to
interact with OLE to use the class library, the class library uses OLE
internally, so it needs to be linked.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>We
use the connection dialog from Example 4.<span style="mso-spacerun: yes"> 
</span>We added the files LOGDLG.CPP and LOGDLG.H to the project.<span
style="mso-spacerun: yes">  </span>Then we copied the dialog resource
IDD_LOGIND from the LOGDLG.RC resource file to the EMPEDT.RC resource file.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>We
made one simple change to the application class: we placed the class library
initialization call (<b>OStartup</b>) in CEmpedtApp::InitInstance.<span
style="mso-spacerun: yes">  </span>We added a destructor method for the
application class (~CEmpedt) and placed in it a call to <b>OShutdown</b>.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><u><span style='font-size:10.0pt;font-family:Helvetica'>Form
Creation</span></u><span style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
purpose of this application is to edit the <i>emp</i> tableone of the standard
Oracle demonstration tables.<span style="mso-spacerun: yes">  </span>The emp
table has eight fields: ename (employee name), empno (employee number), job (a
keyword describing the employee's job), mgr (the employee ID of the employee's
manager), sal (the employee's salary), comm (a commission to be paid to the
employee, which is often NULL), hiredate (date that the employee was hired) and
deptno (identification number of the employee's departmentused to reference
the <i>dept</i> table).<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>We
built the most straightforward kind of form to edit this table: one text edit
per database field.<span style="mso-spacerun: yes">  </span>We edited the form
in App Studio.<span style="mso-spacerun: yes">  </span>We gave each edit
control a unique ID.<span style="mso-spacerun: yes">  </span>We also placed a
static text item next to each edit control as a label. The IDs of the edit
controls, their order, and what the label says or what relation it has to the
control is completely up to you.<span style="mso-spacerun: yes">  </span>Each
of the edit controls will be attached to a database field by code that you
write, instead of based on assumptions that the Class Wizard might make.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Neither
variables nor message maps were created for the edit controls.<span
style="mso-spacerun: yes">  </span>The edit controls will be completely managed
by the <b>OBoundEdit</b> class.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>We
added a button called Connect to the form.<span style="mso-spacerun: yes"> 
</span>The user presses the Connect button to connect to the Oracle
database.<span style="mso-spacerun: yes">  </span>We used Class Wizard to
create a button-clicked method for the connect button.<span
style="mso-spacerun: yes">  </span>That method is named OnConnect.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><u><span style='font-size:10.0pt;font-family:Helvetica'>Binding</span></u><span
style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
form view class CEmpedtView controls the operation of the form view.<span
style="mso-spacerun: yes">  </span>We added a single <b>OBinder </b>instance as
a member variable to the view class.<span style="mso-spacerun: yes"> 
</span>Its name is m_empblock.<span style="mso-spacerun: yes">  </span>(It is
actually declared as <b>OBinderEmp</b>.<span style="mso-spacerun: yes"> 
</span><b>OBinderEmp</b> is a subclass of <b>OBinder</b>.<span
style="mso-spacerun: yes">  </span>See <i>Error Handling</i> below.)<span
style="mso-spacerun: yes">  </span>That <b>OBinder</b> instance manages the
database connection, the dynaset, and all the bookkeeping needed for editing
the database data.<span style="mso-spacerun: yes">  </span>Next we need an <b>OBound</b>
subclass instance for each of the user-interface widgets that we want bound to
a database field.<span style="mso-spacerun: yes">  </span>Since edit controls
were used for the user interface, we used <b>OBoundEdit </b>instances.<span
style="mso-spacerun: yes">  </span>We added one member variable of type <b>OBoundEdit
</b>to CEmpedtView for each edit control.<span style="mso-spacerun: yes"> 
</span>(The member variable for empno is an instance of a subclass of <b>OBoundEdit</b>;
see <i>Using a Trigger</i> below).<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
edit controls are bound to database fields by calls to methods in the <b>OBound</b>
class and subclasses.<span style="mso-spacerun: yes">  </span>This binding is
done after a database connection is established.<span style="mso-spacerun:
yes">  </span>For simplicity, we placed all the binding code in the <b>OnConnect</b>
method.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
first thing that the <b>OnConnect</b> method does is to connect to the
database.<span style="mso-spacerun: yes">  </span>It does this by calling the
login dialog class:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span>// get an ODatabase object via the
connection dialog<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span>logdlg connd;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span>// get a database object<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span>ODatabase odb =
connd.GetLogin(ODATABASE_PARTIAL_INSERT | ODATABASE_EDIT_NOWAIT);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style="mso-spacerun: yes">      </span>if (!odb.IsOpen())<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span>{ // didn't get a connection - user must
have canceled<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">   
</span>return;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
login dialog prompts the user (via a dialog) for database name, user name, and
password and attempts to connect to the Oracle database.<span
style="mso-spacerun: yes">  </span>When it is successful it returns an open <b>ODatabase</b>
object that refers to the Oracle database.<span style="mso-spacerun: yes"> 
</span>Unsuccessful connection attempts put up an error dialog.<span
style="mso-spacerun: yes">  </span>If the user cancels the login dialog, an
unopened <b>ODatabase </b>object is returned.<span style="mso-spacerun: yes"> 
</span>So <b>OnConnect </b>checks the returned <b>ODatabase </b>to see whether
it is opened. This amounts to a check whether the user canceled from the login
dialog or connected to the Oracle database successfully.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
database is opened with partial insert and nowait options.<span
style="mso-spacerun: yes">  </span>The partial insert option ensures that any
default field values set by the database are properly reflected in the dynaset
when a record is added or edited.<span style="mso-spacerun: yes">  </span>The
nowait option ensures that if another user has a lock on a record that we wish
to edit, we don't wait for that lock to be freed.<span style="mso-spacerun:
yes">  </span>Instead we get an error.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
<b>OBoundEdit </b>controls need to be attached two ways.<span
style="mso-spacerun: yes">  </span>First, they need to be attached to
particular fields that will be available in a particular <b>OBinder</b>.<span
style="mso-spacerun: yes">  </span>Second, they need to be attached to a
particular user interface widget.<span style="mso-spacerun: yes">  </span>We
accomplish the first attachment with a call to <b>OBound::BindToBinder</b>:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span>m_ename.BindToBinder(&amp;m_empblock,
&quot;ename&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>This
call binds the m_ename member variable to the &quot;ename&quot; field available
in <b>OBinder</b>.<span style="mso-spacerun: yes">  </span>The ename field
becomes available once the binder object (m_empblock) is opened.<span
style="mso-spacerun: yes">  </span>It is legal to bind a control to a binder
before the binder's SQL statement has been executed.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>We
accomplish the second attachment with a call to <b>BindToControl</b>, which is
a method available for the classes in the OMFC<span style="mso-spacerun: yes"> 
</span>libraries:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span>m_ename.BindToControl(this, IDC_ENAME);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>This
call binds the m_ename member variable to the user-interface widget identified
by IDC_ENAME in the window identified by &quot;this&quot;.<span
style="mso-spacerun: yes">  </span>Since <b>OConnect </b>is a method of the
formview class, &quot;this&quot; points to the form window.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Once
all the <b>OBoundEdit </b>controls are hooked up the <b>OnConnect </b>method,
we can open the <b>OBinder </b>by executing an SQL statement:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span>m_empblock.Open(odb, &quot;select * from
emp order by empno&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>This
statement creates a dynaset, fetches records from the database, and puts the
correct database field values in all of the edit controls.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><u><span style='font-size:10.0pt;font-family:Helvetica'>Buttons</span></u><span
style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>With
the login dialog and the edit controls implemented, we can build and run the
application.<span style="mso-spacerun: yes">  </span>It works; it shows the
values of the first record.<span style="mso-spacerun: yes">  </span>We added
more buttons to the form to implement additional functionality.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>We
implemented navigation by adding buttons named First, Prev, Next, and
Last.<span style="mso-spacerun: yes">  </span>We used Class Wizard to create a
button-clicked method for each.<span style="mso-spacerun: yes">  </span>The
implementation for each is merely one line of code.<span style="mso-spacerun:
yes">  </span>For instance, to do Next:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span>m_empblock.MoveNext();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Calling
<b>OBinder::MoveNext </b>moves the dynaset to the next record, fetches it from
the database (if necessary), and updates the values of all the edit controls to
display the new record.<span style="mso-spacerun: yes">  </span>It actually
does more than that.<span style="mso-spacerun: yes">  </span>If any of the edit
controls had been used to change the data in a record, <b>OBinder::MoveNext </b>saves
that change to the database before moving to the next record.<span
style="mso-spacerun: yes">  </span>All this is accomplished without writing
anything more than &quot;MoveNext&quot;.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>We
added a few more buttons for record-level edits: Add New, Duplicate, and
Delete.<span style="mso-spacerun: yes">  </span>These were also very simple to
implement, a single line of code for each.<span style="mso-spacerun: yes"> 
</span>Again, the <b>OBinder </b>class takes care of necessary bookkeeping.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><u><span style='font-size:10.0pt;font-family:Helvetica'>Using
a Trigger</span></u><span style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
empno field of the emp table is required to contain a unique number in each
record.<span style="mso-spacerun: yes">  </span>Rather than forcing the user to
create the unique number manually every time a new record is added (with either
Add New or Duplicate), we added code to set the unique number for the user.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Calculating
a unique number is not difficult.<span style="mso-spacerun: yes">  </span>One
way is to ask the Oracle database the current maximum value of empno across all
records.<span style="mso-spacerun: yes">  </span>Adding one to that result
guarantees a unique value, relative to the records currently in the
database.<span style="mso-spacerun: yes">  </span>(A better way is to use a
sequence.<span style="mso-spacerun: yes">  </span>Consult your Oracle
documentation for more information about sequences.).<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>When
should this calculation be made and what should you do with the result?<span
style="mso-spacerun: yes">  </span>The calculation needs to be made every time
a new record is added.<span style="mso-spacerun: yes">  </span>We could do the
calculation every time the Add New or Duplicate button is pressed, and then
change the value of the empno edit control manually.<span style="mso-spacerun:
yes">  </span>Then we would<span style="mso-spacerun: yes">  </span>have to
call <b>OBound::Changed </b>to make sure that the <b>OBoundEdit </b>instance
knew that the value had changed, so that the <b>OBinder </b>would update the
database properly.<span style="mso-spacerun: yes">  </span>This approach would
work, but it is prone to error.<span style="mso-spacerun: yes">  </span>For
example, what happens if we add some other method that also adds a record?<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Instead,
we changed the behavior of the empno edit control.<span style="mso-spacerun:
yes">  </span>Whenever a new record is added to an <b>OBinder </b>dynaset,
every <b>OBound </b>instance bound to that <b>OBinder </b>calls its <b>PreAdd </b>method
before the addition and the <b>PostAdd </b>method after the addition.<span
style="mso-spacerun: yes">  </span>The <b>PostAdd </b>method of <b>OBoundEdit </b>does
nothing.<span style="mso-spacerun: yes">  </span>We subclassed <b>OBoundEdit, </b>,
creating a new class called <b>OBoundEmpnoEdit</b>, and defined a <b>PostAdd </b>method
for it that overrides the default <b>PostAdd</b>.<span style="mso-spacerun:
yes">  </span>We declared the empno member variable as an instance of <b>OBoundEmpnoEdit</b>.<span
style="mso-spacerun: yes">  </span><b>OBoundEmpnoEdit </b>is a subclass of <b>OBoundEdit
</b>and is implemented in EMPEDVW.H and EMPEDVW.CPP.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>At
runtime, whenever a new record is added to the dynaset, the <b>OBoundEmpnoEdit::PostAdd
</b>method is called after the record is added.<span style="mso-spacerun:
yes">  </span>That routine sets the value of itself, which sets the value of
the edit control to the unique number that we have calculated.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Because
the trigger methods are all virtual, the <b>OBinder </b>manages the <b>OBoundEmpnoEdit
</b>as if it were a normal <b>OBound</b>.<span style="mso-spacerun: yes"> 
</span>But we have overridden the default <b>OBound </b>behavior to suit the
needs of the application.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Although
in this particular sample <b>OBoundEmpnoEdit </b>doesnt need any information
from the rest of the program, in a real working program the operation of the
bound control would depend on whatever else is going on.<span
style="mso-spacerun: yes">  </span>The bound object needs a context.<span
style="mso-spacerun: yes">  </span>Just to show one way you can accomplish
that, the sample code also implements a <b>SetContext </b>method that hands
some useful context to the bound object.<span style="mso-spacerun: yes"> 
</span>That context would then be available in its methods for use.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><u><span style='font-size:10.0pt;font-family:Helvetica'>Error
Handling</span></u><span style='font-size:10.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
sample application performs some minimum error handling.<span
style="mso-spacerun: yes">  </span>When an error occurs, it gives the user an
error message.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
first kind of error that can occur is that the class library or some component
upon which it depends cannot be loaded or initialized.<span
style="mso-spacerun: yes">  </span>This error is caught just before we try to
log onto the database.<span style="mso-spacerun: yes">  </span>We use these lines
of code:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'>//
get the default session<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style="mso-spacerun: yes">    </span>OSession defsess(0);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style="mso-spacerun: yes">    </span>if (!defsess.IsOpen())<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style="mso-spacerun: yes">    </span>{ // couldn't get default session?<span
style="mso-spacerun: yes">  </span>Class library isn't working<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style="mso-spacerun: yes">        </span>AfxMessageBox(&quot;Can't start Oracle
class library&quot;);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style="mso-spacerun: yes">        </span>return;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style="mso-spacerun: yes">    </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>If
the class library can't be initialized, then the default <b>OSession </b>object
won't be able to Open.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
next kind of error that can occur is that the <b>OBinder </b>object can't be
opened.<span style="mso-spacerun: yes">  </span>We use this code:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span>// check for error<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span>if (ores != OSUCCESS)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span>{ // we couldn't open the dynaset<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">   
</span>const char *msg;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">   
</span>if (defsess.ServerErrorNumber() != 0)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">   
</span>{ // we have a server error - tell the user that<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">       
</span>msg = defsess.GetServerErrorText();<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">   
</span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">   
</span>else<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">   
</span>{ // no server error - class library isn't working correctly<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">       
</span>msg = &quot;Class library error when opening dynaset.&quot;;<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">   
</span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">   
</span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">   
</span>// give the user a message<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span><span style="mso-spacerun: yes">   
</span>AfxMessageBox(msg);<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Courier'><span
style='mso-tab-count:1'>      </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>where
ores is the result of the <b>OBinder::Open </b>call.<span style="mso-spacerun:
yes">  </span>The most likely errors here are that the SQL statement has an
error (the table doesn't exist or one of the field names is bad) or that the
user doesn't have permission to read the table.<span style="mso-spacerun:
yes">  </span>These are both Oracle errors.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Either
of these two cases would prevent the application from working at all.<span
style="mso-spacerun: yes">  </span>These errors are generally bugs in the
client program that can be avoided with correct coding (getting the SQL
statement right, for instance).<span style="mso-spacerun: yes">  </span>Once
we've opened the <b>OBinder </b>, we will look at records in the table.<span
style="mso-spacerun: yes">  </span>Then we have to start considering other
types of errorsinteractions with other users or lack of system resources.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
most common error occurs when we attempt to edit the value of a field.<span
style="mso-spacerun: yes">  </span>When we try to change the value of the
field, the <b>OBinder </b>instance attempts a <b>StartEdit </b>on the
dynaset.<span style="mso-spacerun: yes">  </span>This can fail for a variety of
reasons.<span style="mso-spacerun: yes">  </span>Most common are: connection to
the server is lost, another user has a lock on the row, or the data in the row
has been changed by another user.<span style="mso-spacerun: yes">  </span>The
first two are reported as Oracle errors.<span style="mso-spacerun: yes"> 
</span>The last is an error specifically generated by the class library to
ensure that database data is not accidentally overwritten.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
difficulty here is that,<span style="mso-spacerun: yes">  </span>with <b>OBoundEdit
</b>controls, the data is changed by typing a key into the edit control.<span
style="mso-spacerun: yes">  </span>Our program isn't making any method calls
whatsoever.<span style="mso-spacerun: yes">  </span>How do we get control to
report the error?<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>The
<b>OBinder </b>class has a method called <b>OnChangedError </b>that can be
overridden.<span style="mso-spacerun: yes">  </span>It is called when an error
occurs while processing the <b>StartEdit </b>on the dynaset.<span
style="mso-spacerun: yes">  </span>The example uses this to inform the user of
an error when a record is starting to be edited.<span style="mso-spacerun:
yes">  </span>The <b>OBinder </b>class is subclassed to <b>OBinderEmp, </b>and
the member variable is declared to be of that type.<span style="mso-spacerun:
yes">  </span>Then when an error occurs as a user types a value into a record,
the <b>OBinderEmp::OnChangedError </b>routine is called.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Finally,
errors can occur during the various operations represented by the buttons on
the form: navigating to various records or adding and deleting records.<span
style="mso-spacerun: yes">  </span>Errors during these operations are all sent
to the view <b>HandleError </b>method.<span style="mso-spacerun: yes">  </span><b>HandleError
</b>takes care of errors that occur when navigating, when adding or deleting
records, or when saving a changed record to the database.<span
style="mso-spacerun: yes">  </span>Any of the navigation methods, or any method
that adds records, saves any changes to the current record before doing its
work (this is actually done through PreOperation trigger functions).<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><b><span style='font-size:10.0pt;font-family:Helvetica'>HandleError
</span></b><span style='font-size:10.0pt;font-family:Helvetica'>reports the
error to the user by fetching (or calculating) the correct error message.<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Oracle8
Personal Edition release 8.0.4<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:12.0pt;mso-pagination:none;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;font-family:Helvetica'>Copyright
1999<o:p></o:p></span></p>

</div>

</body>

</html>

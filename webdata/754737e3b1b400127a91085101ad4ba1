<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <!-- Copyright Accellera Organization, Inc. 2005. All Rights Reserved. -->
 <!-- THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION WHICH IS THE PROPERTY
      OF Accellera Organization, Inc. OR ITS LICENSORS AND IS SUBJECT TO LICENSE TERMS. -->

 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks AutoMap 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="V2.0-img" />
  <meta name="LASTUPDATED" content="Wed Aug 24 16:31:05 2005" />
  <title>assert_transition</title>
  <link rel="StyleSheet" href="default.css" type="text/css" />
  
 </head>

 <body ><br><h1 class="pHead1" >
assert_transition
</h1>    
<a name="wp3690873"> </a><p class="pBody" >
Ensures that the value of a specified expression transitions properly from a start state to the specified next state.  </p>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3690868"> </a><div class="pCellBodyLeft" >
<img src="images/ovl_checkers46.gif" height="107" width="220" border="0" vspace="0" hspace="0" />
</div>    
</td>
    <td><a name="wp3690870"> </a><div class="pCellBodyLeft" >
<span class="cStrong">Parameters</span>: 
</div>    
<a name="wp3772412"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">severity_level </em>
</div>    
<a name="wp3772413"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">width </em>
</div>    
<a name="wp3772414"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">property_type </em>
</div>    
<a name="wp3772415"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">msg </em>
</div>    
<a name="wp3772416"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">coverage_level</em>
</div>    
</td>
    <td><a name="wp3690872"> </a><div class="pCellBodyLeft" >
<span class="cStrong">Class: </span>
</div>    
<a name="wp3772417"> </a><div class="pCellBodyLeft" >
2-cycle assertion
</div>    
</td>
</tr>
</table>
</div>
	
  <p class="pBody" >
</p>    
<a name="wp3690874"> </a><h3 class="pHead3" >
Syntax
</h3>    

<p class="pCodeShiftTop"></p><a name="wp3690875"> </a><pre class="pCode1" >assert_transition 
</pre>    <a name="wp3772418"> </a><pre class="pCode1" >		[#(<em class="cEmphasis">severity_level</em>, <em class="cEmphasis">width, property_type</em>,<em class="cEmphasis"> msg</em>,<em class="cEmphasis"> coverage_level </em>)] 
</pre>    <a name="wp3772419"> </a><pre class="pCode1" >		<em class="cEmphasis">instance_name</em> (<em class="cEmphasis">clk, reset_n, test_expr, start_state, next_state </em>);
</pre>    
<p class="pCodeShiftBottom"></p>
<a name="wp3690919"> </a><h4 class="pHead4" >
Parameters  </h4>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3690878"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3690880"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">severity_level</em>
</div>    
</td>
    <td><a name="wp3690882"> </a><div class="pCellBodyLeft" >
Severity of the failure. Default: &#8216;OVL_ERROR.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3690884"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3690886"> </a><div class="pCellBodyLeft" >
width
</div>    
</td>
    <td><a name="wp3690888"> </a><div class="pCellBodyLeft" >
Width of the <em class="cEmphasis">test_expr</em> argument. Default: 1. 
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3690902"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3690904"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">property_type</em>
</div>    
</td>
    <td><a name="wp3690906"> </a><div class="pCellBodyLeft" >
Property type. Default: &#8216;OVL_ASSERT.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3690908"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3690910"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">msg</em>
</div>    
</td>
    <td><a name="wp3690912"> </a><div class="pCellBodyLeft" >
Error message printed when assertion fails. Default: &#8220;VIOLATION&#8221;.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3690914"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3690916"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">coverage_level</em>
</div>    
</td>
    <td><a name="wp3690918"> </a><div class="pCellBodyLeft" >
Coverage level. Default: &#8216;OVL_COVER_ALL.
</div>    
</td>
</tr>
</table>
</div>
	
  <h4 class="pHead4" >
</h4>    

<a name="wp3690945"> </a><h4 class="pHead4" >
Ports  </h4>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3691176"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3691178"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">clk</em>
</div>    
</td>
    <td><a name="wp3691180"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3691182"> </a><div class="pCellBodyLeft" >
Clock event for the assertion. The checker samples on the rising edge of the clock.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3691184"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3691186"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">reset_n</em>
</div>    
</td>
    <td><a name="wp3691188"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3691190"> </a><div class="pCellBodyLeft" >
Active low synchronous reset signal indicating completed initialization.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3691192"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3691194"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">test_expr</em>
</div>    
</td>
    <td><a name="wp3691196"> </a><div class="pCellBodyLeft" >
[ <em class="cEmphasis">width</em> - 1: 0 ]
</div>    
</td>
    <td><a name="wp3691198"> </a><div class="pCellBodyLeft" >
Expression that should transition to <em class="cEmphasis">next_state</em> on the rising edge of <em class="cEmphasis">clk</em> if its value at the previous rising edge of <em class="cEmphasis">clk</em> is the same as the current value of <em class="cEmphasis">start_state</em>.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3691200"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3691202"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">start_state</em>
</div>    
</td>
    <td><a name="wp3691204"> </a><div class="pCellBodyLeft" >
[ <em class="cEmphasis">width</em> - 1: 0 ]
</div>    
</td>
    <td><a name="wp3691206"> </a><div class="pCellBodyLeft" >
Expression that indicates the start state for the assertion check. If the start state matches the value of <em class="cEmphasis">test_expr</em> on the previous rising edge of <em class="cEmphasis">clk</em>, the check is performed.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3691208"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3691210"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">next_state</em>
</div>    
</td>
    <td><a name="wp3691212"> </a><div class="pCellBodyLeft" >
[ <em class="cEmphasis">width</em> - 1: 0 ]
</div>    
</td>
    <td><a name="wp3691214"> </a><div class="pCellBodyLeft" >
Expression that indicates the only valid next state for the assertion check. If the value of <em class="cEmphasis">test_expr</em> was <em class="cEmphasis">start_state</em> at the previous rising edge of <em class="cEmphasis">clk</em>, then the value of <em class="cEmphasis">test_expr</em> should equal <em class="cEmphasis">next_state</em> on the current rising edge of <em class="cEmphasis">clk</em>.
</div>    
</td>
</tr>
</table>
</div>
	
  <h4 class="pHead4" >
</h4>    

<a name="wp3690946"> </a><h3 class="pHead3" >
Description
</h3>    

<a name="wp3690947"> </a><p class="pBody" >
The <code class="cCodeBody">assert_transition</code> assertion checker checks the expression <span style="font-style: oblique" class="cCodeBodyEmphasis">test_expr</span> and <span style="font-style: oblique" class="cCodeBodyEmphasis">start_state</span> at each rising edge of <span style="font-style: oblique" class="cCodeBodyEmphasis">clk</span> to see if they are the same. If so, the checker evaluates and stores the current value of <span style="font-style: oblique" class="cCodeBodyEmphasis">next_state</span>. At the next rising edge of <span style="font-style: oblique" class="cCodeBodyEmphasis">clk</span>, the checker re-evaluates <em class="cEmphasis">test_expr</em> to see if its value equals the stored value of <span style="font-style: oblique" class="cCodeBodyEmphasis">next_state</span>. If not, the assertion fails. The checker returns to checking <span style="font-style: oblique" class="cCodeBodyEmphasis">start_state</span> in the current cycle (unless a fatal failure occurred)
</p>    
<a name="wp3691291"> </a><p class="pBody" >
The <span style="font-style: oblique" class="cCodeBodyEmphasis">start_state</span> and <span style="font-style: oblique" class="cCodeBodyEmphasis">next_state</span> expressions are verification events that can change. In particular, the same assertion checker can be coded to verify multiple types of transitions of <span style="font-style: oblique" class="cCodeBodyEmphasis">test_expr</span>.
</p>    
<a name="wp3690948"> </a><p class="pBody" >
The checker is useful for ensuring certain control structure values (such as counters and finite-state machine values) transition properly.
</p>    
<a name="wp3690956"> </a><h4 class="pHead4" >
Assertion Check  </h4>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3690951"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3690953"> </a><div class="pCellBodyLeft" >
ASSERT_TRANSITION
</div>    
</td>
    <td><a name="wp3690955"> </a><div class="pCellBodyLeft" >
Expression transitioned from <em class="cEmphasis">start_state</em> to a value different from <em class="cEmphasis">next_state</em>.
</div>    
</td>
</tr>
</table>
</div>
	
  <h4 class="pHead4" >
</h4>    

<a name="wp3690976"> </a><h4 class="pHead4" >
Cover Point  </h4>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3690959"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3690961"> </a><div class="pCellBodyLeft" >
start_state
</div>    
</td>
    <td><a name="wp3690963"> </a><div class="pCellBodyLeft" >
Expression assumed a start state value.
</div>    
</td>
</tr>
</table>
</div>
	
  <h4 class="pHead4" >
</h4>    

<a name="wp3691235"> </a><h3 class="pHead3" >
Notes
</h3>    

<a name="wp3691236"> </a><p class="pNumber" >
 1.	The assertion check compares the current value of <span style="font-style: oblique" class="cCodeBodyEmphasis">test_expr</span> with its previous value. Therefore, checking does not start until the second rising clock edge of <span style="font-style: oblique" class="cCodeBodyEmphasis">clk</span> after <span style="font-style: oblique" class="cCodeBodyEmphasis">reset_n</span> deasserts.
</p>    
<a name="wp3690979"> </a><h3 class="pHead3" >
See also
</h3>    

<p class="pCodeShiftTop"></p><a name="wp3690980"> </a><pre class="pCode2" >assert_no_transition
</pre>    
<p class="pCodeShiftBottom"></p>
<a name="wp3690981"> </a><h3 class="pHead3" >
Example
</h3>    

<p class="pCodeShiftTop"></p><a name="wp3691025"> </a><pre class="pCode2" >  </pre>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td colspan="4" rowspan="1"><a name="wp3690986"> </a><div class="pCellBodyLeft" >
assert_transition #(
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3690994"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3690996"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ERROR, 
</div>    
<a name="wp3772420"> </a><div class="pCellBodyLeft" >
3, 
</div>    
<a name="wp3772421"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ASSERT, 
</div>    
<a name="wp3772422"> </a><div class="pCellBodyLeft" >
&#8220;Error: bad count transition&#8221;, 
</div>    
<a name="wp3772423"> </a><div class="pCellBodyLeft" >
&#8216;OVL_COVER_ALL)
</div>    
</td>
    <td><a name="wp3691000"> </a><div class="pCellBodyLeft" >
// severity_level 
</div>    
<a name="wp3772424"> </a><div class="pCellBodyLeft" >
// width 
</div>    
<a name="wp3772425"> </a><div class="pCellBodyLeft" >
// property_type 
</div>    
<a name="wp3772426"> </a><div class="pCellBodyLeft" >
// msg 
</div>    
<a name="wp3772427"> </a><div class="pCellBodyLeft" >
// coverage_level
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3691002"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3691004"> </a><div class="pCellBodyLeft" >
valid_count (
</div>    
</td>
    <td><a name="wp3691008"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3691010"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3691012"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3691014"> </a><div class="pCellBodyLeft" >
clk,  
</div>    
<a name="wp3772428"> </a><div class="pCellBodyLeft" >
reset_n,  
</div>    
<a name="wp3772429"> </a><div class="pCellBodyLeft" >
count, 
</div>    
<a name="wp3772430"> </a><div class="pCellBodyLeft" >
3&#8217;d3, 
</div>    
<a name="wp3772431"> </a><div class="pCellBodyLeft" >
(sel_8 == 1&#8217;b0) ? 3&#8217;d0 : 3&#8217;d4  );
</div>    
</td>
    <td><a name="wp3691016"> </a><div class="pCellBodyLeft" >
// clock 
</div>    
<a name="wp3772432"> </a><div class="pCellBodyLeft" >
// reset 
</div>    
<a name="wp3772433"> </a><div class="pCellBodyLeft" >
// test_expr 
</div>    
<a name="wp3772434"> </a><div class="pCellBodyLeft" >
// start_state 
</div>    
<a name="wp3772435"> </a><div class="pCellBodyLeft" >
// next_state
</div>    
</td>
</tr>
</table>
</div>
	
  <pre class="pCode2" >
</pre>    
<p class="pCodeShiftBottom"></p>
<a name="wp3691026"> </a><p class="pBody" >
Ensures that <code class="cCodeBody">count</code> transitions from 3&#8217;d3 properly. If <code class="cCodeBody">sel_8</code> is 0, <code class="cCodeBody">count</code> should have transitioned to 3&#8217;d0. Otherwise, <code class="cCodeBody">count</code> should have transitioned to 3&#8217;d4.  </p>    <div align="left"><img src="images/ovl_checkers49.gif" height="109" width="475" border="0" vspace="0" hspace="100" />  </div>	
  <p class="pBody" >
</p>    
<a name="wp3747238"> </a><p class="pBody" >

</p>
<p style="margin-top:10px"> </p>
 <hr noshade="noshade" size="3" />

<center>
 <table border="0" cellspacing="5px" cellpadding="0" width= "100%" bgcolor="#ddf5ff">
 <tr>
  <td>&nbsp;</td>
  <td align="left" valign="top">
    <span style="font-size: 11px ; font-weight: bold; font-family: Arial, Verdana, Helvetica, sans-serif">
    &copy; Accellera Organization, Inc. 2005<br /> All Rights Reserved.</span>
  </td>
  <td align="right" valign="top">
    <span style="font-size: 11px ; font-weight: bold; font-family: Arial, Verdana, Helvetica, sans-serif">
    Standard OVL V1.1a</span>
  </td>
 </tr>
 </table>
</center>
 <hr />


 </body>
</html>



<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 6.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Home page of Xin Li</title>
</head>

<body>

<div align="center">

<TABLE width=600 height="1">
  <TBODY>
  <TR>
    <TD height="44" width="594">
      <font face="Arial"><a href="../../../index.htm">Home</a>&gt;<a href="../../index.htm">CVC</a>&gt;Remote Control</font></TD>
        </TR>
  <TR>
    <TD height="44" width="594">
      <p align="center"><font face="Arial" size="4">Remote Control</font></TD>
        </TR>
  <TR>
    <TD height="194" width="594">

      <p align="left"><span style="font-family: Arial; ">
      <font size="4">Introduction:</font></span></p>

      <p align="left"><span style="font-family: Arial">Remote Control is a 
      testing tool which&nbsp; could simulate running environment of Virtual 
      Classroom. Using it , you could send/receive messages to/from your 
      component and verify&nbsp; functions of your component. </span></p>

      <p align="left"><span style="font-family: Arial"><font size="4">How does 
      it work?</font></span></p>

      <p align="left"><font face="Arial"><img border="0" src="8.jpg" width="496" height="135"></font></p>

      <p align="center"><font face="Arial">Figure 1 Communication between component and&nbsp; remote 
      control</font></p>

      <p align="left"><font face="Arial">Remote Control and Interface Daemon 
      communicate based on Socket, which is&nbsp; programming language 
      INDEPENDENT. In other words, the same universal remote control could talk 
      with any components&nbsp; no matter what language it is implemented by.&nbsp;&nbsp;
      </font></p>

      <p align="left"><font face="Arial">Component and Interface Daemon 
      communicate based on&nbsp; Parameter Passing, which is programming 
      language DEPENDENT. Now it is available in two language: Java and C++.</font></p>

      <p align="left"><font face="Arial">For Java, Interface Daemon is 
      implemented in InterfaceServer.java ( refer to <a href="1.htm">my slide</a>)
      </font></p>

      <p align="left"><font face="Arial">For C++, Click <a href="interface.tar">
      here </a>to download the version executable in Linux with GUN g++ 
      compiler. Thank Mr. Chirag Vaidya for his hard work on this. (refer to
      <a href="http://www.cs.pitt.edu/~cvaidya/cs3650/index.htm">his page</a>)</font></p>

      <p align="left"><font face="Arial">
      <img border="0" src="Info.jpg" width="36" height="37"><font size="4" color="#800000">Note: 
      Keep Interface Damon and component in same language. In other words, if 
      using C++ to code your component, you have to use C++ version of Interface 
      Damon. However, remote controls for both version are same. </font></font></p>

      <p align="left"><font size="4" face="Arial">How to get start?</font></p>

      <p align="left"><font face="Arial">Here is tutorial to run example of 
      authentication component (refer to <a href="11.htm">my slide</a>) .</font></p>

      <p align="left"><font face="Arial">Step 1 : Download the example and unzip 
      it (refer to <a href="13.htm">download page</a>)</font></p>

      <p align="left"><font face="Arial">Step 2: Compile the component using &quot; 
      javac *.java&quot; ( shown in Figure 2)</font></p>

      <p align="center"><img border="0" src="9.jpg" width="481" height="319"></p>

      <p align="center">Figure 2 Compile the component</p>

      <p align="left"><font face="Arial">Step 3 Run&nbsp; Interface Daemon using &quot; java InterfaceServer&quot; 
      ( Shown in Figure 2)</font></p>

      <p align="left"><font face="Arial">Step 4 Keep the Interface Daemon 
      running, go to the same directory and run remote control ( either by 
      clicking in windows or type projRemote.exe in command line). The remote 
      control will turn out as Figure 3.</font></p>

      <p align="center"><img border="0" src="10.jpg" width="462" height="373"></p>

      <p align="center"><font face="Arial">Figure 3 Remote Control without 
      connection</font></p>

      <p align="left"><font face="Arial">Step 5: Server's IP and Port Number 
      refer to IP address and Port of computer where you run Interface Daemon. 
      If you run it on the local machine, please leave the &quot;127.0.0.1&quot; unchanged 
      ( it means the local computer). If you run it on the remote machine, 
      please change this to its IP address. (For example, if Interface Daemon 
      runs on hydrogen.cs.pitt.edu, please fill its IP address 
      here--130.49.220.34).&nbsp; Click connect button at top right of window, 
      remote control will connect with interface daemon. (Figure 4)</font></p>

      <p align="center"><img border="0" src="11.jpg" width="462" height="373"></p>

      <p align="center">Figure 4. Remote Control with connection</p>

      <p align="left">
      <img border="0" src="troubleshooting.jpg" width="40" height="40"><font size="4" color="#800000" face="Arial">Troubleshooting: 
      Error message &quot;Error: Server not available.&quot; shows up while clicking 
      connect if the Interface daemon is not accessible. Please check the 
      following:</font></p>

      <ol>
        <li>

      <p align="left"><font face="Arial" size="4" color="#800000">Interface 
      daemon is running </font></p>

        </li>
        <li>

      <p align="left"><font face="Arial" size="4" color="#800000">The server's 
      IP and port are filled correctly as the machine Interface daemon is 
      running. </font></p>

        </li>
      </ol>

      <p align="left"><font face="Arial">Step 6 Using remote control with 
      connection, you could design messages using button &quot;AddKey&quot; and &quot;DeleteKey&quot;, 
      or load and save messages.&nbsp; To run example, please click load&nbsp; 
      Msg0.XML and click send (shown in Figure 5). Interface Daemon will show 
      the messages it received and sent ( shown in Figure 6). </font></p>

      <p align="center"><img border="0" src="12.jpg" width="462" height="373"></p>

      <p align="center">Figure 5. Remote Control: Load and send messages</p>

      <p align="center"><img border="0" src="13.jpg" width="359" height="249"></p>

      <p align="center">Figure 6 Interface Daemon receiving and sending messages</p>

      <p align="left"><font face="Arial">Step 7 As shown above, Interface Daemon ( such as 
      InterfaceServer.java) just relays messages&nbsp; between Remote Control 
      and component. The logic to process messages is implemented in 
      componentMy.java (refer to <a href="11.htm">my slide</a>). To design your 
      own component, please rewrite this part ( especially for the function 
      processMsg).</font></p>

      <HR color="#808080">

      <TABLE cellSpacing=0 cellPadding=0 width="593" border=0>
        <TBODY>
        <TR>
          <TD width="573"><font face="Arial"><SPAN class=negl>
          Updated:<!--webbot bot="Timestamp" S-Type="EDITED" S-Format="%m/%d/%Y" startspan -->04/12/2005<!--webbot bot="Timestamp" endspan i-checksum="12534" --></SPAN></font></TD>
         
          <TD width="20">
            
          <SPAN class=negl>
          <script language="JavaScript" type="text/javascript" src="http://m1.nedstatbasic.net/basic.js"></script>
          <a target="_blank" href="http://www.nedstatbasic.net/stats?ACr87g1ajNTqzWDBUCeAQEwlWIsw">
          <font face="Arial">
          <IMG height=18 alt="Web page Counter" 
            src="http://m1.nedstatbasic.net/n?id=ACr87g1ajNTqzWDBUCeAQEwlWIsw" 
            width=18 border=0></font></SPAN></TD>
         
        </TR>
        
        </TBODY>
        </TABLE></TD>
        </TR>
        </TBODY>
        </TABLE>
        
        </div>
        
        </body>

</html>
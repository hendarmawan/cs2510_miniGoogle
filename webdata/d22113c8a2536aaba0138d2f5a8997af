<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Chapter 35. Choosing between COM+, EJB, ad CCM</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<META content="Microsoft FrontPage 5.0" name=GENERATOR></HEAD>
<BODY><a href="p9.htm">
<IMG 
src="previous.gif" align=left width="26" height="26"></a>
<a href="p11.htm">
<IMG 
src="next.gif" align=right width="26" height="26"></a> 
<H1>&nbsp;&nbsp;&nbsp; </H1>
<H1>EJB </H1>
<p><font size="5">1. Scalability</font></p>
<ul>
  <li><font size="5">Specification requires EJB servers provide pooling both for 
  database connections and EJB instances</font></li>
  <li><font size="5">Java Database Connectivity (JDBC) 2.0 standard extension is 
  essential for scalability</font></li>
  <li><font size="5">The container must prevent other transactions from entering 
  the EJB until the first transaction commits or aborts </font></li>
  <li><font size="5">Caching of entity EJBs is useful since they can be easily 
  retrieved if they are requested again shortly after being returned to the pool</font></li>
</ul>
<p><font size="5">2. State Management</font></p>
<ul>
  <li><font size="5">Stateless session beans are equivalent to typical COM+ 
  components and retain no state between method calls</font></li>
  <li><font size="5">Stateful session beans retain state between method calls 
  until container passivates them, such as shopping cart </font></li>
  <li><font size="5">An entity bean is stateful and that state persists over 
  time</font></li>
  <li><font size="5">Using Container Managed Persistence (CMP) for entity beans 
  can make state management easier</font></li>
  <li><font size="5">Simple entity beans will map to a single row in a single 
  database table</font></li>
  <li><font size="5">Persistence Manager facilitates complex data mapping to 
  ensure CMP entity beans are truly portable</font></li>
</ul>
<p><font size="5">3. Simpler Security</font></p>
<ul>
  <li><font size="5">Based on underlying J2EE platform, which uses the security 
  infrastructure of the underlying OS</font></li>
  <li><font size="5">Role-based, same as COM+</font></li>
  <li><font size="5">Each resource in the pool must share the same security, 
  same as COM+</font></li>
</ul>
<p><font size="5">4. Fault Tolerance</font></p>
<ul>
  <li><font size="5">Load balancing is provided by many vendors</font></li>
  <li><font size="5">Provided by home interface implementation</font></li>
  <li><font size="5">Provided by registration of factories in the Java Naming 
  and Directory Interface (JNDI)&nbsp; </font></li>
</ul>
<p><font size="5">5. Ease of Development</font></p>
<ul>
  <li><font size="5">Allow bean producers to concentrate on writing business 
  logic</font></li>
  <li><font size="5">Declarative attributes are provided to reduce the amount of 
  security or transaction code </font></li>
  <li><font size="5">An EJB producer must implement the life cycle methods, much 
  of which can be generated by developer tools </font></li>
</ul>
<p><font size="5">6. Help With Deployment</font></p>

<ul>
  <li><font size="5">An EJB-JAR (Java ARchive) file is created containing the 
  bean, helper classes, other resources, and a deployment descriptor</font></li>
</ul>
<p><font size="5">Example: </font><font face="Arial"><b>
<a href="http://ellada.cs.pitt.edu:7777/beaver/pubdb.jsp">Publication Database 
Search Engine </a></b></font></p>

</BODY></HTML>

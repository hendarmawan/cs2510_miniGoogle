<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <!-- Copyright Accellera Organization, Inc. 2005. All Rights Reserved. -->
 <!-- THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION WHICH IS THE PROPERTY
      OF Accellera Organization, Inc. OR ITS LICENSORS AND IS SUBJECT TO LICENSE TERMS. -->

 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks AutoMap 7.0.5.1025" />
  <meta name="TEMPLATEBASE" content="V2.0-img" />
  <meta name="LASTUPDATED" content="Wed Aug 24 16:31:05 2005" />
  <title>assert_always_on_edge</title>
  <link rel="StyleSheet" href="default.css" type="text/css" />
  
 </head>

 <body ><br><h1 class="pHead1" >
assert_always_on_edge
</h1>    
<a name="wp3682120"> </a><p class="pBody" >
Ensures that the value of a specified expression is TRUE when a sampling event undergoes a specified transition.  </p>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3682115"> </a><div class="pCellBodyLeft" >
<img src="images/ovl_checkersa25.gif" height="107" width="220" border="0" vspace="0" hspace="0" />
</div>    
</td>
    <td><a name="wp3682117"> </a><div class="pCellBodyLeft" >
<span class="cStrong">Parameters</span>: 
</div>    
<a name="wp3771520"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">severity_level </em>
</div>    
<a name="wp3771521"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">edge_type </em>
</div>    
<a name="wp3771522"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">property_type </em>
</div>    
<a name="wp3771523"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">msg </em>
</div>    
<a name="wp3771524"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">coverage_level</em>
</div>    
</td>
    <td><a name="wp3682119"> </a><div class="pCellBodyLeft" >
<span class="cStrong">Class: </span>
</div>    
<a name="wp3771525"> </a><div class="pCellBodyLeft" >
2-cycle assertion
</div>    
</td>
</tr>
</table>
</div>
	
  <p class="pBody" >
</p>    
<a name="wp3573286"> </a><h3 class="pHead3" >
Syntax
</h3>    

<p class="pCodeShiftTop"></p><a name="wp3565823"> </a><pre class="pCode1" >assert_always_on_edge 
</pre>    <a name="wp3771526"> </a><pre class="pCode1" >		[#(<em class="cEmphasis">severity_level</em>,<em class="cEmphasis"> edge_type, property_type</em>,<em class="cEmphasis"> msg</em>,<em class="cEmphasis"> coverage_level </em>)] 
</pre>    <a name="wp3771527"> </a><pre class="pCode1" >		<em class="cEmphasis">instance_name</em> (<em class="cEmphasis">clk, reset_n, sampling_event, test_expr </em>);
</pre>    
<p class="pCodeShiftBottom"></p>
<a name="wp3573371"> </a><h4 class="pHead4" >
Parameters  </h4>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3661608"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3661610"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">severity_level</em>
</div>    
</td>
    <td><a name="wp3661612"> </a><div class="pCellBodyLeft" >
Severity of the failure. Default: &#8216;OVL_ERROR.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3684332"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3684334"> </a><div class="pCellBodyLeft" >
edge_type
</div>    
</td>
    <td><a name="wp3684336"> </a><div class="pCellBodyLeft" >
Transition type for sampling event: &#8216;OVL_NOEDGE, &#8216;OVL_POSEDGE, &#8216;OVL_NEGEDGE or &#8216;OVL_ANYEDGE. Default: &#8216;OVL_NOEDGE.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3661632"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3661634"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">property_type</em>
</div>    
</td>
    <td><a name="wp3661636"> </a><div class="pCellBodyLeft" >
Property type. Default: &#8216;OVL_ASSERT.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3661638"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3661640"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">msg</em>
</div>    
</td>
    <td><a name="wp3661642"> </a><div class="pCellBodyLeft" >
Error message printed when assertion fails. Default: &#8220;VIOLATION&#8221;.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3661644"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3661646"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">coverage_level</em>
</div>    
</td>
    <td><a name="wp3661648"> </a><div class="pCellBodyLeft" >
Coverage level. Default: &#8216;OVL_COVER_ALL.
</div>    
</td>
</tr>
</table>
</div>
	
  <h4 class="pHead4" >
</h4>    

<a name="wp3573329"> </a><h4 class="pHead4" >
Ports  </h4>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3588225"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3588227"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">clk</em>
</div>    
</td>
    <td><a name="wp3661672"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3588229"> </a><div class="pCellBodyLeft" >
Clock event for the assertion. The checker samples on the rising edge of the clock.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3588231"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3588233"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">reset_n</em>
</div>    
</td>
    <td><a name="wp3661674"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3588235"> </a><div class="pCellBodyLeft" >
Active low synchronous reset signal indicating completed initialization.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3684440"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3684442"> </a><div class="pCellBodyLeft" >
sampling_event
</div>    
</td>
    <td><a name="wp3684446"> </a><div class="pCellBodyLeft" >
Expression that (along with <em class="cEmphasis">edge_type</em>) identifies when to evaluate and test <em class="cEmphasis">test_expr</em>.
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3588237"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3588239"> </a><div class="pCellBodyLeft" >
<em class="cEmphasis">test_expr</em>
</div>    
</td>
    <td><a name="wp3661676"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3588241"> </a><div class="pCellBodyLeft" >
Expression that should evaluate to TRUE on the rising clock edge.
</div>    
</td>
</tr>
</table>
</div>
	
  <h4 class="pHead4" >
</h4>    

<a name="wp3677981"> </a><h3 class="pHead3" >
Description
</h3>    

<a name="wp3677982"> </a><p class="pBody" >
The <code class="cCodeBody">assert_always_on_edge</code> assertion checker checks the single-bit expression <span style="font-style: oblique" class="cCodeBodyEmphasis">sampling_event</span> for a particular type of transition. If the specified transition of the sampling event occurs, the single-bit expression <span style="font-style: oblique" class="cCodeBodyEmphasis">test_expr</span> is evaluated at the rising edge of <span style="font-style: oblique" class="cCodeBodyEmphasis">clk</span> to verify the expression does not evaluate to FALSE. 
</p>    
<a name="wp3684969"> </a><p class="pBody" >
The <span style="font-style: oblique" class="cCodeBodyEmphasis">edge_type</span> parameter determines which type of transition of <span style="font-style: oblique" class="cCodeBodyEmphasis">sampling_event</span> initiates the check:
</p>    
<a name="wp3685000"> </a><p class="pBullet1" >
<img src="images/bullet1.gif" align="top" />&#8216;OVL_POSEDGE performs the check if <span style="font-style: oblique" class="cCodeBodyEmphasis">sampling_event</span> transitions from FALSE to TRUE.
</p>    
<a name="wp3685005"> </a><p class="pBullet1" >
<img src="images/bullet1.gif" align="top" />&#8216;OVL_NEGEDGE performs the check if <span style="font-style: oblique" class="cCodeBodyEmphasis">sampling_event</span> transitions from TRUE to FALSE.
</p>    
<a name="wp3685013"> </a><p class="pBullet1" >
<img src="images/bullet1.gif" align="top" />&#8216;OVL_ANYEDGE performs the check if <span style="font-style: oblique" class="cCodeBodyEmphasis">sampling_event</span> transitions from TRUE to FALSE or from FALSE to TRUE.
</p>    
<a name="wp3684998"> </a><p class="pBullet1" >
<img src="images/bullet1.gif" align="top" />&#8216;OVL_NOEDGE always initiates the check. This is the default value of <span style="font-style: oblique" class="cCodeBodyEmphasis">edge_type</span>. In this case, <span style="font-style: oblique" class="cCodeBodyEmphasis">sampling_event</span> is never sampled and the checker has the same functionality as <code class="cCodeBody">assert_always</code>.
</p>    
<a name="wp3678330"> </a><p class="pBody" >
The checker is a variant of <code class="cCodeBody">assert_always</code>, with the added capability of qualifying the assertion with a sampling event transition. This checker is useful when events are identified by their transition in addition to their logical state.
</p>    
<a name="wp3678002"> </a><h4 class="pHead4" >
Assertion Check  </h4>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td><a name="wp3677985"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3677987"> </a><div class="pCellBodyLeft" >
ASSERT_ALWAYS_ON_EDGE
</div>    
</td>
    <td><a name="wp3677989"> </a><div class="pCellBodyLeft" >
Expression evaluated to FALSE when the sampling event transitioned as specified by <em class="cEmphasis">edge_type</em>.
</div>    
</td>
</tr>
</table>
</div>
	
  <h4 class="pHead4" >
</h4>    

<a name="wp3678034"> </a><h4 class="pHead4" >
Cover Points
</h4>    

<a name="wp3678298"> </a><p class="pBody" >
none
</p>    
<a name="wp3678047"> </a><h3 class="pHead3" >
See also
</h3>    

<p class="pCodeShiftTop"></p><a name="wp3678048"> </a><pre class="pCode2" >assert_always, assert_implication, assert_never, assert_proposition
</pre>    
<p class="pCodeShiftBottom"></p>
<a name="wp3678049"> </a><h3 class="pHead3" >
Examples
</h3>    

<a name="wp3757066"> </a><p class="pBody" >
  </p>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td colspan="4" rowspan="1"><a name="wp3757027"> </a><div class="pCellBodyLeft" >
assert_always_on_edge #(
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3757035"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3757037"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ERROR, 
</div>    
<a name="wp3771528"> </a><div class="pCellBodyLeft" >
&#8216;OVL_POSEDGE, 
</div>    
<a name="wp3771529"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ASSERT, 
</div>    
<a name="wp3771530"> </a><div class="pCellBodyLeft" >
&#8220;Error: new req when FSM not ready&#8221;, 
</div>    
<a name="wp3771531"> </a><div class="pCellBodyLeft" >
&#8216;OVL_COVER_ALL)
</div>    
</td>
    <td><a name="wp3757041"> </a><div class="pCellBodyLeft" >
// severity_level 
</div>    
<a name="wp3771532"> </a><div class="pCellBodyLeft" >
// edge_type 
</div>    
<a name="wp3771533"> </a><div class="pCellBodyLeft" >
// property_type 
</div>    
<a name="wp3771534"> </a><div class="pCellBodyLeft" >
// msg 
</div>    
<a name="wp3771535"> </a><div class="pCellBodyLeft" >
// coverage_level
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3757043"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3757045"> </a><div class="pCellBodyLeft" >
request_when_FSM_idle (
</div>    
</td>
    <td><a name="wp3757049"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3757051"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3757053"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3757055"> </a><div class="pCellBodyLeft" >
clk,  
</div>    
<a name="wp3771536"> </a><div class="pCellBodyLeft" >
reset_n,  
</div>    
<a name="wp3771537"> </a><div class="pCellBodyLeft" >
req, 
</div>    
<a name="wp3771538"> </a><div class="pCellBodyLeft" >
state == &#8216;IDLE);
</div>    
</td>
    <td><a name="wp3757057"> </a><div class="pCellBodyLeft" >
// clock 
</div>    
<a name="wp3771539"> </a><div class="pCellBodyLeft" >
// reset 
</div>    
<a name="wp3771540"> </a><div class="pCellBodyLeft" >
// sampling_event 
</div>    
<a name="wp3771541"> </a><div class="pCellBodyLeft" >
// test_expr
</div>    
</td>
</tr>
</table>
</div>
	
  <p class="pBody" >
</p>    
<a name="wp3757067"> </a><p class="pBody" >
Ensures that <code class="cCodeBody">(state == &#8216;IDLE)</code> is TRUE at each rising edge of <code class="cCodeBody">clk</code> when <code class="cCodeBody">req</code> transitions from FALSE to TRUE.  </p>    <div align="left"><img src="images/ovl_checkersa12.gif" height="99" width="344" border="0" vspace="0" hspace="100" />  </div>	
  <p class="pBody" >
</p>    
<a name="wp3757099"> </a><p class="pBody" >

</p>    
<a name="wp3757160"> </a><p class="pBody" >
  </p>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td colspan="4" rowspan="1"><a name="wp3757121"> </a><div class="pCellBodyLeft" >
assert_always_on_edge #(
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3757129"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3757131"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ERROR, 
</div>    
<a name="wp3771542"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ANYEDGE, 
</div>    
<a name="wp3771543"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ASSERT, 
</div>    
<a name="wp3771544"> </a><div class="pCellBodyLeft" >
&#8220;Error: req transition when FSM not idle&#8221;, 
</div>    
<a name="wp3771545"> </a><div class="pCellBodyLeft" >
&#8216;OVL_COVER_ALL)
</div>    
</td>
    <td><a name="wp3757135"> </a><div class="pCellBodyLeft" >
// severity_level 
</div>    
<a name="wp3771546"> </a><div class="pCellBodyLeft" >
// edge_type 
</div>    
<a name="wp3771547"> </a><div class="pCellBodyLeft" >
// property_type 
</div>    
<a name="wp3771548"> </a><div class="pCellBodyLeft" >
// msg 
</div>    
<a name="wp3771549"> </a><div class="pCellBodyLeft" >
// coverage_level
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3757137"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3757139"> </a><div class="pCellBodyLeft" >
req_transition_when_FSM_idle (
</div>    
</td>
    <td><a name="wp3757143"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3757145"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3757147"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3757149"> </a><div class="pCellBodyLeft" >
clk,  
</div>    
<a name="wp3771550"> </a><div class="pCellBodyLeft" >
reset_n,  
</div>    
<a name="wp3771551"> </a><div class="pCellBodyLeft" >
req, 
</div>    
<a name="wp3771552"> </a><div class="pCellBodyLeft" >
state == &#8216;IDLE);
</div>    
</td>
    <td><a name="wp3757151"> </a><div class="pCellBodyLeft" >
// clock 
</div>    
<a name="wp3771553"> </a><div class="pCellBodyLeft" >
// reset 
</div>    
<a name="wp3771554"> </a><div class="pCellBodyLeft" >
// sampling_event 
</div>    
<a name="wp3771555"> </a><div class="pCellBodyLeft" >
// test_expr
</div>    
</td>
</tr>
</table>
</div>
	
  <p class="pBody" >
</p>    
<a name="wp3757192"> </a><p class="pBody" >
Ensures that <code class="cCodeBody">(state == &#8216;IDLE)</code> is TRUE at each rising edge of <code class="cCodeBody">clk</code> when <code class="cCodeBody">req</code> transitions from TRUE to FALSE or from FALSE to TRUE.  </p>    <div align="left"><img src="images/ovl_checkersa2.gif" height="96" width="344" border="0" vspace="0" hspace="100" />  </div>	
  <p class="pBody" >
</p>    
<a name="wp3757511"> </a><p class="pBody" >
  </p>    <div align="left" class="tbl">
<table border="0">
  <caption></caption>
  <tr align="left" valign="top">    <td colspan="4" rowspan="1"><a name="wp3757472"> </a><div class="pCellBodyLeft" >
assert_always_on_edge #(
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3757480"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3757482"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ERROR, 
</div>    
<a name="wp3771556"> </a><div class="pCellBodyLeft" >
&#8216;OVL_NOEDGE, 
</div>    
<a name="wp3771557"> </a><div class="pCellBodyLeft" >
&#8216;OVL_ASSERT, 
</div>    
<a name="wp3771558"> </a><div class="pCellBodyLeft" >
&#8220;Error: req when FSM not idle&#8221;, 
</div>    
<a name="wp3771559"> </a><div class="pCellBodyLeft" >
&#8216;OVL_COVER_ALL)
</div>    
</td>
    <td><a name="wp3757486"> </a><div class="pCellBodyLeft" >
// severity_level 
</div>    
<a name="wp3771560"> </a><div class="pCellBodyLeft" >
// edge_type 
</div>    
<a name="wp3771561"> </a><div class="pCellBodyLeft" >
// property_type 
</div>    
<a name="wp3771562"> </a><div class="pCellBodyLeft" >
// msg 
</div>    
<a name="wp3771563"> </a><div class="pCellBodyLeft" >
// coverage_level
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3757488"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td colspan="2" rowspan="1"><a name="wp3757490"> </a><div class="pCellBodyLeft" >
req_when_FSM_idle (
</div>    
</td>
    <td><a name="wp3757494"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp3757496"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3757498"> </a><div class="pCellBodyLeft" >
&#160;
</div>    
</td>
    <td><a name="wp3757500"> </a><div class="pCellBodyLeft" >
clk,  
</div>    
<a name="wp3771564"> </a><div class="pCellBodyLeft" >
reset_n,  
</div>    
<a name="wp3771565"> </a><div class="pCellBodyLeft" >
1&#8217;b0, 
</div>    
<a name="wp3771566"> </a><div class="pCellBodyLeft" >
!req || (state == &#8216;IDLE) );
</div>    
</td>
    <td><a name="wp3757502"> </a><div class="pCellBodyLeft" >
// clock 
</div>    
<a name="wp3771567"> </a><div class="pCellBodyLeft" >
// reset 
</div>    
<a name="wp3771568"> </a><div class="pCellBodyLeft" >
// sampling_event 
</div>    
<a name="wp3771569"> </a><div class="pCellBodyLeft" >
// test_expr
</div>    
</td>
</tr>
</table>
</div>
	
  <p class="pBody" >
</p>    
<a name="wp3757543"> </a><p class="pBody" >
Ensures that <code class="cCodeBody">(!req || (state == &#8216;IDLE))</code> is TRUE at each rising edge of <code class="cCodeBody">clk</code>.  </p>    <div align="left"><img src="images/ovl_checkers75.gif" height="96" width="307" border="0" vspace="0" hspace="100" />  </div>	
  <p class="pBody" >
</p>    
<a name="wp3757458"> </a><p class="pBody" >

</p>    
<a name="wp3679095"> </a><p class="pBody" >

</p>    
<a name="wp3678218"> </a><p class="pBody" >

</p>
<p style="margin-top:10px"> </p>
 <hr noshade="noshade" size="3" />

<center>
 <table border="0" cellspacing="5px" cellpadding="0" width= "100%" bgcolor="#ddf5ff">
 <tr>
  <td>&nbsp;</td>
  <td align="left" valign="top">
    <span style="font-size: 11px ; font-weight: bold; font-family: Arial, Verdana, Helvetica, sans-serif">
    &copy; Accellera Organization, Inc. 2005<br /> All Rights Reserved.</span>
  </td>
  <td align="right" valign="top">
    <span style="font-size: 11px ; font-weight: bold; font-family: Arial, Verdana, Helvetica, sans-serif">
    Standard OVL V1.1a</span>
  </td>
 </tr>
 </table>
</center>
 <hr />


 </body>
</html>


